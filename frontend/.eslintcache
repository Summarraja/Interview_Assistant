[{"E:\\FYP\\Interview_Assistant\\frontend\\src\\index.js":"1","E:\\FYP\\Interview_Assistant\\frontend\\src\\App.js":"2","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\AppTheme\\theme.js":"3","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\auth-context.js":"4","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\auth-hook.js":"5","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\ResetPassword.js":"6","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\MainNavigation.js":"7","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\UserProfile.js":"8","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\EmailVerification.js":"9","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\signUp.js":"10","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Auth.js":"11","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\Interview.js":"12","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\pages\\Faq.js":"13","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CreateInterview.js":"14","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\pages\\Chat.js":"15","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesList.js":"16","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\Navbar.js":"17","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewForm.js":"18","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewCandidates.js":"19","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\User.js":"20","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\RightTopBar.js":"21","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\MessageBox.js":"22","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ChatSearch.js":"23","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\LeftTopBar.js":"24","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationList.js":"25","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\BottomBar.js":"26","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesDialogItems.js":"27","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\Message.js":"28","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserItem.js":"29","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewList.js":"30","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\AuthForm.js":"31","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\http-hook.js":"32","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\LoadingSpinner.js":"33","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\SignupForm.js":"34","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewItems.js":"35","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\RadioButtons.js":"36","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\DatePicker.js":"37","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\SelectBox.js":"38","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewMenu.js":"39","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\TimePicker.js":"40","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\DeleteInterview.js":"41","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CancelInterview.js":"42","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqCollection.js":"43","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqList.js":"44","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqListItems.js":"45","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewDetails.js":"46","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\ViewInterview.js":"47","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\CodeVerification.js":"48","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\pages\\Certificate.js":"49","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CeritificateList.js":"50","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateItems.js":"51","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Pages\\Resume.js":"52","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\CreateResume.js":"53","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\ResumeForm.js":"54"},{"size":364,"mtime":1612974102581,"results":"55","hashOfConfig":"56"},{"size":3344,"mtime":1615402856239,"results":"57","hashOfConfig":"56"},{"size":697,"mtime":1615396125920,"results":"58","hashOfConfig":"56"},{"size":202,"mtime":1615364342618,"results":"59","hashOfConfig":"56"},{"size":1715,"mtime":1615396125932,"results":"60","hashOfConfig":"56"},{"size":4849,"mtime":1614582259074,"results":"61","hashOfConfig":"56"},{"size":6780,"mtime":1615403578827,"results":"62","hashOfConfig":"56"},{"size":328,"mtime":1615396125991,"results":"63","hashOfConfig":"56"},{"size":5560,"mtime":1615361317239,"results":"64","hashOfConfig":"56"},{"size":5989,"mtime":1615355613819,"results":"65","hashOfConfig":"56"},{"size":5348,"mtime":1615396125975,"results":"66","hashOfConfig":"56"},{"size":5130,"mtime":1615396125801,"results":"67","hashOfConfig":"56"},{"size":3276,"mtime":1615184601121,"results":"68","hashOfConfig":"56"},{"size":3460,"mtime":1615202323824,"results":"69","hashOfConfig":"56"},{"size":6762,"mtime":1615350950617,"results":"70","hashOfConfig":"56"},{"size":9455,"mtime":1615201013279,"results":"71","hashOfConfig":"56"},{"size":7359,"mtime":1615399050883,"results":"72","hashOfConfig":"56"},{"size":6372,"mtime":1615198211399,"results":"73","hashOfConfig":"56"},{"size":2284,"mtime":1615201007933,"results":"74","hashOfConfig":"56"},{"size":952,"mtime":1615396125948,"results":"75","hashOfConfig":"56"},{"size":1069,"mtime":1615184601105,"results":"76","hashOfConfig":"56"},{"size":523,"mtime":1615350950617,"results":"77","hashOfConfig":"56"},{"size":374,"mtime":1614424869638,"results":"78","hashOfConfig":"56"},{"size":958,"mtime":1615184601097,"results":"79","hashOfConfig":"56"},{"size":1413,"mtime":1615350950609,"results":"80","hashOfConfig":"56"},{"size":1533,"mtime":1615350950605,"results":"81","hashOfConfig":"56"},{"size":1916,"mtime":1614441049446,"results":"82","hashOfConfig":"56"},{"size":531,"mtime":1615350950613,"results":"83","hashOfConfig":"56"},{"size":6798,"mtime":1615403099909,"results":"84","hashOfConfig":"56"},{"size":2512,"mtime":1615402515319,"results":"85","hashOfConfig":"56"},{"size":4329,"mtime":1615364342622,"results":"86","hashOfConfig":"56"},{"size":1604,"mtime":1615355613794,"results":"87","hashOfConfig":"56"},{"size":583,"mtime":1613752728791,"results":"88","hashOfConfig":"56"},{"size":11844,"mtime":1615350950754,"results":"89","hashOfConfig":"56"},{"size":5080,"mtime":1615279575142,"results":"90","hashOfConfig":"56"},{"size":1442,"mtime":1615202487973,"results":"91","hashOfConfig":"56"},{"size":597,"mtime":1615364536960,"results":"92","hashOfConfig":"56"},{"size":1818,"mtime":1615364554871,"results":"93","hashOfConfig":"56"},{"size":3940,"mtime":1615271123867,"results":"94","hashOfConfig":"56"},{"size":604,"mtime":1615357570034,"results":"95","hashOfConfig":"56"},{"size":1927,"mtime":1615137943433,"results":"96","hashOfConfig":"56"},{"size":1999,"mtime":1615139649664,"results":"97","hashOfConfig":"56"},{"size":896,"mtime":1615350950621,"results":"98","hashOfConfig":"56"},{"size":378,"mtime":1615350950625,"results":"99","hashOfConfig":"56"},{"size":1791,"mtime":1615351098044,"results":"100","hashOfConfig":"56"},{"size":5915,"mtime":1615315680446,"results":"101","hashOfConfig":"56"},{"size":1618,"mtime":1615315762327,"results":"102","hashOfConfig":"56"},{"size":10472,"mtime":1615355613816,"results":"103","hashOfConfig":"56"},{"size":3236,"mtime":1615364111329,"results":"104","hashOfConfig":"56"},{"size":1514,"mtime":1615363924577,"results":"105","hashOfConfig":"56"},{"size":3722,"mtime":1615364266042,"results":"106","hashOfConfig":"56"},{"size":175,"mtime":1615402856114,"results":"107","hashOfConfig":"56"},{"size":5299,"mtime":1615402856089,"results":"108","hashOfConfig":"56"},{"size":12705,"mtime":1615402856102,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"o6sf80",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"112"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\FYP\\Interview_Assistant\\frontend\\src\\index.js",[],["243","244"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\App.js",["245","246"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\AppTheme\\theme.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\auth-context.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\auth-hook.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\ResetPassword.js",["247","248","249"],"import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword() {\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"20px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"#2D5F5D\",\r\n  };\r\n  const initialValues = {\r\n    username: \"\",\r\n  };\r\n  const ButtonStyle = {\r\n    minWidth: \"160px\",\r\n    minHeight: \"40px\",\r\n    margin: \"10px 8px \",\r\n  };\r\n  const validationSchema = yup.object().shape({\r\n    NewPass: yup\r\n    .string()\r\n    .min(8, \"Password must be atleast 8 characters long\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/,\r\n      \"Must contain One Number and One Special Case Character\"\r\n    ),\r\n  \r\n    ConfirmPass: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"NewPass\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  // const onSubmitHandler = (values, props) => {\r\n  //   console.log(\"Has been submitted\");\r\n  //   console.log(values);\r\n  //   window.location = '/login';\r\n  // setTimeout(() => {\r\n  //    props.resetForm();\r\n  //  props.setSubmitting(false);\r\n  //    }, 1000);\r\n  //  console.log(props);\r\n  //   };\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Reset Password?\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VpnKeyIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            // onSubmit={onSubmitHandler}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(props) => (\r\n              <Form  className={classes.form}>\r\n                {console.log(props)}\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                 // type=\"password\"\r\n                  id=\"NewPass\"\r\n                  label=\"Enter new Password\"\r\n                  name=\"NewPass\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"NewPass\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n\r\n                  <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  type=\"password\"\r\n                  id=\"ConfirmPass\"\r\n                  label=\"Confirm Password\"\r\n                  name=\"ConfirmPass\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"ConfirmPass\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/Home\"\r\n                  disabled= {!(props.isValid || props.isSubmitting)}\r\n                >\r\n                 Reset\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/login\"\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={3}></Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\MainNavigation.js",["250","251"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\UserProfile.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\EmailVerification.js",["252","253"],"import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Redirect } from 'react-router'\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useHistory} from 'react-router';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"80%\",\r\n    margin: \"0px 20px\"\r\n    \r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n    \r\n  }\r\n}));\r\n\r\nexport default function ForgetPassword(props) {\r\n  const history = useHistory();\r\n \r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [success, setSuccess] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const paperStyle = {\r\n    width: \"80%\",\r\n    padding: 20,\r\n    margin: \"80px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const initialValues = {\r\n    username: \"\",\r\n  };\r\n  const ButtonStyle = {\r\n    minWidth: \"140px\",\r\n    minHeight: \"40px\",\r\n    margin: \"20px 8px \",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    username: yup.string().email(\"Please enter valid username\"),\r\n  });\r\n  const onSubmitHandler = async (values, props) => {\r\n    setUserEmail(values.username);\r\n    try {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5000/api/users/sendCode',\r\n        'POST',\r\n        JSON.stringify({\r\n          email: values.username,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n      if (responseData.status)\r\n        setSuccess(true)\r\n    }\r\n    catch (err) {\r\n    }\r\n\r\n  };\r\n  const classes = useStyles();\r\n  if (success) {\r\n    return <Redirect\r\n      to={{\r\n        pathname: \"/verifycode\",\r\n        state: { email: userEmail }\r\n      }}\r\n    />\r\n  }\r\n  if (!props.location.state) {\r\n    // history.push(\"/\");\r\n    return <Redirect\r\n    to={{\r\n      pathname: \"/\",\r\n    }}\r\n  />\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={clearError}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n          {error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          {props.location.state.emailverification && (<>Verify Your Email?</>)}\r\n          {props.location.state.forgotpassword && (<>Forgot Password?</>)}\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VpnKeyIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmitHandler}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(props) => (\r\n              <Form className={classes.form}>\r\n                <Typography variant=\"body1\" style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n                  Please enter your email address associated with your account to start verification process\r\n                </Typography>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  className={classes.formControl}\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Enter your Email Address\"\r\n                  name=\"username\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"username\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  // onSubmit = {onSubmitHandler}\r\n                  disabled={!(props.isValid || props.isSubmitting)}\r\n                >\r\n                  NEXT\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/login\"\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\signUp.js",["254","255"],"import React, { useState, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport * as yup from \"yup\";\r\nimport SignupForm from '../components/SignupForm'\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Redirect } from 'react-router'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/auth\">\r\n       Copyright@2021 \r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  username: \"\",\r\n  contact: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n  lastName: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"Last Name must be atleast 3 characters\"),\r\n  email: yup.string()\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter valid username\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .min(6, \"Password must be atleast 6 characters long\")\r\n  // .matches(\r\n  //   /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/,\r\n  //   \"Must contain One Number and One Special Case Character\"\r\n  // )\r\n  ,\r\n  address: yup\r\n    .string()\r\n    .required(\"This field is required\"),\r\n\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n\r\n  contact: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(\r\n      /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/,\r\n      \"Please enter valid Contact number\"\r\n    )\r\n    .min(11),\r\n});\r\n\r\nexport default function SignUp() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error,status, sendRequest, clearError } = useHttpClient();\r\n  const [gender, setGender] = useState(\"other\");\r\n  const [country, setCountry] = useState(\"Afghanistan\");\r\n  const [dob, setdob] = useState(\"1900-01-01\");\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  const signUpSubmitHandler = async (values, props) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5000/api/users/signup',\r\n        'POST',\r\n        JSON.stringify({\r\n          firstname: values.firstName,\r\n          lastname: values.lastName,\r\n          country: country,\r\n          dob: dob,\r\n          email: values.email,\r\n          phone: values.contact,\r\n          password: values.password,\r\n          address: values.address,\r\n          gender: gender\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n      setUserEmail(responseData.email)\r\n    }\r\n    catch (err) {\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const classes = useStyles();\r\n  const paperStyle = {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    margin: \"80px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n\r\n  if (userEmail!=='') {\r\n    return <Redirect \r\n    to={{\r\n        pathname: \"/verifycode\",\r\n        state: { email: userEmail }\r\n      }}\r\n    />;;\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar open={error} autoHideDuration={6000} onClose={clearError}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n          {error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          SmartHire\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <SignupForm\r\n            signUpSubmitHandler={signUpSubmitHandler}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            gender={gender}\r\n            setGender={setGender}\r\n            country={country}\r\n            setCountry={setCountry}\r\n            dob={dob}\r\n            setdob={setdob}\r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/auth\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <Copyright />\r\n\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Auth.js",["256","257","258"],"import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport AuthForm from '../components/AuthForm';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to={{\r\n        pathname: \"/\",\r\n      }}>\r\n        Smarthire\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [rememberme, setRememberme] = useState(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.checkbox === \"true\") {\r\n      setRememberme(true);\r\n      initialValues.username = localStorage.username;\r\n      initialValues.password = localStorage.password;\r\n    } else {\r\n      setRememberme(false);\r\n    }\r\n  }, []);\r\n  const paperStyle = {\r\n    width: \"80%\",\r\n    padding: 20,\r\n    margin: \"80px auto\"\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n  const onSubmitHandler = async (values) => {\r\n    if (rememberme) {\r\n      localStorage.username = values.username;\r\n      localStorage.password = values.password;\r\n      localStorage.checkbox = \"true\";\r\n    } else {\r\n      localStorage.username = \"\";\r\n      localStorage.password = \"\";\r\n      localStorage.checkbox = \"false\";\r\n    }\r\n    try {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5000/api/users/login',\r\n        'POST',\r\n        JSON.stringify({\r\n          email: values.username,\r\n          password: values.password\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n      auth.resume=responseData.resume;\r\n      auth.login(responseData.userId, responseData.token);\r\n    } catch (err) {\r\n    }\r\n\r\n  };\r\n  if (error == 'Email_not_verified') {\r\n\r\n    return <Redirect\r\n      to={{\r\n        pathname: \"/verifyEmail\",\r\n        state: { emailverification: true,\r\n          forgotpassword:false\r\n         }\r\n      }} />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <LoadingSpinner open={isLoading} />\r\n      {status != 401 && (\r\n        <Snackbar open={!!error} autoHideDuration={6000} onClose={clearError}>\r\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n            {error}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <Container component=\"main\" maxWidth=\"sm\" style={{ padding: \"0px\" }}>\r\n          <Paper elevation={10} style={paperStyle}>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              SmartHire\r\n            </Typography>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <ExitToAppIcon style={avatarStyle} />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n             </Typography>\r\n              <AuthForm\r\n                setRememberme={setRememberme}\r\n                rememberme={rememberme}\r\n                onSubmitHandler={onSubmitHandler}\r\n                error={error}\r\n                status={status}\r\n                initialValues={initialValues}\r\n              />\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link to={{\r\n                    pathname: \"/forgotpassword\",\r\n                    state: { forgotpassword: true }\r\n                  }} variant=\"body2\">\r\n                    Forgot password?\r\n               </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to={{\r\n                    pathname: \"/signup\",\r\n                  }} variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Box mt={3}>\r\n              <Copyright />\r\n            </Box>\r\n          </Paper>\r\n        </Container>\r\n      )}\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SignIn;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\Interview.js",["259","260","261","262","263","264","265","266","267","268"],"import React, { useContext, useState , useEffect} from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InterviewList from \"../components/InterviewList\";\r\nimport bgInterview5 from \"../../shared/components/UIElements/Images/bgInterview5.jpg\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateInterview from \"../components/CreateInterview\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  hero: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    marginTop: 0,\r\n    backgroundImage: `linear-gradient(\r\n        to bottom,\r\n        rgba(0, 27.8, 46.7, 0.7),\r\n        rgba(78, 120, 160, 0.7)\r\n      ), url(${bgInterview5})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 50px\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst DUMMY_INTERVIEWS = [\r\n  {\r\n    id: \"I1\",\r\n    title: \"Interview for Hiring QA testing Team\",\r\n    description:\r\n      \"Team that ensures the quality of software or application being developed\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: false,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"TAKEN\",\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"I2\",\r\n    title: \"Interview for Architecture designing of Systems\",\r\n    description: \"building system and object designs of the system\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: true,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"CANCELLED\",\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"I3\",\r\n    title: \"Interview for Teaching\",\r\n    description: \"Teaching in University to high level Students\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: false,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"PENDING\",\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"I4\",\r\n    title: \"Interview for Teaching\",\r\n    description: \"Teaching in University to high level Students\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: false,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"PENDING\",\r\n    creator: \"u1\",\r\n  },\r\n];\r\n\r\nconst Interview = () => {\r\n  const [interviews, setInterviews] = useState();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  // useEffect(() => {\r\n  //   const getData = async () => {\r\n  //     try {\r\n  //       const responseData = await sendRequest(\r\n  //         \"http://localhost:5000/api/interviews/user/\" + auth.userId,\r\n  //         'GET',\r\n  //         null,\r\n  //         {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //           Authorization: \"Bearer \" + auth.token,\r\n  //         }\r\n  //       );\r\n  //       console.log(\"print\"+responseData);\r\n  //       setInterviews(responseData);\r\n  //     } catch (err) {\r\n  //       console.log(err);\r\n  //     }\r\n  //   };\r\n  //   getData();\r\n  \r\n  // },[interviews]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Box className={classes.hero}>\r\n          <Box>Interviews</Box>\r\n        </Box>\r\n        <Container maxWidth=\"lg\" component=\"main\">\r\n          <Paper elevation={5} className={classes.paper}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleOpenDialog();\r\n              }}\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Create Interview\r\n            </Button>\r\n\r\n            {open && (\r\n              <CreateInterview\r\n                open={open}\r\n                handleCloseDialog={handleCloseDialog}\r\n                setOpen={setOpen}\r\n              />\r\n            )}\r\n\r\n            <InterviewList items={DUMMY_INTERVIEWS} />\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Interview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\pages\\Faq.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CreateInterview.js",["269","270","271","272","273","274","275","276","277"],"import React, { Fragment, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DvrIcon from \"@material-ui/icons/Dvr\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InterviewForm from \"./InterviewForm\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Smarthire\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n}));\r\n\r\nconst CreateInterview = (props) => {\r\n \r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [field, setField] = useState(\"Computer Science\");\r\n  const [doi, setDoi] = useState(date);\r\n  const [timeOfInter, setTimeOfInter] = useState(\"12:00\");\r\n\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        open={props.open }\r\n        onClose={props.handleCloseDialog}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n      \r\n        <DialogTitle\r\n          onClose={props.handleCloseDialog}\r\n          disableTypography\r\n        >\r\n          <Typography variant=\"h4\" align=\"center\">Schedule Interview</Typography>\r\n           \r\n            \r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <DvrIcon style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            <InterviewForm \r\n             field={field}\r\n             setField={setField}\r\n             doi={doi}\r\n             setDoi={setDoi}\r\n             timeOfInter = {timeOfInter}\r\n             setTimeOfInter = {setTimeOfInter}\r\n             setOpen = {props.setOpen}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\pages\\Chat.js",["278","279"],"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport BottomBar from \"../components/BottomBar\";\r\nimport ChatSearch from \"../components/ChatSearch\";\r\nimport ConversationList from \"../components/ConversationList\";\r\nimport LeftTopBar from \"../components/LeftTopBar\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport RightTopBar from \"../components/RightTopBar\";\r\n\r\n\r\nimport \"./Chat.css\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  aside : {\r\n  //  width: \"25%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginLeft: \"60px\",\r\n    background: \"#fff\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n     width: \"50%\",\r\n     marginLeft: 0,\r\n      marginTop: 65\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"40%\",\r\n      marginLeft: 60\r\n     \r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"25%\",\r\n      marginLeft: 60\r\n     \r\n    },\r\n  },\r\n  \r\n  mainChat: {\r\n   // width: \"75%\",\r\n    background: \"#d3d3d3\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundSize: \"contain\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"50%\",\r\n      marginTop: 65\r\n    \r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"60%\",\r\n    \r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"75%\",\r\n      \r\n    \r\n    },\r\n  \r\n  }\r\n}));\r\n\r\n\r\nfunction Chat() {\r\n\r\n\r\n  const ChatUsers = [\r\n    {\r\n      id:\"c1\",\r\n      with: \"Summar\",\r\n      messages: [\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Hello\",\r\n          time : \"10:00 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Summar\",\r\n          content: \"Hi\",\r\n          time : \"10:01 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"How Are You?\",\r\n          time : \"10:02 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Summar\",\r\n          content: \"I am Fine\",\r\n          time : \"10:05 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Okay.\",\r\n          time : \"10:10 AM\",\r\n          isRead: false,\r\n        },\r\n  \r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Summar\",\r\n          content: \"I am Fine\",\r\n          time : \"10:05 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Okay.\",\r\n          time : \"10:10 AM\",\r\n          isRead: false,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Summar\",\r\n          content: \"I am Fine\",\r\n          time : \"10:05 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Okay.\",\r\n          time : \"10:10 AM\",\r\n          isRead: false,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Summar\",\r\n          content: \"I am Fine\",\r\n          time : \"10:05 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Okay.\",\r\n          time : \"10:10 AM\",\r\n          isRead: false,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Summar\",\r\n          content: \"I am Fine\",\r\n          time : \"10:05 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Summar\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Okay.\",\r\n          time : \"10:10 AM\",\r\n          isRead: false,\r\n        },\r\n    \r\n      ]\r\n    },\r\n    {\r\n      id:\"c2\",\r\n      with: \"Urooj\",\r\n      messages: [\r\n        {\r\n          sender: \"Urooj\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Hi\",\r\n          time : \"10:00 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Urooj\",\r\n          content: \"Hello\",\r\n          time : \"10:01 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Urooj\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"what are you doing?\",\r\n          time : \"10:02 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Muqaddas\",\r\n          receiver: \"Urooj\",\r\n          content: \"Nothing\",\r\n          time : \"10:05 AM\",\r\n          isRead: true,\r\n        },\r\n        {\r\n          sender: \"Urooj\",\r\n          receiver: \"Muqaddas\",\r\n          content: \"Okay.\",\r\n          time : \"10:10 AM\",\r\n          isRead: false,\r\n        },\r\n      ]\r\n    },\r\n  ];\r\n\r\n\r\nconst classes = useStyles();\r\nconst [data, setdata]=useState(ChatUsers)\r\nconst [contactSelected, setcontactSelected]=useState({})\r\nconst [currentMessages, setCurrentMessages] = useState([])\r\nconst [Newmessage, setNewmessage]= useState('')\r\n\r\n// console.log(contactSelected)\r\nuseEffect(()=>{\r\n  const currentContact= data.find(d=>d.id===contactSelected.id)\r\n  setCurrentMessages((currentContact && currentContact.messages)|| [])\r\n},[contactSelected, data])\r\n\r\n// let messagearr =  [\r\n//       sender: contactSelected.sender,\r\n//       receiver: contactSelected.receiver,\r\n//       content: Newmessage,\r\n//       time : Date.now(),\r\n//       isRead: true,\r\n// ];\r\n\r\nlet messagesObject = [\r\n  {\r\n    sender: contactSelected.sender,\r\n          receiver: contactSelected.receiver,\r\n          content: Newmessage,\r\n          time : Date.now(),\r\n          isRead: true,\r\n  },\r\n];\r\n\r\nconsole.log(\"sendERRRR  \"+contactSelected);\r\n// function pushMessages(){\r\n// const index = data.find(d=>d.id===contactSelected.id)\r\n// console.log(index)\r\n// // const newdata= Object.assign([], data, {\r\n// //   [index]:{\r\n// // ChatUsers: contactSelected,\r\n// // messages: [...data[index].messages, messagearr]\r\n\r\n//   // },\r\n// }\r\n// setdata(newdata)\r\n// }\r\n\r\nconsole.log(currentMessages)\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n   <div className=\"app\">\r\n     <div className={classes.aside} >\r\n           <header>\r\n         <LeftTopBar/>\r\n           </header>\r\n           <ChatSearch/>\r\n           <div className=\"contact-boxes\">\r\n\r\n        \r\n            <ConversationList data ={data} setcontactSelected={setcontactSelected}              \r\n            />   \r\n           </div>\r\n           </div>\r\n             <div className={classes.mainChat}>\r\n           <header>\r\n         <RightTopBar user={contactSelected}         \r\n         />\r\n           </header>\r\n        \r\n          <MessageBox\r\n            chatMessage = {currentMessages}\r\n               />\r\n          <BottomBar Newmessage={Newmessage} setNewmessage={setNewmessage}  />\r\n             </div>\r\n             \r\n    </div>\r\n  \r\n  );\r\n}\r\nexport default Chat;\r\n\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesList.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\Navbar.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewForm.js",["280","281","282","283","284","285","286","287"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport DatePicker from \"../../shared/components/UIElements/FormElements/DatePicker\";\r\nimport TimePicker from \"../../shared/components/UIElements/FormElements/TimePicker\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GridStyle: {\r\n    margin: \"0px 22px\",\r\n  },\r\n}));\r\n\r\nconst fields = [\r\n  \"Computer Science\",\r\n  \"Electrical Engineering\",\r\n  \"Material Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"MBBS\",\r\n  \"BDS\",\r\n  \"Software Engineering\",\r\n];\r\n\r\nconst InterviewForm = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n    props.setOpen(false)\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status==201);\r\n  }, [status]);\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    title: yup\r\n      .string()\r\n      .min(5, \"Title must be atleast 5 characters long\")\r\n      .required(\"Title is required\"),\r\n    description: yup\r\n      .string()\r\n      .min(15, \"Description must be atleast 15 characters long\")\r\n      .required(\"Description is required\"),\r\n  });\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    {console.log(props.handleCloseDialog)}\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/interviews/\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: values.title,\r\n          description: values.description,\r\n          fieldTitle: props.field,\r\n          date: props.doi,\r\n          time: props.timeOfInter,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {console.log(status)}\r\n    \r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"201\" ? clearSuccess   : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"201\" ? \"success\" : \"error\"}\r\n          onClose={status == \"201\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"201\" ? \"Interview Created Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  name=\"title\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"title\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  id=\"description\"\r\n                  autoComplete=\"description\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"description\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={3} sm={3} className={classes.GridStyle}>\r\n                  <SelectBox\r\n                    value={props.field}\r\n                    setValue={props.setField}\r\n                    title={\"Select Field \"}\r\n                    data={fields}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={3} sm={3} className={classes.GridStyle}>\r\n                  <DatePicker\r\n                    date={props.doi}\r\n                    setDate={props.setDoi}\r\n                    label=\"Set Interview Date\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={3} sm={3} className={classes.GridStyle}>\r\n                  <TimePicker\r\n                    time={props.timeOfInter}\r\n                    setTime={props.setTimeOfInter}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={\r\n                !(\r\n                  fProps.isValid ||\r\n                  !props.field ||\r\n                  !props.doi ||\r\n                  fProps.isSubmitting\r\n                )\r\n              }\r\n              className={classes.submit}\r\n            >\r\n              Create Interview\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InterviewForm;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewCandidates.js",["288","289","290","291","292"],"import React, { useState } from \"react\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { IoIosPeople } from \"react-icons/io\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nimport CandidatesDialogItems from \"./CandidatesDialogItems\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  search: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  \r\n}));\r\n\r\n\r\nconst CustomizedDialogs = (props) => {\r\n    const [open, setOpen] = useState(true);\r\n\r\nconst handleOpenDialog = () => {\r\n  setOpen(true);\r\n};\r\nconst handleCloseDialog = () => {\r\n  setOpen(false);\r\n};\r\n \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleCloseDialog}\r\n        open={open}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle\r\n          onClose={handleCloseDialog}\r\n          className={classes.dialogTitle}\r\n        >\r\n          Search Candidates\r\n         <SearchBar className = {classes.search}/>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n\r\n             {props.items.length === 0 ? \"No users Found\":\r\n             props.items.map((candidate) => (\r\n              <CandidatesDialogItems\r\n                key={candidate.id}\r\n                id={candidate.id}\r\n                name={candidate.name}\r\n                image={candidate.image}\r\n              />\r\n            ))\r\n            }\r\n         \r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedDialogs;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\User.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\RightTopBar.js",["293"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n import './RightTopBar.css';\r\n\r\n\r\n function RightTopBar(props) {\r\n\r\n  \r\n  return (\r\n<>\r\n\r\n    <div className=\"avatar-component\">\r\n\r\n    <Avatar>  \r\n        </Avatar>\r\n        <div style={{margin:\"10px\"}}>\r\n      <Typography variant=\"h6\" >\r\n     {props.user.with}\r\n     </Typography>\r\n     </div>\r\n     \r\n\r\n</div>\r\n<div style={{float:\"right\"}}>\r\n         \r\n   \r\n          <IconButton\r\n            >\r\n              <CallIcon color=\"primary\"/>\r\n            </IconButton>\r\n    \r\n          <IconButton\r\n            >\r\n              <VideocamIcon color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n            >\r\n              <MoreVertIcon color=\"primary\" />\r\n            </IconButton>\r\n     </div>\r\n</>\r\n  );\r\n\r\n  }\r\nexport default RightTopBar;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\MessageBox.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ChatSearch.js",["294"],"import React from \"react\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport \"./ChatSearch.css\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n function ChatSearch() {\r\n \r\n  return (\r\n    <>\r\n    <div className=\"search\">\r\n\r\n <SearchBar \r\n    placeholder=\"Search Chat\" style={{height:\"40px\", width:\"100%\"}}\r\n  />\r\n  </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ChatSearch;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\LeftTopBar.js",["295","296"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport './LeftTopBar.css';\r\n\r\n\r\nfunction LeftTopBar() {\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"avatar-component\">\r\n\r\n        <Avatar>\r\n          {/* // src=\"https://st3.depositphotos.com/6697918/15699/v/380/depositphotos_156996594-stock-illustration-beautiful-muslim-arab-woman-in.jpg \"\r\n        // alt=\"\"  */}\r\n        </Avatar>\r\n        <div style={{ margin: \"10px\" }}>\r\n          <Typography variant=\"h6\" >\r\n            Muqaddas\r\n          </Typography>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <IconButton\r\n        >\r\n          <MoreVertIcon color=\"primary\" />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\nexport default LeftTopBar;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationList.js",["297"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./ConversationList.css\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\n\r\n\r\nfunction ConversationList({data, setcontactSelected}) {\r\n\r\n\r\n  if (data.length === 0) {\r\n    return(\r\n       \r\n          <Typography variant=\"h5\" color=\"primary\" align=\"center\" style={{marginTop:\"200px\"}}>\r\n            No Chats Available\r\n          </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n     {data.map(chat=>(\r\n\r\n           <div className=\"contact-box\" onClick={()=>setcontactSelected(chat)}>\r\n           <div className=\"avatar-component\">\r\n             <Avatar style={{ height: \"50px\", width: \"50px\", marginRight: \"10px\" }}>        \r\n             </Avatar>\r\n           </div>\r\n       \r\n           <div className=\"right-section\">\r\n              <div className=\"contact-box-header\">\r\n        \r\n               <Typography variant=\"h6\" className=\"avatar-title\">{chat.with}</Typography>\r\n           \r\n                <span className=\"time-mark\">yesterday</span>\r\n              </div>\r\n              <div className=\"last-msg\">\r\n                <Typography className=\"text\" variant=\"body2\" >Hello ! How are you!!</Typography >\r\n              </div>\r\n            </div>\r\n          </div> \r\n     \r\n        \r\n        ))}         \r\n\r\n     \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConversationList;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\BottomBar.js",["298"],"import React, { useState } from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport './BottomBar.css';\r\n\r\n function BottomBar({Newmessage, setNewmessage, pushMessages}) {\r\n//  const [newMessage,setNewMessage]=useState('');\r\n//  const sendMessage=()=>{\r\n//    let message =  {\r\n//     sender: \"\",\r\n//     receiver: \"\",\r\n//     content: newMessage,\r\n//     time : \"\",\r\n//     isRead: true,\r\n//   };\r\n//   console.log(props.currentMessages)\r\n//   props.setCurrentMessages(...props.currentMessages.messages,message);\r\n  \r\n\r\n \r\n  return (\r\n    <>\r\n    <div className=\"chat-input-box\">\r\n                    <div >\r\n                    <IconButton>\r\n                      <EmojiEmotionsIcon color=\"primary\" />\r\n                    </IconButton>\r\n                    </div>\r\n\r\n                    <div className=\"chat-input\">\r\n                    <input type=\"text\" placeholder=\"Type a message\" value={Newmessage} onChange={(e)=>setNewmessage(e.target.value)}/>\r\n\r\n                        {/* <input type=\"text\" placeholder=\"Type a message\" value ={newMessage}onChange={(e)=>{setNewMessage(e.target.value)}}/> */}\r\n                    </div>\r\n\r\n                    <div >\r\n                    <IconButton>\r\n                      <SendIcon color=\"primary\" onClick={pushMessages}/>\r\n                    </IconButton>\r\n                    </div>\r\n                </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default BottomBar;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesDialogItems.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\Message.js",["299"],"import React from \"react\";\r\nimport './Message.css';\r\n\r\nfunction Message(props) {\r\nconst MyID = \"muqs\"\r\n    return (\r\n        <>\r\n                <div className={props.message.sender === \"Muqaddas\"?\"message sent\" : \"message received\"}>\r\n                    {props.message.content}\r\n                    <div className=\"metadata\">\r\n                        <span className=\"date\">{props.message.date}</span>\r\n                    </div>\r\n                </div>\r\n               \r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserItem.js",["300","301"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewList.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\AuthForm.js",["302","303","304"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst AuthForm = props => {\r\n    const setRememberme=props.setRememberme;\r\n    const rememberme=props.rememberme;\r\n    const error = props.error;\r\n    const status = props.status;\r\n    const classes = useStyles();\r\n    const validationSchema = yup.object().shape({\r\n        username: yup.string()\r\n            .email(\"Please enter valid email\")\r\n            .required(\"Email is required\"),\r\n        password: yup.string()\r\n            .min(6, \"Password must be atleast 6 characters long\")\r\n            .required(\"Password is required\"),\r\n    });\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Formik\r\n                initialValues={props.initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={props.onSubmitHandler}\r\n            >\r\n\r\n                {(props) => (\r\n                    <Form>\r\n                        <Field\r\n                            as={TextField}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"username\"\r\n                            autoComplete=\"email\"\r\n                            helperText={\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Field\r\n                            as={TextField}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            helperText={\r\n                                <ErrorMessage\r\n                                    name=\"password\"\r\n                                    style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                />\r\n                            }\r\n                        />\r\n                        <Field\r\n                            as={FormControlLabel}\r\n                            name=\"remember\"\r\n                            control={<Checkbox value=\"remember\" color=\"secondary\" checked={!!rememberme} onChange={() => { setRememberme(!rememberme) }} />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        {status === 401 ? (\r\n                            <Typography className=\"MuiFormHelperText-root\" align=\"center\" variant=\"body1\">{error}</Typography>\r\n                        ) : \" \"}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!(props.isValid || props.isSubmitting)}\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\http-hook.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\LoadingSpinner.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\SignupForm.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewItems.js",["305"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuItem, Divider } from \"@material-ui/core\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport { FaRegCheckCircle, FaRegClock } from \"react-icons/fa\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n\r\nimport InterviewMenu from \"./InterviewMenu\";\r\nimport ViewInterview from \"../pages/ViewInterview\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"10px 17px\",\r\n    // background:\r\n    //   \"linear-gradient( rgba(0, 27.8, 46.7, 0.7), rgba(78, 120, 160, 0.5))\",\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst InterviewItems = (props) => {\r\n  const MoreIconStyle = {\r\n    marginTop: \"5px\",\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [InterviewMobAnchorEl, setInterviewMobAnchorEl] = useState(null);\r\n  const isInterviewMenuOpen = Boolean(InterviewMobAnchorEl);\r\n\r\n  const openInterviewMenu = (event) => {\r\n    setInterviewMobAnchorEl(event.currentTarget);\r\n  };\r\n  const closeInterviewMenu = () => {\r\n    setInterviewMobAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const InterviewMobileMenu = (\r\n    <Menu\r\n      anchorEl={InterviewMobAnchorEl}\r\n      id=\"Int-mob-menu\"\r\n      keepMounted\r\n      open={isInterviewMenuOpen}\r\n      // anchorOrigin={{\r\n      //   vertical: \"right\",\r\n      //   horizontal: \"bottom\",\r\n      // }}\r\n      getContentAnchorEl={null}\r\n    >\r\n      {matches && (\r\n        <MenuItem\r\n        component={Link}\r\n        to=\"/interview/view\"\r\n          style={{ height: 40 }}\r\n        >\r\n          <IconButton color=\"primary\">\r\n            <IoMdEye />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">View Details</Typography>\r\n        </MenuItem>\r\n      )}\r\n      <Divider variant=\"middle\" />\r\n     \r\n      <InterviewMenu\r\n        closeInterviewMenu={closeInterviewMenu}\r\n        status={props.status}\r\n      />\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Grid container spacing={5}>\r\n        <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n          <div className={classes.header}>\r\n            <Typography variant=\"h5\" align=\"justify\">\r\n              {props.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" style={{ color: grey[900] }}>\r\n              {props.date}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={6} lg={5}>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            //  color=\"#fff\"\r\n            className={classes.statusStyle}\r\n          >\r\n            {(props.status === \"PENDING\" && (\r\n              <FaRegClock className={classes.statusIconStyle} />\r\n            )) ||\r\n              (props.status === \"TAKEN\" && (\r\n                <FaRegCheckCircle className={classes.statusIconStyle} />\r\n              )) ||\r\n              (props.status === \"CANCELLED\" && (\r\n                <BlockIcon className={classes.statusIconStyle} />\r\n              ))}\r\n            {props.status}\r\n          </Typography>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.ViewButton}\r\n            startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n           component={Link}\r\n           to=\"/interview/view\"\r\n          >\r\n            View Details\r\n          </Button>\r\n         \r\n        \r\n    \r\n        </Grid>\r\n      </Grid>\r\n      <OutsideClickHandler onOutsideClick={closeInterviewMenu}>\r\n        <IconButton onClick={openInterviewMenu}>\r\n          <MoreVertIcon style={MoreIconStyle} />\r\n        </IconButton>\r\n      </OutsideClickHandler>\r\n      {InterviewMobileMenu}\r\n    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InterviewItems;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\RadioButtons.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\DatePicker.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\SelectBox.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewMenu.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\TimePicker.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\DeleteInterview.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CancelInterview.js",["306","307"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CancelInterview = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // const CloseCancelDialogHandler = () => {\r\n  //   props.setOpenCancelDialog(false);\r\n  //   console.log(props.OpenCancelDialog);\r\n  // };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.OpenCancelDialog}\r\n      onClose={props.CloseCancelDialogHandler}\r\n      fullWidth\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle\r\n        onClose={props.CloseCancelDialogHandler}\r\n        className={classes.dialogTitle}\r\n      >\r\n        Cancel Interview Confirmation\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <div className={classes.demo}>\r\n          Are you sure you want to cancel this interview?\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={props.CloseCancelDialogHandler}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        >\r\n          No\r\n        </Button>\r\n        <Button\r\n          onClick={props.CloseCancelDialogHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CancelInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqCollection.js",["308","309","310","311"],"import React, { useState, useEffect } from \"react\";\r\nimport FaqList from \"./FaqList\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\nconst FaqCollection = () => {\r\n  const [faqs, setFaqs] = useState();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          'http://localhost:5000/api/faqs/'\r\n        );\r\n        setFaqs(responseData.faqs);\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    if (!faqs)\r\n      getData();\r\n\r\n  }, [faqs])\r\n\r\n  return (\r\n  <React.Fragment>\r\n    <LoadingSpinner open={isLoading} />\r\n    {faqs && (<FaqList items={faqs} />)}\r\n  </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default FaqCollection;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqList.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqListItems.js",["312"],"import React, {useState} from 'react';\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    \r\n      accor: {\r\n        padding: \"20px 40px\",\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        color: \"#004777\",\r\n      },\r\n\r\n    }));\r\nconst FaqListItems = (props) =>{\r\n//    const [open, setOpen] = useState(false);\r\n\r\n//     const AccordianHandler = ()=>{\r\n//         setOpen(open)\r\n    //}\r\n    // const AccordID =  props.id\r\n    // const [expanded, setExpanded] = useState(false);\r\n    // const handleChange = panel => (isExpanded) => {\r\n    //   setExpanded(isExpanded ? panel : false);\r\n    //   console.log(\"Panel \"+panel)\r\n    // };\r\n\r\n    const classes = useStyles();\r\nreturn (\r\n \r\n  \r\n    <Accordion className={classes.accor} \r\n\r\n    >\r\n        {/* {console.log(\"accor \"+AccordID)}\r\n        {console.log(\"expanded \"+expanded)} */}\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon/>}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography className={classes.heading} align = \"justify\">\r\n       {props.question}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>   \r\n        <Typography  align = \"justify\">\r\n       {props.answer}\r\n          \r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n\r\n\r\n);\r\n}\r\n\r\nexport default FaqListItems;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewDetails.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\ViewInterview.js",["313","314"],"import React, { useState, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport InterviewDetails from \"../components/InterviewDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst ViewInterview = (props) => {\r\n  const paperStyle = {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    margin: \"80px auto\",\r\n    \r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Interview Details\r\n        </Typography>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <ListAltIcon style={avatarStyle} />\r\n          </Avatar>\r\n        </div>\r\n        <InterviewDetails />\r\n        <Box mt={4}></Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ViewInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\CodeVerification.js",["315"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PhonelinkRingIcon from '@material-ui/icons/PhonelinkRing';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n    feilds: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    otpfield: {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        textAlign: \"center\",\r\n        margin: \"10px\",\r\n        border: \"solid\",\r\n        borderColor: \"#004777\"\r\n\r\n    },\r\n    typo: {\r\n        marginBottom: \"20px\"\r\n\r\n    }\r\n\r\n}));\r\n\r\nexport default function CodeVerification(props) {\r\n    const auth = useContext(AuthContext);\r\n    const [success, setSuccess] = useState(false);\r\n    const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n    const userEmail = props.location.state.email;\r\n\r\n    const paperStyle = {\r\n        width: \"100%\",\r\n        padding: 20,\r\n        marginTop: \"70px\",\r\n    };\r\n    const avatarStyle = {\r\n        backgroundColor: \"primary\",\r\n    };\r\n    const initialValues = {\r\n        username: \"\",\r\n    };\r\n    const ButtonStyle = {\r\n        minWidth: \"160px\",\r\n        minHeight: \"40px\",\r\n        margin: \"10px 8px \",\r\n\r\n    };\r\n\r\n    const typostyle = {\r\n        color: \"black\",\r\n        fontWeight: \"bold\"\r\n\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [otp, setOtp] = useState(new Array(4).fill(\"\"));\r\n\r\n    const handleChange = (element, index) => {\r\n        if (isNaN(element.value)) return false;\r\n\r\n        setOtp([...otp.map((d, idx) => (idx === index ? element.value : d))]);\r\n\r\n        //Focus next input\r\n        if (element.nextSibling) {\r\n            element.nextSibling.focus();\r\n        }\r\n    };\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        const code = otp.join(\"\");\r\n        try {\r\n            const responseData = await sendRequest(\r\n                'http://localhost:5000/api/users/verifyCode',\r\n                'POST',\r\n                JSON.stringify({\r\n                    email: props.location.state.email,\r\n                    code: code\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            );\r\n            if (responseData.isVerified) {\r\n                auth.login(responseData.userId, responseData.token);\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        catch (err) {\r\n        }\r\n\r\n    };\r\n\r\n    const onCancelHandler = (e) => {\r\n        console.log(\"cancel\")\r\n        setOtp([...otp.map(v => \"\")]);\r\n        if (otp.join(\"\")) {\r\n            console.log(\"in\");\r\n        }\r\n    }\r\n\r\n    const [DisableBtn, setDisableBtn] = useState(true);\r\n    const [Play, SetIsPlay] = useState(true)\r\n    const renderTime = ({ remainingTime }) => {\r\n        if (remainingTime === 0) {\r\n\r\n            return <div className=\"timer\">Press Resend</div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"timer\">\r\n                <Typography variant=\"h4\">{remainingTime}</Typography>\r\n            </div>\r\n        );\r\n    };\r\n    const onResendHandler = async (e) => {\r\n        try {\r\n            const responseData = await sendRequest(\r\n              'http://localhost:5000/api/users/sendCode',\r\n              'POST',\r\n              JSON.stringify({\r\n                email: userEmail,\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n            if (responseData.status)\r\n              setSuccess(true)\r\n          }\r\n          catch (err) {\r\n          }\r\n        SetIsPlay(true);\r\n        setDisableBtn(true);\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\" >\r\n            <LoadingSpinner open={isLoading} />\r\n            <Snackbar open={!!error} autoHideDuration={6000}>\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n                    {error}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Snackbar open={success} autoHideDuration={6000} >\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" onClose={()=>{setSuccess(false)}}>\r\n                    Code has been sent Successfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Paper elevation={10} style={paperStyle}>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                    Verification Code\r\n                </Typography>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <PhonelinkRingIcon style={avatarStyle} />\r\n                    </Avatar>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={onSubmitHandler}\r\n                        onClick={onCancelHandler}\r\n                    >\r\n                        {(props) => (\r\n                            <Form className={classes.form}>\r\n                                <Typography className={classes.typo} variant=\"body1\" align=\"center\">\r\n                                    The Verification Code has been sent to your provided Email {userEmail}.\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" align=\"center\" style={typostyle} >\r\n                                    Enter 4-digit Code\r\n                                </Typography>\r\n                                <Grid align=\"center\">\r\n                                    {otp.map((data, index) => {\r\n                                        return (\r\n                                            <input\r\n                                                className={classes.otpfield}\r\n                                                type=\"text\"\r\n                                                name=\"otp\"\r\n                                                maxLength=\"1\"\r\n                                                key={index}\r\n                                                value={data}\r\n                                                onChange={e => handleChange(e.target, index)}\r\n                                                onFocus={e => e.target.select()}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <p>OTP Entered - {otp.join(\"\")}</p>\r\n                                    {(error !== \"\") ? (<Typography className=\"MuiFormHelperText-root\" >{error}</Typography>) : \" \"}\r\n                                </Grid >\r\n                                <Grid align=\"center\" style={{ marginTop: \"20px\" }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={ButtonStyle}\r\n                                        onSubmit={onSubmitHandler}\r\n                                    >\r\n                                        Verify Account\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        style={ButtonStyle}\r\n                                        onClick={onCancelHandler}\r\n                                    >\r\n                                        Clear\r\n                                    </Button>\r\n                                </Grid>\r\n                                <br />\r\n                                <Grid className=\"timer-wrapper\" align=\"center\">\r\n                                    <CountdownCircleTimer\r\n                                        isPlaying={Play}\r\n                                        duration={30}\r\n                                        colors={[[\"#4E78A0\"]]}\r\n                                        onComplete={() => {\r\n                                            setDisableBtn(false);\r\n                                            SetIsPlay(false);\r\n                                        }\r\n                                        }\r\n                                        size=\"120\"\r\n                                    >\r\n                                        {renderTime}\r\n                                    </CountdownCircleTimer>\r\n                                </Grid>\r\n                                <Grid align=\"center\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={ButtonStyle}\r\n                                        onClick={onResendHandler}\r\n                                        disabled={DisableBtn}\r\n                                    >\r\n                                        Resend\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n                <Box mt={2}></Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\pages\\Certificate.js",["316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"import React, { useContext, useState , useEffect} from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport bgInterview5 from \"../../shared/components/UIElements/Images/bgInterview5.jpg\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CandidateList from \"../../Interviews/components/CandidatesList\";\r\nimport CertificateList from \"../components/CeritificateList\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n   backgroundColor: \"#fff\"\r\n  },\r\n  paper: {\r\n    margin: \"70px auto\",\r\n    padding: \"20px 50px\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst DUMMY_CERTIFICATES = [\r\n  {\r\n  id: \"C1\", \r\n  title: \"Certificate for software development\",\r\n  description: \"building system and object designs of the system\" ,\r\n  institute: \"Institute of Oxford\",\r\n  isApproved: false,\r\n  file: \"https://certificate-template.com/wp-content/uploads/2019/03/certificate-of-participation.png\",\r\n  field: \"Software Engineering\",\r\n  creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"C2\", \r\n    title: \"Certificate for software development\",\r\n    description: \"building system and object designs of the system\" ,\r\n    institute: \"Institute of Oxford\",\r\n    isApproved: false,\r\n    file: \"https://certificate-template.com/wp-content/uploads/2019/03/certificate-of-participation.png\",\r\n    field: \"Software Engineering\",\r\n    creator: \"u1\",\r\n    },\r\n    {\r\n      id: \"C3\", \r\n      title: \"Certificate for software development\",\r\n      description: \"building system and object designs of the system\" ,\r\n      institute: \"Institute of Oxford\",\r\n      isApproved: false,\r\n      file: \"https://certificate-template.com/wp-content/uploads/2019/03/certificate-of-participation.png\",\r\n      field: \"Software Engineering\",\r\n      creator: \"u1\",\r\n      },\r\n      {\r\n        id: \"C4\", \r\n        title: \"Certificate for software development\",\r\n        description: \"building system and object designs of the system\" ,\r\n        institute: \"Institute of Oxford\",\r\n        isApproved: false,\r\n        file: \"https://certificate-template.com/wp-content/uploads/2019/03/certificate-of-participation.png\",\r\n        field: \"Software Engineering\",\r\n        creator: \"u1\",\r\n        },\r\n          \r\n    \r\n\r\n \r\n];\r\n\r\nconst Certificate = () => {\r\n \r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n \r\n      <div className={classes.root}>\r\n        {console.log(\"manhos\")}\r\n        <Container maxWidth=\"lg\" component=\"main\">\r\n          <Paper elevation={5} className={classes.paper}>\r\n          <CertificateList items = {DUMMY_CERTIFICATES} />\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CeritificateList.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateItems.js",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuItem, Divider } from \"@material-ui/core\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport { FaRegCheckCircle, FaRegClock } from \"react-icons/fa\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"10px 17px\",\r\n    // background:\r\n    //   \"linear-gradient( rgba(0, 27.8, 46.7, 0.7), rgba(78, 120, 160, 0.5))\",\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst CertificateItem = (props) => {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Grid container spacing={5}>\r\n        <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n          <div className={classes.header}>\r\n            <Typography variant=\"h5\" align=\"justify\">\r\n            Certificate\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" style={{ color: grey[900] }}>\r\n             date\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        </Grid>\r\n        {/* <Grid item sm={6} lg={5}>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            //  color=\"#fff\"\r\n            className={classes.statusStyle}\r\n          >\r\n            {(props.status === \"PENDING\" && (\r\n              <FaRegClock className={classes.statusIconStyle} />\r\n            )) ||\r\n              (props.status === \"TAKEN\" && (\r\n                <FaRegCheckCircle className={classes.statusIconStyle} />\r\n              )) ||\r\n              (props.status === \"CANCELLED\" && (\r\n                <BlockIcon className={classes.statusIconStyle} />\r\n              ))}\r\n            {props.status}\r\n          </Typography>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.ViewButton}\r\n            startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n           component={Link}\r\n           to=\"/interview/view\"\r\n          >\r\n            View Details\r\n          </Button>\r\n         \r\n        \r\n    \r\n        </Grid>\r\n      </Grid> */}\r\n      {/* <OutsideClickHandler onOutsideClick={closeInterviewMenu}>\r\n        <IconButton onClick={openInterviewMenu}>\r\n          <MoreVertIcon style={MoreIconStyle} />\r\n        </IconButton>\r\n      </OutsideClickHandler> */}\r\n      {/* {InterviewMobileMenu} */}\r\n    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CertificateItem;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Pages\\Resume.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\CreateResume.js",["345","346","347","348","349","350","351","352"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\ResumeForm.js",[],{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":27,"column":8,"nodeType":"359","messageId":"360","endLine":27,"endColumn":20},{"ruleId":"357","severity":1,"message":"361","line":29,"column":8,"nodeType":"359","messageId":"360","endLine":29,"endColumn":22},{"ruleId":"362","severity":1,"message":"363","line":57,"column":40,"nodeType":"364","messageId":"365","endLine":57,"endColumn":41,"suggestions":"366"},{"ruleId":"362","severity":1,"message":"367","line":57,"column":43,"nodeType":"364","messageId":"365","endLine":57,"endColumn":44,"suggestions":"368"},{"ruleId":"362","severity":1,"message":"369","line":57,"column":46,"nodeType":"364","messageId":"365","endLine":57,"endColumn":47,"suggestions":"370"},{"ruleId":"357","severity":1,"message":"371","line":15,"column":8,"nodeType":"359","messageId":"360","endLine":15,"endColumn":19},{"ruleId":"372","severity":1,"message":"373","line":234,"column":15,"nodeType":"374","messageId":"375","endLine":234,"endColumn":20},{"ruleId":"357","severity":1,"message":"376","line":45,"column":9,"nodeType":"359","messageId":"360","endLine":45,"endColumn":16},{"ruleId":"357","severity":1,"message":"377","line":47,"column":29,"nodeType":"359","messageId":"360","endLine":47,"endColumn":35},{"ruleId":"357","severity":1,"message":"378","line":109,"column":9,"nodeType":"359","messageId":"360","endLine":109,"endColumn":13},{"ruleId":"357","severity":1,"message":"377","line":110,"column":28,"nodeType":"359","messageId":"360","endLine":110,"endColumn":34},{"ruleId":"379","severity":1,"message":"380","line":67,"column":6,"nodeType":"381","endLine":67,"endColumn":8,"suggestions":"382"},{"ruleId":"383","severity":1,"message":"384","line":105,"column":13,"nodeType":"385","messageId":"375","endLine":105,"endColumn":15},{"ruleId":"383","severity":1,"message":"386","line":118,"column":15,"nodeType":"385","messageId":"375","endLine":118,"endColumn":17},{"ruleId":"357","severity":1,"message":"387","line":1,"column":40,"nodeType":"359","messageId":"360","endLine":1,"endColumn":49},{"ruleId":"357","severity":1,"message":"388","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":14},{"ruleId":"357","severity":1,"message":"389","line":110,"column":10,"nodeType":"359","messageId":"360","endLine":110,"endColumn":20},{"ruleId":"357","severity":1,"message":"390","line":110,"column":22,"nodeType":"359","messageId":"360","endLine":110,"endColumn":35},{"ruleId":"357","severity":1,"message":"391","line":111,"column":11,"nodeType":"359","messageId":"360","endLine":111,"endColumn":20},{"ruleId":"357","severity":1,"message":"392","line":111,"column":22,"nodeType":"359","messageId":"360","endLine":111,"endColumn":27},{"ruleId":"357","severity":1,"message":"377","line":111,"column":29,"nodeType":"359","messageId":"360","endLine":111,"endColumn":35},{"ruleId":"357","severity":1,"message":"393","line":111,"column":37,"nodeType":"359","messageId":"360","endLine":111,"endColumn":48},{"ruleId":"357","severity":1,"message":"394","line":111,"column":50,"nodeType":"359","messageId":"360","endLine":111,"endColumn":60},{"ruleId":"357","severity":1,"message":"378","line":112,"column":9,"nodeType":"359","messageId":"360","endLine":112,"endColumn":13},{"ruleId":"357","severity":1,"message":"395","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":12},{"ruleId":"357","severity":1,"message":"396","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":11},{"ruleId":"357","severity":1,"message":"397","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":21},{"ruleId":"357","severity":1,"message":"398","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":17},{"ruleId":"357","severity":1,"message":"399","line":11,"column":8,"nodeType":"359","messageId":"360","endLine":11,"endColumn":13},{"ruleId":"357","severity":1,"message":"400","line":19,"column":10,"nodeType":"359","messageId":"360","endLine":19,"endColumn":23},{"ruleId":"357","severity":1,"message":"401","line":20,"column":10,"nodeType":"359","messageId":"360","endLine":20,"endColumn":21},{"ruleId":"357","severity":1,"message":"402","line":22,"column":10,"nodeType":"359","messageId":"360","endLine":22,"endColumn":19},{"ruleId":"357","severity":1,"message":"403","line":61,"column":9,"nodeType":"359","messageId":"360","endLine":61,"endColumn":19},{"ruleId":"357","severity":1,"message":"404","line":213,"column":14,"nodeType":"359","messageId":"360","endLine":213,"endColumn":21},{"ruleId":"357","severity":1,"message":"405","line":232,"column":5,"nodeType":"359","messageId":"360","endLine":232,"endColumn":19},{"ruleId":"357","severity":1,"message":"406","line":46,"column":9,"nodeType":"359","messageId":"360","endLine":46,"endColumn":14},{"ruleId":"383","severity":1,"message":"384","line":55,"column":22,"nodeType":"385","messageId":"375","endLine":55,"endColumn":24},{"ruleId":"407","severity":1,"message":"408","line":75,"column":5,"nodeType":"409","messageId":"410","endLine":75,"endColumn":43},{"ruleId":"357","severity":1,"message":"411","line":77,"column":13,"nodeType":"359","messageId":"360","endLine":77,"endColumn":25},{"ruleId":"383","severity":1,"message":"384","line":103,"column":25,"nodeType":"385","messageId":"375","endLine":103,"endColumn":27},{"ruleId":"383","severity":1,"message":"384","line":108,"column":28,"nodeType":"385","messageId":"375","endLine":108,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":109,"column":27,"nodeType":"385","messageId":"375","endLine":109,"endColumn":29},{"ruleId":"383","severity":1,"message":"384","line":111,"column":19,"nodeType":"385","messageId":"375","endLine":111,"endColumn":21},{"ruleId":"357","severity":1,"message":"412","line":10,"column":8,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"413","line":12,"column":8,"nodeType":"359","messageId":"360","endLine":12,"endColumn":18},{"ruleId":"357","severity":1,"message":"414","line":13,"column":10,"nodeType":"359","messageId":"360","endLine":13,"endColumn":21},{"ruleId":"357","severity":1,"message":"415","line":14,"column":10,"nodeType":"359","messageId":"360","endLine":14,"endColumn":18},{"ruleId":"357","severity":1,"message":"416","line":38,"column":7,"nodeType":"359","messageId":"360","endLine":38,"endColumn":23},{"ruleId":"357","severity":1,"message":"395","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"395","line":4,"column":8,"nodeType":"359","messageId":"360","endLine":4,"endColumn":12},{"ruleId":"357","severity":1,"message":"395","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"417","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":20},{"ruleId":"357","severity":1,"message":"399","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":15},{"ruleId":"357","severity":1,"message":"418","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"419","line":5,"column":7,"nodeType":"359","messageId":"360","endLine":5,"endColumn":11},{"ruleId":"357","severity":1,"message":"420","line":1,"column":15,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"421","severity":1,"message":"422","line":111,"column":13,"nodeType":"423","endLine":111,"endColumn":23},{"ruleId":"357","severity":1,"message":"420","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":27},{"ruleId":"357","severity":1,"message":"387","line":1,"column":29,"nodeType":"359","messageId":"360","endLine":1,"endColumn":38},{"ruleId":"357","severity":1,"message":"418","line":1,"column":40,"nodeType":"359","messageId":"360","endLine":1,"endColumn":48},{"ruleId":"357","severity":1,"message":"424","line":21,"column":8,"nodeType":"359","messageId":"360","endLine":21,"endColumn":21},{"ruleId":"357","severity":1,"message":"418","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"425","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":25},{"ruleId":"357","severity":1,"message":"392","line":9,"column":22,"nodeType":"359","messageId":"360","endLine":9,"endColumn":27},{"ruleId":"357","severity":1,"message":"377","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":35},{"ruleId":"357","severity":1,"message":"394","line":9,"column":50,"nodeType":"359","messageId":"360","endLine":9,"endColumn":60},{"ruleId":"379","severity":1,"message":"426","line":25,"column":6,"nodeType":"381","endLine":25,"endColumn":12,"suggestions":"427"},{"ruleId":"357","severity":1,"message":"418","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":24},{"ruleId":"357","severity":1,"message":"418","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"420","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":37},{"ruleId":"357","severity":1,"message":"377","line":61,"column":31,"nodeType":"359","messageId":"360","endLine":61,"endColumn":37},{"ruleId":"357","severity":1,"message":"418","line":1,"column":29,"nodeType":"359","messageId":"360","endLine":1,"endColumn":37},{"ruleId":"357","severity":1,"message":"387","line":1,"column":40,"nodeType":"359","messageId":"360","endLine":1,"endColumn":49},{"ruleId":"357","severity":1,"message":"428","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":20},{"ruleId":"357","severity":1,"message":"396","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":11},{"ruleId":"357","severity":1,"message":"388","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":14},{"ruleId":"357","severity":1,"message":"429","line":12,"column":8,"nodeType":"359","messageId":"360","endLine":12,"endColumn":14},{"ruleId":"357","severity":1,"message":"430","line":13,"column":8,"nodeType":"359","messageId":"360","endLine":13,"endColumn":15},{"ruleId":"357","severity":1,"message":"431","line":14,"column":8,"nodeType":"359","messageId":"360","endLine":14,"endColumn":21},{"ruleId":"357","severity":1,"message":"391","line":82,"column":11,"nodeType":"359","messageId":"360","endLine":82,"endColumn":20},{"ruleId":"357","severity":1,"message":"392","line":82,"column":22,"nodeType":"359","messageId":"360","endLine":82,"endColumn":27},{"ruleId":"357","severity":1,"message":"377","line":82,"column":29,"nodeType":"359","messageId":"360","endLine":82,"endColumn":35},{"ruleId":"357","severity":1,"message":"393","line":82,"column":37,"nodeType":"359","messageId":"360","endLine":82,"endColumn":48},{"ruleId":"357","severity":1,"message":"394","line":82,"column":50,"nodeType":"359","messageId":"360","endLine":82,"endColumn":60},{"ruleId":"357","severity":1,"message":"378","line":83,"column":9,"nodeType":"359","messageId":"360","endLine":83,"endColumn":13},{"ruleId":"357","severity":1,"message":"418","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"432","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"415","line":3,"column":16,"nodeType":"359","messageId":"360","endLine":3,"endColumn":24},{"ruleId":"357","severity":1,"message":"433","line":3,"column":26,"nodeType":"359","messageId":"360","endLine":3,"endColumn":33},{"ruleId":"357","severity":1,"message":"434","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":17},{"ruleId":"357","severity":1,"message":"435","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":26},{"ruleId":"357","severity":1,"message":"436","line":5,"column":28,"nodeType":"359","messageId":"360","endLine":5,"endColumn":38},{"ruleId":"357","severity":1,"message":"437","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":20},{"ruleId":"357","severity":1,"message":"438","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":27},{"ruleId":"357","severity":1,"message":"439","line":10,"column":10,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"440","line":12,"column":8,"nodeType":"359","messageId":"360","endLine":12,"endColumn":21},{"ruleId":"357","severity":1,"message":"412","line":13,"column":8,"nodeType":"359","messageId":"360","endLine":13,"endColumn":18},{"ruleId":"357","severity":1,"message":"429","line":15,"column":8,"nodeType":"359","messageId":"360","endLine":15,"endColumn":14},{"ruleId":"357","severity":1,"message":"388","line":17,"column":9,"nodeType":"359","messageId":"360","endLine":17,"endColumn":13},{"ruleId":"357","severity":1,"message":"441","line":18,"column":8,"nodeType":"359","messageId":"360","endLine":18,"endColumn":17},{"ruleId":"357","severity":1,"message":"442","line":2,"column":8,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"388","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":12},{"ruleId":"357","severity":1,"message":"395","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":12},{"ruleId":"357","severity":1,"message":"443","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":24},{"ruleId":"357","severity":1,"message":"378","line":101,"column":9,"nodeType":"359","messageId":"360","endLine":101,"endColumn":13},{"ruleId":"357","severity":1,"message":"377","line":102,"column":28,"nodeType":"359","messageId":"360","endLine":102,"endColumn":34},{"ruleId":"357","severity":1,"message":"444","line":108,"column":9,"nodeType":"359","messageId":"360","endLine":108,"endColumn":28},{"ruleId":"357","severity":1,"message":"445","line":142,"column":9,"nodeType":"359","messageId":"360","endLine":142,"endColumn":20},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'CreateResume' is defined but never used.","Identifier","unusedVar","'LoadingSpinner' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["448","449"],"Unnecessary escape character: \\^.",["450","451"],"Unnecessary escape character: \\*.",["452","453"],"'ListAltIcon' is defined but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","unexpected","'history' is assigned a value but never used.","'status' is assigned a value but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.","ArrayExpression",["454"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'Link' is defined but never used.","'interviews' is assigned a value but never used.","'setInterviews' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'clearError' is assigned a value but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'ExitToAppIcon' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'useHttpClient' is defined but never used.","'AuthContext' is defined but never used.","'Copyright' is defined but never used.","'paperStyle' is assigned a value but never used.","'setdata' is assigned a value but never used.","'messagesObject' is assigned a value but never used.","'theme' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'responseData' is assigned a value but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'IoIosPeople' is defined but never used.","'MenuItem' is defined but never used.","'handleOpenDialog' is assigned a value but never used.","'SettingsIcon' is defined but never used.","'useState' is defined but never used.","'MyID' is assigned a value but never used.","'useContext' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ViewInterview' is defined but never used.","'DialogContentText' is defined but never used.","React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.",["455"],"'bgInterview5' is defined but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","'CandidateList' is defined but never used.","'Menu' is defined but never used.","'Divider' is defined but never used.","'IoMdEye' is defined but never used.","'FaRegCheckCircle' is defined but never used.","'FaRegClock' is defined but never used.","'MoreVertIcon' is defined but never used.","'OutsideClickHandler' is defined but never used.","'useTheme' is defined but never used.","'useMediaQuery' is defined but never used.","'BlockIcon' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'signUpSubmitHandler' is assigned a value but never used.","'avatarStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"456","fix":"457","desc":"458"},{"messageId":"459","fix":"460","desc":"461"},{"messageId":"456","fix":"462","desc":"458"},{"messageId":"459","fix":"463","desc":"461"},{"messageId":"456","fix":"464","desc":"458"},{"messageId":"459","fix":"465","desc":"461"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},"removeEscape",{"range":"470","text":"471"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"472","text":"473"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"474","text":"471"},{"range":"475","text":"473"},{"range":"476","text":"471"},{"range":"477","text":"473"},"Update the dependencies array to be: [initialValues]",{"range":"478","text":"479"},"Update the dependencies array to be: [faqs, sendRequest]",{"range":"480","text":"481"},[1620,1621],"",[1620,1620],"\\",[1623,1624],[1623,1623],[1626,1627],[1626,1626],[2153,2155],"[initialValues]",[707,713],"[faqs, sendRequest]"]