[{"D:\\FYP\\Interview_Assistant\\frontend\\src\\index.js":"1","D:\\FYP\\Interview_Assistant\\frontend\\src\\App.js":"2","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\AppTheme\\theme.js":"3","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\auth-context.js":"4","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\MainNavigation.js":"5","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\auth-hook.js":"6","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\EmailVerification.js":"7","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\ResetPassword.js":"8","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\UserProfile.js":"9","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\signUp.js":"10","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\Interview.js":"11","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CreateInterview.js":"12","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesList.js":"13","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\pages\\Chat.js":"14","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Auth.js":"15","D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\pages\\Faq.js":"16","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\Navbar.js":"17","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\LoadingSpinner.js":"18","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewCandidates.js":"19","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewForm.js":"20","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\http-hook.js":"21","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\User.js":"22","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\SignupForm.js":"23","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\AuthForm.js":"24","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\MessageBox.js":"25","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\RightTopBar.js":"26","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\LeftTopBar.js":"27","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationList.js":"28","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ChatSearch.js":"29","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\BottomBar.js":"30","D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqCollection.js":"31","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesDialogItems.js":"32","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\DatePicker.js":"33","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\TimePicker.js":"34","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\Message.js":"35","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UsersList.js":"36","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\SelectBox.js":"37","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\RadioButtons.js":"38","D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqList.js":"39","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserItem.js":"40","D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqListItems.js":"41","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewList.js":"42","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewItems.js":"43","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewMenu.js":"44","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\DeleteInterview.js":"45","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CancelInterview.js":"46","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\CodeVerification.js":"47","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\ViewInterview.js":"48","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewDetails.js":"49","D:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Pages\\Resume.js":"50","D:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\CreateResume.js":"51","D:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\ResumeForm.js":"52"},{"size":377,"mtime":1614676864035,"results":"53","hashOfConfig":"54"},{"size":2942,"mtime":1615376159988,"results":"55","hashOfConfig":"54"},{"size":697,"mtime":1615370008061,"results":"56","hashOfConfig":"54"},{"size":202,"mtime":1615364185946,"results":"57","hashOfConfig":"54"},{"size":6777,"mtime":1615377404217,"results":"58","hashOfConfig":"54"},{"size":1582,"mtime":1614676864225,"results":"59","hashOfConfig":"54"},{"size":5560,"mtime":1615364187354,"results":"60","hashOfConfig":"54"},{"size":4849,"mtime":1614676864253,"results":"61","hashOfConfig":"54"},{"size":492,"mtime":1614676864257,"results":"62","hashOfConfig":"54"},{"size":5989,"mtime":1615364188432,"results":"63","hashOfConfig":"54"},{"size":5071,"mtime":1615364182217,"results":"64","hashOfConfig":"54"},{"size":3460,"mtime":1615364181620,"results":"65","hashOfConfig":"54"},{"size":9455,"mtime":1615364181567,"results":"66","hashOfConfig":"54"},{"size":6762,"mtime":1615311264168,"results":"67","hashOfConfig":"54"},{"size":5368,"mtime":1615364187126,"results":"68","hashOfConfig":"54"},{"size":3276,"mtime":1614925573177,"results":"69","hashOfConfig":"54"},{"size":7322,"mtime":1615364183066,"results":"70","hashOfConfig":"54"},{"size":605,"mtime":1614676864221,"results":"71","hashOfConfig":"54"},{"size":2284,"mtime":1615364181621,"results":"72","hashOfConfig":"54"},{"size":6372,"mtime":1615364182210,"results":"73","hashOfConfig":"54"},{"size":1604,"mtime":1615364185949,"results":"74","hashOfConfig":"54"},{"size":470,"mtime":1614676864233,"results":"75","hashOfConfig":"54"},{"size":11844,"mtime":1615364186029,"results":"76","hashOfConfig":"54"},{"size":4329,"mtime":1615364186027,"results":"77","hashOfConfig":"54"},{"size":523,"mtime":1615214955447,"results":"78","hashOfConfig":"54"},{"size":1069,"mtime":1615140383817,"results":"79","hashOfConfig":"54"},{"size":958,"mtime":1615044277381,"results":"80","hashOfConfig":"54"},{"size":1413,"mtime":1615272959834,"results":"81","hashOfConfig":"54"},{"size":374,"mtime":1614676864003,"results":"82","hashOfConfig":"54"},{"size":1533,"mtime":1615225801405,"results":"83","hashOfConfig":"54"},{"size":896,"mtime":1615280957210,"results":"84","hashOfConfig":"54"},{"size":1916,"mtime":1614676863975,"results":"85","hashOfConfig":"54"},{"size":605,"mtime":1615364184628,"results":"86","hashOfConfig":"54"},{"size":604,"mtime":1615364185713,"results":"87","hashOfConfig":"54"},{"size":531,"mtime":1615214599380,"results":"88","hashOfConfig":"54"},{"size":543,"mtime":1614676864237,"results":"89","hashOfConfig":"54"},{"size":1818,"mtime":1615364185185,"results":"90","hashOfConfig":"54"},{"size":1442,"mtime":1615364186028,"results":"91","hashOfConfig":"54"},{"size":378,"mtime":1615280420786,"results":"92","hashOfConfig":"54"},{"size":6460,"mtime":1615366148046,"results":"93","hashOfConfig":"54"},{"size":1791,"mtime":1615364182802,"results":"94","hashOfConfig":"54"},{"size":2229,"mtime":1614676863991,"results":"95","hashOfConfig":"54"},{"size":5080,"mtime":1615364182213,"results":"96","hashOfConfig":"54"},{"size":3940,"mtime":1615364182214,"results":"97","hashOfConfig":"54"},{"size":1927,"mtime":1615183254786,"results":"98","hashOfConfig":"54"},{"size":1999,"mtime":1615183254786,"results":"99","hashOfConfig":"54"},{"size":10472,"mtime":1615364187352,"results":"100","hashOfConfig":"54"},{"size":1618,"mtime":1615364182218,"results":"101","hashOfConfig":"54"},{"size":5915,"mtime":1615364182126,"results":"102","hashOfConfig":"54"},{"size":175,"mtime":1615375524546,"results":"103","hashOfConfig":"54"},{"size":5299,"mtime":1615398077324,"results":"104","hashOfConfig":"54"},{"size":12705,"mtime":1615398151455,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"swq0io",{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FYP\\Interview_Assistant\\frontend\\src\\index.js",[],["230","231"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\App.js",["232"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\AppTheme\\theme.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\auth-context.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\MainNavigation.js",["233","234"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\auth-hook.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\EmailVerification.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\ResetPassword.js",["235","236","237"],"import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword() {\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"20px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"#2D5F5D\",\r\n  };\r\n  const initialValues = {\r\n    username: \"\",\r\n  };\r\n  const ButtonStyle = {\r\n    minWidth: \"160px\",\r\n    minHeight: \"40px\",\r\n    margin: \"10px 8px \",\r\n  };\r\n  const validationSchema = yup.object().shape({\r\n    NewPass: yup\r\n    .string()\r\n    .min(8, \"Password must be atleast 8 characters long\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/,\r\n      \"Must contain One Number and One Special Case Character\"\r\n    ),\r\n  \r\n    ConfirmPass: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"NewPass\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  // const onSubmitHandler = (values, props) => {\r\n  //   console.log(\"Has been submitted\");\r\n  //   console.log(values);\r\n  //   window.location = '/login';\r\n  // setTimeout(() => {\r\n  //    props.resetForm();\r\n  //  props.setSubmitting(false);\r\n  //    }, 1000);\r\n  //  console.log(props);\r\n  //   };\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Reset Password?\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VpnKeyIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            // onSubmit={onSubmitHandler}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(props) => (\r\n              <Form  className={classes.form}>\r\n                {console.log(props)}\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                 // type=\"password\"\r\n                  id=\"NewPass\"\r\n                  label=\"Enter new Password\"\r\n                  name=\"NewPass\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"NewPass\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n\r\n                  <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  type=\"password\"\r\n                  id=\"ConfirmPass\"\r\n                  label=\"Confirm Password\"\r\n                  name=\"ConfirmPass\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"ConfirmPass\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/Home\"\r\n                  disabled= {!(props.isValid || props.isSubmitting)}\r\n                >\r\n                 Reset\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/login\"\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={3}></Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\UserProfile.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\signUp.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\Interview.js",["238"],"import React, {useState} from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InterviewList from \"../components/InterviewList\";\r\nimport bgInterview5 from \"../../shared/components/UIElements/Images/bgInterview5.jpg\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateInterview from \"../components/CreateInterview\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  hero: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    marginTop: 0,\r\n    backgroundImage: `linear-gradient(\r\n        to bottom,\r\n        rgba(0, 27.8, 46.7, 0.7),\r\n        rgba(78, 120, 160, 0.7)\r\n      ), url(${bgInterview5})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 50px\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  button:{\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  }\r\n}));\r\n\r\nconst DUMMY_INTERVIEWS = [\r\n  {\r\n    id: \"I1\",\r\n    title: \"Interview for Hiring QA testing Team\",\r\n    description:\r\n      \"Team that ensures the quality of software or application being developed\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: false,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"TAKEN\",\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"I2\",\r\n    title: \"Interview for Architecture designing of Systems\",\r\n    description: \"building system and object designs of the system\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: true,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"CANCELLED\",\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"I3\",\r\n    title: \"Interview for Teaching\",\r\n    description: \"Teaching in University to high level Students\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: false,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"PENDING\",\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"I4\",\r\n    title: \"Interview for Teaching\",\r\n    description: \"Teaching in University to high level Students\",\r\n    date: new Date().toLocaleString(),\r\n    isCancelled: false,\r\n    field: null,\r\n    candidates: null,\r\n    sendRequests: null,\r\n    receiveRequests: null,\r\n    status: \"PENDING\",\r\n    creator: \"u1\",\r\n  },\r\n];\r\n\r\nconst Interview = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n   \r\n  const classes = useStyles();\r\n  // const userId = useParams().userId;\r\n  //const loadedInterviews = DUMMY_INTERVIEWS.filter(interview => interview.creator === userId);\r\n  // const loadedInterviews = {DUMMY_INTERVIEWS}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Box className={classes.hero}>\r\n          <Box>Interviews</Box>\r\n        </Box>\r\n        <Container maxWidth=\"lg\" component=\"main\">\r\n          <Paper elevation={5} className={classes.paper}>\r\n          \r\n              <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={()=>{\r\n                handleOpenDialog()\r\n              }}\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Create Interview\r\n            </Button>\r\n           \r\n            {open &&   \r\n            <CreateInterview open={open}  handleCloseDialog={handleCloseDialog}/>}           \r\n          \r\n            <InterviewList items={DUMMY_INTERVIEWS} />\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Interview;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CreateInterview.js",["239","240","241","242","243","244","245"],"import React, { Fragment, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DvrIcon from \"@material-ui/icons/Dvr\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InterviewForm from \"./InterviewForm\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Smarthire\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CreateInterview = (props) => {\r\n  //   const {error } = useHttpClient();\r\n\r\n  //   const auth = useContext(AuthContext);\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [field, setField] = useState(\"Field\");\r\n  const [doi, setDoi] = useState(date);\r\n  const [timeOfInter, setTimeOfInter] = useState(\"12:00\");\r\n\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleCloseDialog}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n      \r\n        <DialogTitle\r\n          onClose={props.handleCloseDialog}\r\n          className={classes.dialogTitle}\r\n        >\r\n        <Typography align=\"center\" variant=\"h4\">\r\n            Schedule Interview\r\n          </Typography>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <DvrIcon style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            <InterviewForm \r\n             field={field}\r\n             setField={setField}\r\n             doi={doi}\r\n             setDoi={setDoi}\r\n             timeOfInter = {timeOfInter}\r\n             setTimeOfInter = {setTimeOfInter}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateInterview;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesList.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\pages\\Chat.js",["246","247"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Auth.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\pages\\Faq.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\Navbar.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\LoadingSpinner.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewCandidates.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewForm.js",["248"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import { useHttpClient } from '../../shared/hooks/http-hook';\r\n// import { AuthContext } from '../../shared/context/auth-context';\r\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport DatePicker from \"../../shared/components/UIElements/FormElements/DatePicker\";\r\nimport TimePicker from \"../../shared/components/UIElements/FormElements/TimePicker\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GridStyle :{\r\n   margin : \"0px 22px\"\r\n  },\r\n \r\n  \r\n}));\r\n\r\n\r\nconst fields = [\r\n  \"Oliver Hansen\",\r\n  \"Van Henry\",\r\n  \"April Tucker\",\r\n  \"Ralph Hubbard\",\r\n  \"Omar Alexander\",\r\n  \"Carlos Abbott\",\r\n  \"Miriam Wagner\",\r\n  \"Bradley Wilkerson\",\r\n  \"Virginia Andrews\",\r\n  \"Kelly Snyder\",\r\n];\r\n\r\nconst InterviewForm = (props) => {\r\n  //     // const { isLoading, error, sendRequest } = useHttpClient();\r\n  //     // const auth = useContext(AuthContext);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n \r\n  const initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    title: yup\r\n      .string()\r\n      .min(5, \"Title must be atleast 5 characters long\")\r\n      .required(\"Title is required\"),\r\n    description: yup\r\n      .string()\r\n      .min(15, \"Description must be atleast 15 characters long\")\r\n      .required(\"Description is required\"),\r\n  });\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    // try {\r\n    //     const responseData = await sendRequest(\r\n    //         'http://localhost:5000/api/users/login',\r\n    //         'POST',\r\n    //         JSON.stringify({\r\n    //             email: values.username,\r\n    //             password: values.password\r\n    //         }),\r\n    //         {\r\n    //             'Content-Type': 'application/json'\r\n    //         }\r\n    //     );\r\n    //     auth.login(responseData.userId, responseData.token);\r\n    // } catch (err) { }\r\n  };\r\n  return (\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container>\r\n              <Grid item xs={12} >\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  name=\"title\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"title\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  multiline\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  id=\"description\"\r\n                  autoComplete=\"description\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"description\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid container  >\r\n              <Grid item xs={3} sm={3} className = {classes.GridStyle} >\r\n                <SelectBox\r\n                  value={props.field}\r\n                  setValue={props.setField}\r\n                  title={\"Select Field \"}\r\n                  data={fields}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={3} sm={3} className = {classes.GridStyle}>\r\n                <DatePicker date={props.doi} setDate={props.setDoi} />\r\n              </Grid>\r\n\r\n              <Grid item xs={3} sm={3} className = {classes.GridStyle} >\r\n              <TimePicker\r\n                                time={props.timeOfInter}\r\n                                setTime={props.setTimeOfInter}\r\n                            />\r\n              </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            {console.log(\"Field \" + props.field)}\r\n            {console.log(\"DOI \" + props.doi)}\r\n            {console.log(\"DOI \" + props.timeOfInter)}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!(fProps.isValid || !props.field || !props.doi || fProps.isSubmitting)}\r\n              className={classes.submit}\r\n            >\r\n              Create Interview\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n  \r\n  );\r\n};\r\n\r\nexport default InterviewForm;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\http-hook.js",["249"],"import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [status, setStatus] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          setStatus(response.status);\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        if (!status)\r\n          setStatus(400);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, status, sendRequest, clearError };\r\n};\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\User.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\SignupForm.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\AuthForm.js",["250","251","252"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst AuthForm = props => {\r\n    const { isLoading, error,status, sendRequest,clearError } = useHttpClient();\r\n    const [rememberme,setRememberme] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n    useEffect(()=>{\r\n        if (localStorage.checkbox ===\"true\") {\r\n            setRememberme(true);\r\n            initialValues.username = localStorage.username;\r\n            initialValues.password = localStorage.password;\r\n          } else {\r\n            setRememberme(false);\r\n          }\r\n    },[]);\r\n    \r\n    const validationSchema = yup.object().shape({\r\n        username: yup.string()\r\n            .email(\"Please enter valid email\")\r\n            .required(\"Email is required\"),\r\n        password: yup.string()\r\n            .min(6, \"Password must be atleast 6 characters long\")\r\n            .required(\"Password is required\"),\r\n    });\r\n\r\n    const onSubmitHandler = async (values) => {\r\n        if (rememberme) {\r\n            localStorage.username = values.username;\r\n            localStorage.password = values.password;\r\n            localStorage.checkbox = \"true\";\r\n          } else {\r\n            localStorage.username = \"\";\r\n            localStorage.password = \"\";\r\n            localStorage.checkbox = \"false\";\r\n          }\r\n        try {\r\n            const responseData = await sendRequest(\r\n                'http://localhost:5000/api/users/login',\r\n                'POST',\r\n                JSON.stringify({\r\n                    email: values.username,\r\n                    password: values.password\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            );\r\n            auth.login(responseData.userId, responseData.token);\r\n            {console.log(responseData.userId)}\r\n        } catch (err) {}\r\n    };\r\n    return (\r\n        <React.Fragment>                \r\n            <LoadingSpinner open={isLoading} />\r\n            {status!=401&&(      \r\n            <Snackbar open={error} autoHideDuration={6000} onClose={clearError}>\r\n                <MuiAlert elevation={6} variant=\"filled\"  severity=\"error\"  onClose={clearError}>\r\n                  {error}\r\n                </MuiAlert>\r\n              </Snackbar>\r\n              )}\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmitHandler}\r\n            >\r\n\r\n                {(props) => (\r\n                    <Form>\r\n                        <Field\r\n                            as={TextField}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"username\"\r\n                            autoComplete=\"email\"\r\n                            helperText={\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Field\r\n                            as={TextField}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            helperText={\r\n                                <ErrorMessage\r\n                                    name=\"password\"\r\n                                    style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                />\r\n                            }\r\n                        />\r\n                        <Field\r\n                            as={FormControlLabel}\r\n                            name=\"remember\"\r\n                            control={<Checkbox value=\"remember\" color=\"secondary\" checked={rememberme} onChange={()=>{setRememberme(!rememberme)}}/>}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        {status === 401 ? (\r\n                            <Typography className=\"MuiFormHelperText-root\" align=\"center\" variant=\"body1\">{error}</Typography>\r\n                        ) : \" \"}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!(props.isValid || props.isSubmitting)}\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\MessageBox.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\RightTopBar.js",["253"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n import './RightTopBar.css';\r\n\r\n\r\n function RightTopBar(props) {\r\n\r\n  \r\n  return (\r\n<>\r\n\r\n    <div className=\"avatar-component\">\r\n\r\n    <Avatar>  \r\n        </Avatar>\r\n        <div style={{margin:\"10px\"}}>\r\n      <Typography variant=\"h6\" >\r\n     {props.user.with}\r\n     </Typography>\r\n     </div>\r\n     \r\n\r\n</div>\r\n<div style={{float:\"right\"}}>\r\n         \r\n   \r\n          <IconButton\r\n            >\r\n              <CallIcon color=\"primary\"/>\r\n            </IconButton>\r\n    \r\n          <IconButton\r\n            >\r\n              <VideocamIcon color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n            >\r\n              <MoreVertIcon color=\"primary\" />\r\n            </IconButton>\r\n     </div>\r\n</>\r\n  );\r\n\r\n  }\r\nexport default RightTopBar;","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\LeftTopBar.js",["254","255"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport './LeftTopBar.css';\r\n\r\n\r\nfunction LeftTopBar() {\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"avatar-component\">\r\n\r\n        <Avatar>\r\n          {/* // src=\"https://st3.depositphotos.com/6697918/15699/v/380/depositphotos_156996594-stock-illustration-beautiful-muslim-arab-woman-in.jpg \"\r\n        // alt=\"\"  */}\r\n        </Avatar>\r\n        <div style={{ margin: \"10px\" }}>\r\n          <Typography variant=\"h6\" >\r\n            Muqaddas\r\n          </Typography>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <IconButton\r\n        >\r\n          <MoreVertIcon color=\"primary\" />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\nexport default LeftTopBar;","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationList.js",["256"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./ConversationList.css\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\n\r\n\r\nfunction ConversationList({data, setcontactSelected}) {\r\n\r\n\r\n  if (data.length === 0) {\r\n    return(\r\n       \r\n          <Typography variant=\"h5\" color=\"primary\" align=\"center\" style={{marginTop:\"200px\"}}>\r\n            No Chats Available\r\n          </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n     {data.map(chat=>(\r\n\r\n           <div className=\"contact-box\" onClick={()=>setcontactSelected(chat)}>\r\n           <div className=\"avatar-component\">\r\n             <Avatar style={{ height: \"50px\", width: \"50px\", marginRight: \"10px\" }}>        \r\n             </Avatar>\r\n           </div>\r\n       \r\n           <div className=\"right-section\">\r\n              <div className=\"contact-box-header\">\r\n        \r\n               <Typography variant=\"h6\" className=\"avatar-title\">{chat.with}</Typography>\r\n           \r\n                <span className=\"time-mark\">yesterday</span>\r\n              </div>\r\n              <div className=\"last-msg\">\r\n                <Typography className=\"text\" variant=\"body2\" >Hello ! How are you!!</Typography >\r\n              </div>\r\n            </div>\r\n          </div> \r\n     \r\n        \r\n        ))}         \r\n\r\n     \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConversationList;","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ChatSearch.js",["257"],"import React from \"react\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport \"./ChatSearch.css\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n function ChatSearch() {\r\n \r\n  return (\r\n    <>\r\n    <div className=\"search\">\r\n\r\n <SearchBar \r\n    placeholder=\"Search Chat\" style={{height:\"40px\", width:\"100%\"}}\r\n  />\r\n  </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ChatSearch;","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\BottomBar.js",["258"],"import React, { useState } from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport './BottomBar.css';\r\n\r\n function BottomBar({Newmessage, setNewmessage, pushMessages}) {\r\n//  const [newMessage,setNewMessage]=useState('');\r\n//  const sendMessage=()=>{\r\n//    let message =  {\r\n//     sender: \"\",\r\n//     receiver: \"\",\r\n//     content: newMessage,\r\n//     time : \"\",\r\n//     isRead: true,\r\n//   };\r\n//   console.log(props.currentMessages)\r\n//   props.setCurrentMessages(...props.currentMessages.messages,message);\r\n  \r\n\r\n \r\n  return (\r\n    <>\r\n    <div className=\"chat-input-box\">\r\n                    <div >\r\n                    <IconButton>\r\n                      <EmojiEmotionsIcon color=\"primary\" />\r\n                    </IconButton>\r\n                    </div>\r\n\r\n                    <div className=\"chat-input\">\r\n                    <input type=\"text\" placeholder=\"Type a message\" value={Newmessage} onChange={(e)=>setNewmessage(e.target.value)}/>\r\n\r\n                        {/* <input type=\"text\" placeholder=\"Type a message\" value ={newMessage}onChange={(e)=>{setNewMessage(e.target.value)}}/> */}\r\n                    </div>\r\n\r\n                    <div >\r\n                    <IconButton>\r\n                      <SendIcon color=\"primary\" onClick={pushMessages}/>\r\n                    </IconButton>\r\n                    </div>\r\n                </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default BottomBar;","D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqCollection.js",["259","260","261","262"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesDialogItems.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\DatePicker.js",["263"],"import React, { useState } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst DatePicker = (props) => {\r\n    const handleDateChange = (e) => {\r\n        props.setDate(e.target.value);\r\n        console.log(props.date)\r\n      };\r\n\r\n     \r\n    return (\r\n\r\n        <TextField\r\n        id=\"date\"\r\n        label=\"Date of Birth\"\r\n        fullWidth\r\n        type=\"date\"\r\n        onChange={handleDateChange}\r\n        defaultValue={props.date}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n\r\n    );\r\n};\r\nexport default DatePicker;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\TimePicker.js",["264"],"import React, { useState } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst TimePicker = (props) => {\r\n    const handleTimeChange = (e) => {\r\n        props.setTime(e.target.value);\r\n      };\r\n\r\n    return (\r\n        <TextField\r\n        id=\"time\"\r\n        label=\"Set time\"\r\n        type=\"time\"\r\n        onChange = {handleTimeChange}\r\n        defaultValue={props.time}\r\n        fullWidth\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    \r\n\r\n    );\r\n};\r\nexport default TimePicker;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\Message.js",["265"],"import React from \"react\";\r\nimport './Message.css';\r\n\r\nfunction Message(props) {\r\nconst MyID = \"muqs\"\r\n    return (\r\n        <>\r\n                <div className={props.message.sender === \"Muqaddas\"?\"message sent\" : \"message received\"}>\r\n                    {props.message.content}\r\n                    <div className=\"metadata\">\r\n                        <span className=\"date\">{props.message.date}</span>\r\n                    </div>\r\n                </div>\r\n               \r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UsersList.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\SelectBox.js",["266","267","268"],"import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    FormHelperText: {\r\n        marginLeft: 15\r\n    }\r\n}));\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\n\r\n\r\nconst ProfileForm = (props) => {\r\n    const classes = useStyles();\r\n    const handleSelect = event => {\r\n        props.setValue(event.target.value);\r\n    };\r\n    const names = props.data;\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel\r\n\r\n                id=\"handle\" >{props.title}\r\n            </InputLabel>\r\n            <Select\r\n                labelId=\"handle\"\r\n                id=\"handle\"\r\n                value={props.value}\r\n                onChange={handleSelect}\r\n                MenuProps={MenuProps}\r\n\r\n            >\r\n                {names.map((name) => (\r\n                    <MenuItem key={name} value={name}   >\r\n                        {name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            <FormHelperText className={classes.FormHelperText} >{(!props.value ) && \"This field is required\"}</FormHelperText>\r\n        </FormControl>\r\n\r\n    );\r\n};\r\nexport default ProfileForm;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\RadioButtons.js",["269"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    FormHelperText: {\r\n        marginLeft: 15\r\n    }\r\n}));\r\n\r\nconst RadioButtons = (props) => {\r\n    const classes = useStyles();\r\n    const handleGenderChange = (e) => {\r\n        props.setGender(e.target.value);\r\n      };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={props.gender} onChange={handleGenderChange}>\r\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n        </RadioGroup>\r\n        <FormHelperText className={classes.FormHelperText} >{(!props.gender) && 'This field is required'}</FormHelperText>\r\n\r\n      </FormControl>\r\n\r\n    );\r\n};\r\nexport default RadioButtons;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqList.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserItem.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqListItems.js",["270"],"import React, {useState} from 'react';\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    \r\n      accor: {\r\n        padding: \"20px 40px\",\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        color: \"#004777\",\r\n      },\r\n\r\n    }));\r\nconst FaqListItems = (props) =>{\r\n//    const [open, setOpen] = useState(false);\r\n\r\n//     const AccordianHandler = ()=>{\r\n//         setOpen(open)\r\n    //}\r\n    // const AccordID =  props.id\r\n    // const [expanded, setExpanded] = useState(false);\r\n    // const handleChange = panel => (isExpanded) => {\r\n    //   setExpanded(isExpanded ? panel : false);\r\n    //   console.log(\"Panel \"+panel)\r\n    // };\r\n\r\n    const classes = useStyles();\r\nreturn (\r\n \r\n  \r\n    <Accordion className={classes.accor} \r\n\r\n    >\r\n        {/* {console.log(\"accor \"+AccordID)}\r\n        {console.log(\"expanded \"+expanded)} */}\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon/>}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography className={classes.heading} align = \"justify\">\r\n       {props.question}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>   \r\n        <Typography  align = \"justify\">\r\n       {props.answer}\r\n          \r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n\r\n\r\n);\r\n}\r\n\r\nexport default FaqListItems;","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewList.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewItems.js",["271"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuItem, Divider } from \"@material-ui/core\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport { FaRegCheckCircle, FaRegClock } from \"react-icons/fa\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n\r\nimport InterviewMenu from \"./InterviewMenu\";\r\nimport ViewInterview from \"./ViewInterview\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"10px 17px\",\r\n    // background:\r\n    //   \"linear-gradient( rgba(0, 27.8, 46.7, 0.7), rgba(78, 120, 160, 0.5))\",\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst InterviewItems = (props) => {\r\n  const MoreIconStyle = {\r\n    marginTop: \"5px\",\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [InterviewMobAnchorEl, setInterviewMobAnchorEl] = useState(null);\r\n  const isInterviewMenuOpen = Boolean(InterviewMobAnchorEl);\r\n\r\n  const openInterviewMenu = (event) => {\r\n    setInterviewMobAnchorEl(event.currentTarget);\r\n  };\r\n  const closeInterviewMenu = () => {\r\n    setInterviewMobAnchorEl(null);\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const InterviewMobileMenu = (\r\n    <Menu\r\n      anchorEl={InterviewMobAnchorEl}\r\n      id=\"Int-mob-menu\"\r\n      keepMounted\r\n      open={isInterviewMenuOpen}\r\n      // anchorOrigin={{\r\n      //   vertical: \"right\",\r\n      //   horizontal: \"bottom\",\r\n      // }}\r\n      getContentAnchorEl={null}\r\n    >\r\n      {matches && (\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleOpenDialog();\r\n          }}\r\n          style={{ height: 40 }}\r\n        >\r\n          <IconButton color=\"primary\">\r\n            <IoMdEye />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">View Details</Typography>\r\n        </MenuItem>\r\n      )}\r\n      <Divider variant=\"middle\" />\r\n      {open && (\r\n        <ViewInterview open={open} handleCloseDialog={handleCloseDialog} />\r\n      )}\r\n      <InterviewMenu\r\n        closeInterviewMenu={closeInterviewMenu}\r\n        status={props.status}\r\n      />\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Grid container spacing={5}>\r\n        <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n          <div className={classes.header}>\r\n            <Typography variant=\"h5\" align=\"justify\">\r\n              {props.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" style={{ color: grey[900] }}>\r\n              {props.date}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={6} lg={5}>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            //  color=\"#fff\"\r\n            className={classes.statusStyle}\r\n          >\r\n            {(props.status === \"PENDING\" && (\r\n              <FaRegClock className={classes.statusIconStyle} />\r\n            )) ||\r\n              (props.status === \"TAKEN\" && (\r\n                <FaRegCheckCircle className={classes.statusIconStyle} />\r\n              )) ||\r\n              (props.status === \"CANCELLED\" && (\r\n                <BlockIcon className={classes.statusIconStyle} />\r\n              ))}\r\n            {props.status}\r\n          </Typography>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.ViewButton}\r\n            startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n            onClick={() => {\r\n              handleOpenDialog();\r\n            }}\r\n          >\r\n            View Details\r\n          </Button>\r\n          {open && (\r\n        <ViewInterview open={open} handleCloseDialog={handleCloseDialog} />\r\n      )}\r\n        </Grid>\r\n      </Grid>\r\n      <OutsideClickHandler onOutsideClick={closeInterviewMenu}>\r\n        <IconButton onClick={openInterviewMenu}>\r\n          <MoreVertIcon style={MoreIconStyle} />\r\n        </IconButton>\r\n      </OutsideClickHandler>\r\n      {InterviewMobileMenu}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InterviewItems;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewMenu.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\DeleteInterview.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CancelInterview.js",["272","273"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CancelInterview = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // const CloseCancelDialogHandler = () => {\r\n  //   props.setOpenCancelDialog(false);\r\n  //   console.log(props.OpenCancelDialog);\r\n  // };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.OpenCancelDialog}\r\n      onClose={props.CloseCancelDialogHandler}\r\n      fullWidth\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle\r\n        onClose={props.CloseCancelDialogHandler}\r\n        className={classes.dialogTitle}\r\n      >\r\n        Cancel Interview Confirmation\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <div className={classes.demo}>\r\n          Are you sure you want to cancel this interview?\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={props.CloseCancelDialogHandler}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        >\r\n          No\r\n        </Button>\r\n        <Button\r\n          onClick={props.CloseCancelDialogHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CancelInterview;\r\n","D:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\CodeVerification.js",["274"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\ViewInterview.js",["275","276"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewDetails.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Pages\\Resume.js",[],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\CreateResume.js",["277","278","279","280","281","282","283","284"],"D:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\ResumeForm.js",[],{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":26,"column":8,"nodeType":"291","messageId":"292","endLine":26,"endColumn":20},{"ruleId":"289","severity":1,"message":"293","line":15,"column":8,"nodeType":"291","messageId":"292","endLine":15,"endColumn":19},{"ruleId":"294","severity":1,"message":"295","line":233,"column":15,"nodeType":"296","messageId":"297","endLine":233,"endColumn":20},{"ruleId":"298","severity":1,"message":"299","line":57,"column":40,"nodeType":"300","messageId":"301","endLine":57,"endColumn":41,"suggestions":"302"},{"ruleId":"298","severity":1,"message":"303","line":57,"column":43,"nodeType":"300","messageId":"301","endLine":57,"endColumn":44,"suggestions":"304"},{"ruleId":"298","severity":1,"message":"305","line":57,"column":46,"nodeType":"300","messageId":"301","endLine":57,"endColumn":47,"suggestions":"306"},{"ruleId":"289","severity":1,"message":"307","line":9,"column":9,"nodeType":"291","messageId":"292","endLine":9,"endColumn":13},{"ruleId":"289","severity":1,"message":"308","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":12},{"ruleId":"289","severity":1,"message":"309","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":11},{"ruleId":"289","severity":1,"message":"310","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"311","line":10,"column":8,"nodeType":"291","messageId":"292","endLine":10,"endColumn":17},{"ruleId":"289","severity":1,"message":"312","line":11,"column":8,"nodeType":"291","messageId":"292","endLine":11,"endColumn":13},{"ruleId":"289","severity":1,"message":"313","line":20,"column":10,"nodeType":"291","messageId":"292","endLine":20,"endColumn":19},{"ruleId":"289","severity":1,"message":"314","line":59,"column":9,"nodeType":"291","messageId":"292","endLine":59,"endColumn":19},{"ruleId":"289","severity":1,"message":"315","line":213,"column":14,"nodeType":"291","messageId":"292","endLine":213,"endColumn":21},{"ruleId":"289","severity":1,"message":"316","line":232,"column":5,"nodeType":"291","messageId":"292","endLine":232,"endColumn":19},{"ruleId":"289","severity":1,"message":"317","line":49,"column":9,"nodeType":"291","messageId":"292","endLine":49,"endColumn":14},{"ruleId":"318","severity":1,"message":"319","line":45,"column":5,"nodeType":"320","endLine":45,"endColumn":7,"suggestions":"321"},{"ruleId":"318","severity":1,"message":"322","line":48,"column":7,"nodeType":"320","endLine":48,"endColumn":9,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":82,"column":13,"nodeType":"326","messageId":"327","endLine":82,"endColumn":47},{"ruleId":"328","severity":1,"message":"329","line":88,"column":20,"nodeType":"330","messageId":"297","endLine":88,"endColumn":22},{"ruleId":"289","severity":1,"message":"308","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"308","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"331","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":20},{"ruleId":"289","severity":1,"message":"312","line":5,"column":10,"nodeType":"291","messageId":"292","endLine":5,"endColumn":15},{"ruleId":"289","severity":1,"message":"308","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":12},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"333","line":9,"column":22,"nodeType":"291","messageId":"292","endLine":9,"endColumn":27},{"ruleId":"289","severity":1,"message":"334","line":9,"column":29,"nodeType":"291","messageId":"292","endLine":9,"endColumn":35},{"ruleId":"289","severity":1,"message":"335","line":9,"column":50,"nodeType":"291","messageId":"292","endLine":9,"endColumn":60},{"ruleId":"318","severity":1,"message":"336","line":25,"column":6,"nodeType":"320","endLine":25,"endColumn":12,"suggestions":"337"},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"338","line":5,"column":7,"nodeType":"291","messageId":"292","endLine":5,"endColumn":11},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"339","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":19},{"ruleId":"289","severity":1,"message":"340","line":3,"column":13,"nodeType":"291","messageId":"292","endLine":3,"endColumn":16},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"332","line":1,"column":16,"nodeType":"291","messageId":"292","endLine":1,"endColumn":24},{"ruleId":"289","severity":1,"message":"307","line":13,"column":10,"nodeType":"291","messageId":"292","endLine":13,"endColumn":14},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"341","line":9,"column":8,"nodeType":"291","messageId":"292","endLine":9,"endColumn":25},{"ruleId":"289","severity":1,"message":"334","line":61,"column":31,"nodeType":"291","messageId":"292","endLine":61,"endColumn":37},{"ruleId":"289","severity":1,"message":"332","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"342","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"343","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":14},{"ruleId":"289","severity":1,"message":"307","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":12},{"ruleId":"289","severity":1,"message":"308","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":12},{"ruleId":"289","severity":1,"message":"344","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":24},{"ruleId":"289","severity":1,"message":"345","line":101,"column":9,"nodeType":"291","messageId":"292","endLine":101,"endColumn":13},{"ruleId":"289","severity":1,"message":"334","line":102,"column":28,"nodeType":"291","messageId":"292","endLine":102,"endColumn":34},{"ruleId":"289","severity":1,"message":"346","line":108,"column":9,"nodeType":"291","messageId":"292","endLine":108,"endColumn":28},{"ruleId":"289","severity":1,"message":"347","line":142,"column":9,"nodeType":"291","messageId":"292","endLine":142,"endColumn":20},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-unused-vars","'CreateResume' is defined but never used.","Identifier","unusedVar","'ListAltIcon' is defined but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","unexpected","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["350","351"],"Unnecessary escape character: \\^.",["352","353"],"Unnecessary escape character: \\*.",["354","355"],"'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'ExitToAppIcon' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'Copyright' is defined but never used.","'paperStyle' is assigned a value but never used.","'setdata' is assigned a value but never used.","'messagesObject' is assigned a value but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'status'. Either include it or remove the dependency array.","ArrayExpression",["356"],"React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.",["357"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'SettingsIcon' is defined but never used.","'useState' is defined but never used.","'error' is assigned a value but never used.","'status' is assigned a value but never used.","'clearError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.",["358"],"'MyID' is assigned a value but never used.","'useFormik' is defined but never used.","'Yup' is defined but never used.","'DialogContentText' is defined but never used.","'useContext' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'auth' is assigned a value but never used.","'signUpSubmitHandler' is assigned a value but never used.","'avatarStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"359","fix":"360","desc":"361"},{"messageId":"362","fix":"363","desc":"364"},{"messageId":"359","fix":"365","desc":"361"},{"messageId":"362","fix":"366","desc":"364"},{"messageId":"359","fix":"367","desc":"361"},{"messageId":"362","fix":"368","desc":"364"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},"removeEscape",{"range":"375","text":"376"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"377","text":"378"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"379","text":"376"},{"range":"380","text":"378"},{"range":"381","text":"376"},{"range":"382","text":"378"},"Update the dependencies array to be: [status]",{"range":"383","text":"384"},"Update the dependencies array to be: [initialValues]",{"range":"385","text":"386"},"Update the dependencies array to be: [faqs, sendRequest]",{"range":"387","text":"388"},[1620,1621],"",[1620,1620],"\\",[1623,1624],[1623,1623],[1626,1627],[1626,1626],[1253,1255],"[status]",[1708,1710],"[initialValues]",[707,713],"[faqs, sendRequest]"]