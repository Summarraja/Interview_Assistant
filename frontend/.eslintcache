[{"E:\\FYP\\Interview_Assistant\\frontend\\src\\index.js":"1","E:\\FYP\\Interview_Assistant\\frontend\\src\\App.js":"2","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\AppTheme\\theme.js":"3","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\LoadingSpinner.js":"4","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\socket-context.js":"5","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\auth-context.js":"6","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\MainNavigation.js":"7","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\auth-hook.js":"8","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\EmailVerification.js":"9","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Auth.js":"10","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\UserProfile.js":"11","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\signUp.js":"12","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\ResetPassword.js":"13","E:\\FYP\\Interview_Assistant\\frontend\\src\\Video Call\\VideoCall.js":"14","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\CodeVerification.js":"15","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\pages\\Faq.js":"16","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CreateInterview.js":"17","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\Interview.js":"18","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\pages\\ViewCertificate.js":"19","E:\\FYP\\Interview_Assistant\\frontend\\src\\Admin\\pages\\AdminHome.js":"20","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesList.js":"21","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\pages\\Certificate.js":"22","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\ViewInterview.js":"23","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Pages\\Resume.js":"24","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewItems.js":"25","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\pages\\Chat.js":"26","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\Navbar.js":"27","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\http-hook.js":"28","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewCandidates.js":"29","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CeritificateList.js":"30","E:\\FYP\\Interview_Assistant\\frontend\\src\\Admin\\Components\\SideBar.js":"31","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\AddCertificate.js":"32","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\UpdateCertificate.js":"33","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\RightTopBar.js":"34","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\LeftTopBar.js":"35","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\MessageBox.js":"36","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationList.js":"37","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\BottomBar.js":"38","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ChatSearch.js":"39","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewMenu.js":"40","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesDialogItems.js":"41","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\SearchCandidates.js":"42","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidateRequestsList.js":"43","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\UploadPhoto.js":"44","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationListItem.js":"45","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidateRequests.js":"46","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidateRequestsDialogItems.js":"47","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CancelInterview.js":"48","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\Message.js":"49","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\DeleteInterview.js":"50","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateForm.js":"51","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\SelectBox.js":"52","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateItems.js":"53","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Templates.js":"54","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Contexts\\ResumeContext.js":"55","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewForm.js":"56","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewList.js":"57","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Right.js":"58","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\UpdateInterview.js":"59","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqCollection.js":"60","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\User.js":"61","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\SignupForm.js":"62","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\AuthForm.js":"63","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateMenu.js":"64","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Basic.js":"65","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Contexts\\fake_data.js":"66","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\DatePicker.js":"67","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\TimePicker.js":"68","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\MyInterviewCandidate.js":"69","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\Paper.js":"70","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqList.js":"71","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\RadioButtons.js":"72","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserItem.js":"73","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\DeleteCertificate.js":"74","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Header.js":"75","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Education.js":"76","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\AdditionalSkills.js":"77","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Professional.js":"78","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\EducationP.js":"79","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\HeaderP.js":"80","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\ProfessionalP.js":"81","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\AdditionalSkillsP.js":"82","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqListItems.js":"83","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UploadPhoto.js":"84","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Home.js":"85","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserSearchedResumes.js":"86","E:\\FYP\\Interview_Assistant\\frontend\\src\\Admin\\Components\\Faqs\\ViewFaqs.js":"87","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\uploadCertificate.js":"88","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\EditProfile.js":"89","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\EditProfileForm.js":"90","E:\\FYP\\Interview_Assistant\\frontend\\src\\RTC.js":"91","E:\\FYP\\Interview_Assistant\\frontend\\src\\Video Call\\Emotions.js":"92"},{"size":493,"mtime":1620766429450,"results":"93","hashOfConfig":"94"},{"size":5386,"mtime":1621282909734,"results":"95","hashOfConfig":"94"},{"size":1071,"mtime":1620038361858,"results":"96","hashOfConfig":"94"},{"size":585,"mtime":1616491590432,"results":"97","hashOfConfig":"94"},{"size":90,"mtime":1619120198880,"results":"98","hashOfConfig":"94"},{"size":222,"mtime":1618658151770,"results":"99","hashOfConfig":"94"},{"size":9790,"mtime":1621166721740,"results":"100","hashOfConfig":"94"},{"size":1857,"mtime":1621282909870,"results":"101","hashOfConfig":"94"},{"size":5724,"mtime":1615449348593,"results":"102","hashOfConfig":"94"},{"size":5371,"mtime":1618482325815,"results":"103","hashOfConfig":"94"},{"size":3912,"mtime":1620766454571,"results":"104","hashOfConfig":"94"},{"size":5997,"mtime":1618393081257,"results":"105","hashOfConfig":"94"},{"size":4811,"mtime":1620763466033,"results":"106","hashOfConfig":"94"},{"size":15337,"mtime":1621283108374,"results":"107","hashOfConfig":"94"},{"size":10679,"mtime":1618673869788,"results":"108","hashOfConfig":"94"},{"size":3288,"mtime":1620749818206,"results":"109","hashOfConfig":"94"},{"size":3965,"mtime":1620761784944,"results":"110","hashOfConfig":"94"},{"size":6986,"mtime":1620762524335,"results":"111","hashOfConfig":"94"},{"size":4573,"mtime":1620732778873,"results":"112","hashOfConfig":"94"},{"size":161,"mtime":1620764433564,"results":"113","hashOfConfig":"94"},{"size":1805,"mtime":1620728831737,"results":"114","hashOfConfig":"94"},{"size":4911,"mtime":1621149067589,"results":"115","hashOfConfig":"94"},{"size":6161,"mtime":1620762558052,"results":"116","hashOfConfig":"94"},{"size":1018,"mtime":1620764433912,"results":"117","hashOfConfig":"94"},{"size":7139,"mtime":1621243966539,"results":"118","hashOfConfig":"94"},{"size":6346,"mtime":1620764434122,"results":"119","hashOfConfig":"94"},{"size":12220,"mtime":1620768894166,"results":"120","hashOfConfig":"94"},{"size":1670,"mtime":1620729717127,"results":"121","hashOfConfig":"94"},{"size":4576,"mtime":1620728861180,"results":"122","hashOfConfig":"94"},{"size":2576,"mtime":1620764587865,"results":"123","hashOfConfig":"94"},{"size":5678,"mtime":1620776693162,"results":"124","hashOfConfig":"94"},{"size":3056,"mtime":1620763519200,"results":"125","hashOfConfig":"94"},{"size":8147,"mtime":1621151301235,"results":"126","hashOfConfig":"94"},{"size":1947,"mtime":1621282909854,"results":"127","hashOfConfig":"94"},{"size":977,"mtime":1620764434122,"results":"128","hashOfConfig":"94"},{"size":3024,"mtime":1620764434122,"results":"129","hashOfConfig":"94"},{"size":1648,"mtime":1620764434122,"results":"130","hashOfConfig":"94"},{"size":2785,"mtime":1620764434114,"results":"131","hashOfConfig":"94"},{"size":937,"mtime":1620764434114,"results":"132","hashOfConfig":"94"},{"size":7145,"mtime":1620763096321,"results":"133","hashOfConfig":"94"},{"size":11630,"mtime":1620763044270,"results":"134","hashOfConfig":"94"},{"size":1598,"mtime":1620370011066,"results":"135","hashOfConfig":"94"},{"size":1637,"mtime":1620727640700,"results":"136","hashOfConfig":"94"},{"size":4028,"mtime":1620764434122,"results":"137","hashOfConfig":"94"},{"size":2562,"mtime":1620764434122,"results":"138","hashOfConfig":"94"},{"size":2582,"mtime":1621282839605,"results":"139","hashOfConfig":"94"},{"size":7058,"mtime":1621287244113,"results":"140","hashOfConfig":"94"},{"size":5158,"mtime":1620765791780,"results":"141","hashOfConfig":"94"},{"size":1401,"mtime":1620764434122,"results":"142","hashOfConfig":"94"},{"size":2954,"mtime":1620634016127,"results":"143","hashOfConfig":"94"},{"size":10798,"mtime":1621153817265,"results":"144","hashOfConfig":"94"},{"size":1899,"mtime":1616876512444,"results":"145","hashOfConfig":"94"},{"size":6408,"mtime":1620749490717,"results":"146","hashOfConfig":"94"},{"size":1514,"mtime":1620764433631,"results":"147","hashOfConfig":"94"},{"size":2202,"mtime":1620764433631,"results":"148","hashOfConfig":"94"},{"size":6345,"mtime":1620765822274,"results":"149","hashOfConfig":"94"},{"size":8525,"mtime":1621183458896,"results":"150","hashOfConfig":"94"},{"size":2499,"mtime":1620764433631,"results":"151","hashOfConfig":"94"},{"size":12994,"mtime":1620832108127,"results":"152","hashOfConfig":"94"},{"size":896,"mtime":1615350950621,"results":"153","hashOfConfig":"94"},{"size":1576,"mtime":1621321103468,"results":"154","hashOfConfig":"94"},{"size":12274,"mtime":1615449695379,"results":"155","hashOfConfig":"94"},{"size":4415,"mtime":1615442733901,"results":"156","hashOfConfig":"94"},{"size":2415,"mtime":1620748699047,"results":"157","hashOfConfig":"94"},{"size":4275,"mtime":1620764433613,"results":"158","hashOfConfig":"94"},{"size":904,"mtime":1620764433631,"results":"159","hashOfConfig":"94"},{"size":597,"mtime":1616875266028,"results":"160","hashOfConfig":"94"},{"size":605,"mtime":1616875278950,"results":"161","hashOfConfig":"94"},{"size":9165,"mtime":1621184076385,"results":"162","hashOfConfig":"94"},{"size":463,"mtime":1620764433623,"results":"163","hashOfConfig":"94"},{"size":378,"mtime":1615350950625,"results":"164","hashOfConfig":"94"},{"size":1452,"mtime":1615629867264,"results":"165","hashOfConfig":"94"},{"size":12262,"mtime":1621344446412,"results":"166","hashOfConfig":"94"},{"size":3735,"mtime":1620762413352,"results":"167","hashOfConfig":"94"},{"size":3679,"mtime":1620764433613,"results":"168","hashOfConfig":"94"},{"size":2569,"mtime":1620764433613,"results":"169","hashOfConfig":"94"},{"size":2992,"mtime":1620764433613,"results":"170","hashOfConfig":"94"},{"size":2993,"mtime":1620764433613,"results":"171","hashOfConfig":"94"},{"size":1374,"mtime":1620764433621,"results":"172","hashOfConfig":"94"},{"size":1234,"mtime":1620764433623,"results":"173","hashOfConfig":"94"},{"size":1528,"mtime":1620764433623,"results":"174","hashOfConfig":"94"},{"size":1101,"mtime":1620764433613,"results":"175","hashOfConfig":"94"},{"size":1309,"mtime":1620764434313,"results":"176","hashOfConfig":"94"},{"size":4810,"mtime":1621154101959,"results":"177","hashOfConfig":"94"},{"size":3354,"mtime":1621290269496,"results":"178","hashOfConfig":"94"},{"size":1560,"mtime":1620153405282,"results":"179","hashOfConfig":"94"},{"size":143,"mtime":1620776817801,"results":"180","hashOfConfig":"94"},{"size":1437,"mtime":1620837463402,"results":"181","hashOfConfig":"94"},{"size":3682,"mtime":1621321950782,"results":"182","hashOfConfig":"94"},{"size":12681,"mtime":1621281975364,"results":"183","hashOfConfig":"94"},{"size":3628,"mtime":1621282909766,"results":"184","hashOfConfig":"94"},{"size":2523,"mtime":1621282909798,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"o6sf80",{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"188"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"188"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"188"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"188"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"188"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"188"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"188"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"188"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"188"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"188"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"188"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"188"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"188"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"188"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"188"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"188"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"188"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"188"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"188"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"188"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"188"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"188"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"188"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"188"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"188"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"188"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"188"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"188"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"188"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"188"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"188"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"188"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"188"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"188"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"188"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"188"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"188"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"188"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"188"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"188"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"188"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"188"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"188"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"188"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"188"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"188"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"188"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"188"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"188"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"188"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"188"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"188"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"188"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"188"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"188"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"188"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"188"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"188"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"188"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"188"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"188"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"188"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"188"},"E:\\FYP\\Interview_Assistant\\frontend\\src\\index.js",[],["434","435"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\App.js",["436","437","438","439","440","441","442","443","444"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\n\r\nimport Auth from \"./user/pages/Auth\";\r\nimport signUp from \"./user/pages/signUp\";\r\nimport EmailVerification from \"./user/pages/EmailVerification\";\r\nimport CodeVerification from \"./user/pages/CodeVerification\";\r\nimport ResetPassword from \"./user/pages/ResetPassword\";\r\nimport Faq from \"./faq/pages/Faq\";\r\nimport MainNavigation from \"./shared/components/NavigationElements/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { SocketContext } from \"./shared/context/socket-context\";\r\n\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport UserProfile from \"./user/pages/UserProfile\";\r\nimport Interview from \"./Interviews/pages/Interview\";\r\nimport CreateInterview from \"./Interviews/components/CreateInterview\";\r\nimport Chat from \"./chat/pages/Chat\";\r\nimport CandidateList from \"./Interviews/components/CandidatesList\";\r\nimport ViewInterview from \"./Interviews/pages/ViewInterview\";\r\n\r\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\r\nimport Certificate from \"./certificates/pages/Certificate\";\r\nimport InterviewItems from \"./Interviews/components/InterviewItems\";\r\nimport ViewCertificate from \"./certificates/pages/ViewCertificate\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport AdminHome from \"./Admin/pages/AdminHome\";\r\nimport RTC from './RTC';\r\nimport Resume from \"./Resumes/Pages/Resume\";\r\nimport VideoCall from \"./Video Call/VideoCall\";\r\nimport Home from \"./user/pages/Home\";\r\nimport SideBar from \"./Admin/Components/SideBar\"\r\nimport ViewFaqs from \"./Admin/Components/Faqs/ViewFaqs\";\r\n\r\nconst App = () => {\r\n  let location = useLocation();\r\n  const { token, login, logout, userId, resume, setting } = useAuth();\r\n  const auth = useContext(AuthContext);\r\n  const [socket, setSocket] = useState();\r\n\r\n  let routes;\r\n  if (token) {\r\n    if (setting && setting.role == \"Admin\") {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/admin/home\" exact component={AdminHome} />\r\n          <Route path=\"/admin/certificates\" exact component={AdminHome} />\r\n          <Route path=\"/admin/faq\" exact component={ViewFaqs} />\r\n          <Route path=\"/admin/respondProblem\" exact component={AdminHome} />\r\n\r\n          <Redirect to=\"/admin/home\" />\r\n        </Switch>\r\n      );\r\n\r\n    } else {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/Faq\" exact component={Faq} />\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/profile\" exact component={UserProfile} />\r\n          <Route path=\"/profile/:uid\" exact component={UserProfile} />\r\n          <Route path=\"/interviews/:uid\" exact component={Interview} />\r\n          <Route path=\"/chat\" exact component={Chat} />\r\n          <Route path=\"/interviews/new\" exact component={CreateInterview} />\r\n          <Route path=\"/interview/candidates\" exact component={CandidateList} />\r\n          <Route\r\n            path=\"/interviews/view/:interId\"\r\n            exact\r\n            component={ViewInterview}\r\n          />\r\n          <Route path=\"/certificates/:uid\" exact component={Certificate} />\r\n          <Route\r\n            path=\"/certificates/edit/:certId\"\r\n            exact\r\n            component={ViewCertificate}\r\n          />\r\n          <Route path=\"/resume\" exact component={Resume} />\r\n          <Route path=\"/videocall\" exact component={VideoCall} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n    }\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/signup\" exact component={signUp} />\r\n        <Route path=\"/auth\" exact component={Auth} />\r\n        <Route\r\n          path=\"/verifyemail\"\r\n          exact\r\n          component={(props) => <EmailVerification {...props} />}\r\n        />\r\n        <Route\r\n          path=\"/forgotpassword\"\r\n          exact\r\n          component={(props) => <EmailVerification {...props} />}\r\n        />\r\n        <Route\r\n          path=\"/verifycode\"\r\n          exact\r\n          component={(props) => <CodeVerification {...props} />}\r\n        />\r\n        <Route path=\"/Reset\" exact component={ResetPassword} />\r\n        <Route path=\"/Faq\" exact component={Faq} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    if (userId) {\r\n      setSocket(io.connect(\"http://localhost:5000\", { query: \"id=\" + userId }));\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SocketContext.Provider value={socket}>\r\n        <AuthContext.Provider\r\n          value={{\r\n            isLoggedIn: !!token,\r\n            token: token,\r\n            userId: userId,\r\n            login: login,\r\n            logout: logout,\r\n            resume: resume,\r\n            setting: setting,\r\n          }}\r\n        >\r\n\r\n          {location.pathname !== \"/admin\" && location.pathname !== \"/videocall\" && <MainNavigation />}\r\n          <RTC />\r\n\r\n          {location.pathname == \"/admin/home\" || location.pathname == \"/admin/faq\" ||\r\n            location.pathname == \"/admin/certificates\" ||\r\n            location.pathname == \"/admin/respondProblem\" ? <SideBar /> : location.pathname == \"/videocall\" ? \"\" : <MainNavigation />}\r\n          <main>{routes}</main>\r\n        </AuthContext.Provider>\r\n      </SocketContext.Provider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\AppTheme\\theme.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\LoadingSpinner.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\socket-context.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\context\\auth-context.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\MainNavigation.js",["445","446","447","448","449","450","451","452","453","454"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport DvrIcon from \"@material-ui/icons/Dvr\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Navbar from \"./Navbar\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { SocketContext } from \"../../context/socket-context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoRibbonOutline } from \"react-icons/io5\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { ImProfile } from \"react-icons/im\";\r\nimport { TiMessages } from \"react-icons/ti\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoIosArrowDropleft } from \"react-icons/io\";\r\n\r\nconst drawerWidth = 200;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15),\r\n    background: theme.palette.secondary.main,\r\n    margin: theme.spacing(4, 6),\r\n  },\r\n\r\n  drawerWidthLgSc: {\r\n    overflowX: \"hidden\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(8) + 1,\r\n    },\r\n    width: drawerWidth,\r\n  },\r\n  Navicon: {\r\n    fontSize: \"2rem\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      color: \"#004777\",\r\n    },\r\n  },\r\n  divider: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst MainNavigation = () => {\r\n  const auth = useContext(AuthContext);\r\n  const socket = useContext(SocketContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const classes = useStyles();\r\n  const [OpenDrawer, SetOpenDrawer] = useState(false);\r\n  const [unreadChats, setUnreadChats] = useState(0);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"message\", (data) => {\r\n      console.log(\"msg  noti\");\r\n      setUnreadChats(unreadChats + 1);\r\n    });\r\n    socket.on(\"notification\", (data) => {\r\n      console.log(\"noti\");\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"message\");\r\n      socket.off(\"notification\");\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (!auth.userId) return;\r\n    getBadges();\r\n  }, [auth.userId]);\r\n  const getBadges = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/settings/notifications/${auth.userId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setUnreadChats(responseData.unreadChats);\r\n    } catch (err) {}\r\n  };\r\n  const openChat = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/settings/openChat/${auth.userId}`,\r\n        \"PATCH\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setUnreadChats(responseData.unreadChats);\r\n    } catch (err) {}\r\n  };\r\n  const HandleDrawer = () => {\r\n    SetOpenDrawer(!OpenDrawer);\r\n  };\r\n\r\n  const drawerItems = (\r\n    <List >\r\n      <Tooltip\r\n        title=\"Back\"\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n\r\n      >\r\n        <IconButton\r\n          className={classes.Navicon}\r\n          onClick={() => history.goBack()}\r\n        >\r\n          <IoIosArrowDropleft\r\n             style={{ margin: \"0px 0px 20px 5px\" }}\r\n          />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Tooltip\r\n        title={OpenDrawer ? \"\" : \"Home\"}\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n      >\r\n        <ListItem\r\n          button\r\n          key=\"Home\"\r\n          onClick={() => {\r\n            SetOpenDrawer(false);\r\n          }}\r\n          component={Link}\r\n          to=\"/\"\r\n        >\r\n          <ListItemIcon>\r\n            <GoHome className={classes.Navicon} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Home\" />\r\n        </ListItem>\r\n      </Tooltip>\r\n\r\n      <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n      <Tooltip\r\n        title={OpenDrawer ? \"\" : \"Inbox\"}\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n      >\r\n        <ListItem\r\n          button\r\n          key=\"Inbox\"\r\n          onClick={() => {\r\n            openChat();\r\n            SetOpenDrawer(false);\r\n          }}\r\n          component={Link}\r\n          to=\"/chat\"\r\n        >\r\n          <ListItemIcon>\r\n            <Badge badgeContent={unreadChats} color=\"error\">\r\n              <TiMessages className={classes.Navicon} />\r\n            </Badge>\r\n          </ListItemIcon>\r\n\r\n          <ListItemText primary=\"Inbox\" />\r\n        </ListItem>\r\n      </Tooltip>\r\n\r\n      <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n      <Tooltip\r\n        title={OpenDrawer ? \"\" : \"Interviews\"}\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n      >\r\n        <ListItem\r\n          button\r\n          key=\"Interviews\"\r\n          onClick={() => {\r\n            SetOpenDrawer(false);\r\n          }}\r\n          component={Link}\r\n          to={`/interviews/${auth.userId}`}\r\n        >\r\n          <ListItemIcon>\r\n            <Badge badgeContent={4} color=\"error\">\r\n              <DvrIcon className={classes.Navicon} />\r\n            </Badge>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Interviews\" />\r\n        </ListItem>\r\n      </Tooltip>\r\n      <Divider variant=\"middle\" className={classes.divider} />\r\n      <Tooltip\r\n        title={OpenDrawer ? \"\" : \"Certificates\"}\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n      >\r\n        <ListItem\r\n          button\r\n          key=\"Certificates\"\r\n          onClick={() => {\r\n            SetOpenDrawer(false);\r\n          }}\r\n          component={Link}\r\n          to={`/certificates/${auth.userId}`}\r\n        >\r\n          <ListItemIcon>\r\n            <IoRibbonOutline className={classes.Navicon} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Certificates\" />\r\n        </ListItem>\r\n      </Tooltip>\r\n      <Divider variant=\"middle\" className={classes.divider} />\r\n      <Tooltip\r\n        title={OpenDrawer ? \"\" : \"Resume\"}\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n      >\r\n        <ListItem\r\n          button\r\n          key=\"Resume\"\r\n          onClick={() => {\r\n            SetOpenDrawer(false);\r\n          }}\r\n          component={Link}\r\n          to=\"/resume\"\r\n        >\r\n          <ListItemIcon>\r\n            <ImProfile className={classes.Navicon} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Resume\" />\r\n        </ListItem>\r\n      </Tooltip>\r\n      <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n      <Tooltip\r\n        title={OpenDrawer ? \"\" : \"Charts\"}\r\n        placement=\"right\"\r\n        TransitionComponent={Fade}\r\n        TransitionProps={{ timeout: 600 }}\r\n      >\r\n        <ListItem\r\n          button\r\n          key=\"Charts\"\r\n          onClick={() => {\r\n            SetOpenDrawer(false);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <InsertChartIcon className={classes.Navicon} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Charts\" />\r\n        </ListItem>\r\n      </Tooltip>\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {!auth.isLoggedIn && <Navbar HandleDrawer={HandleDrawer} />}\r\n\r\n      {auth.isLoggedIn && (\r\n        <>\r\n          <Navbar HandleDrawer={HandleDrawer} />\r\n\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              className={classes.drawer}\r\n              open={OpenDrawer}\r\n              onClose={() => SetOpenDrawer(false)}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              <Toolbar />\r\n              <div>{drawerItems}</div>\r\n            </Drawer>\r\n          </Hidden>\r\n        </>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n              paper: classes.drawerWidthLgSc,\r\n            }}\r\n          >\r\n            <Toolbar />\r\n            <div>{drawerItems}</div>\r\n          </Drawer>\r\n        </Hidden>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\auth-hook.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\EmailVerification.js",["455","456"],"import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Redirect } from 'react-router'\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useHistory} from 'react-router';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"80%\",\r\n    margin: \"0px 20px\"\r\n    \r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n    marginTop : \"5px\"\r\n  },\r\n   ButtonStyle : {\r\n    minWidth: \"140px\",\r\n    minHeight: \"40px\",\r\n    margin: \"15px 10px \",\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      minWidth: \"100px\",\r\n      minHeight: \"20px\",\r\n      margin: \"15px 13px \",\r\n    },\r\n  }\r\n}));\r\n\r\nexport default function ForgetPassword(props) {\r\n  const history = useHistory();\r\n \r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [success, setSuccess] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const paperStyle = {\r\n    width: \"80%\",\r\n   padding: 20,\r\n    margin: \"80px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const initialValues = {\r\n    username: \"\",\r\n  };\r\n \r\n\r\n  const validationSchema = yup.object().shape({\r\n    username: yup.string().email(\"Please enter valid username\"),\r\n  });\r\n  const onSubmitHandler = async (values, props) => {\r\n    setUserEmail(values.username);\r\n    try {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5000/api/users/sendCode',\r\n        'POST',\r\n        JSON.stringify({\r\n          email: values.username,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n      if (responseData.status)\r\n        setSuccess(true)\r\n    }\r\n    catch (err) {\r\n    }\r\n\r\n  };\r\n  const classes = useStyles();\r\n  if (success) {\r\n    return <Redirect\r\n      to={{\r\n        pathname: \"/verifycode\",\r\n        state: { email: userEmail }\r\n      }}\r\n    />\r\n  }\r\n  if (!props.location.state) {\r\n    // history.push(\"/\");\r\n    return <Redirect\r\n    to={{\r\n      pathname: \"/\",\r\n    }}\r\n  />\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={clearError}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n          {error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          {props.location.state.emailverification && (<>Verify Your Email?</>)}\r\n          {props.location.state.forgotpassword && (<>Forgot Password?</>)}\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VpnKeyIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmitHandler}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(props) => (\r\n              <Form className={classes.form}>\r\n                <Typography variant=\"body1\" style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n                  Please enter your email address associated with your account to start verification process\r\n                </Typography>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  className={classes.formControl}\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Enter your Email Address\"\r\n                  name=\"username\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"username\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.ButtonStyle}\r\n                  // onSubmit = {onSubmitHandler}\r\n                  disabled={!(props.isValid || props.isSubmitting)}\r\n                >\r\n                  NEXT\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                className={classes.ButtonStyle}\r\n                  component={Link} to=\"/login\"\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Auth.js",["457","458","459"],"import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport AuthForm from '../components/AuthForm';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to={{\r\n        pathname: \"/\",\r\n      }}>\r\n        Smarthire\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [rememberme, setRememberme] = useState(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.checkbox === \"true\") {\r\n      setRememberme(true);\r\n      initialValues.username = localStorage.username;\r\n      initialValues.password = localStorage.password;\r\n    } else {\r\n      setRememberme(false);\r\n    }\r\n  }, []);\r\n  const paperStyle = {\r\n    width: \"80%\",\r\n    padding: 20,\r\n    margin: \"120px auto\"\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n  const onSubmitHandler = async (values) => {\r\n    if (rememberme) {\r\n      localStorage.username = values.username;\r\n      localStorage.password = values.password;\r\n      localStorage.checkbox = \"true\";\r\n    } else {\r\n      localStorage.username = \"\";\r\n      localStorage.password = \"\";\r\n      localStorage.checkbox = \"false\";\r\n    }\r\n    try {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5000/api/users/login',\r\n        'POST',\r\n        JSON.stringify({\r\n          email: values.username,\r\n          password: values.password\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n      auth.login(responseData.userId, responseData.token,responseData.resume, responseData.setting);\r\n    } catch (err) {\r\n    }\r\n\r\n  };\r\n  if (error == 'Email_not_verified') {\r\n\r\n    return <Redirect\r\n      to={{\r\n        pathname: \"/verifyEmail\",\r\n        state: { emailverification: true,\r\n          forgotpassword:false\r\n         }\r\n      }} />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <LoadingSpinner open={isLoading} />\r\n      {status != 401 && (\r\n        <Snackbar open={!!error} autoHideDuration={6000} onClose={clearError}>\r\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n            {error}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <Container component=\"main\" maxWidth=\"sm\" style={{ padding: \"0px\" }}>\r\n          <Paper elevation={10} style={paperStyle}>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              SmartHire\r\n            </Typography>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <ExitToAppIcon style={avatarStyle} />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n             </Typography>\r\n              <AuthForm\r\n                setRememberme={setRememberme}\r\n                rememberme={rememberme}\r\n                onSubmitHandler={onSubmitHandler}\r\n                error={error}\r\n                status={status}\r\n                initialValues={initialValues}\r\n              />\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link to={{\r\n                    pathname: \"/forgotpassword\",\r\n                    state: { forgotpassword: true }\r\n                  }} variant=\"body2\">\r\n                    Forgot password?\r\n               </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to={{\r\n                    pathname: \"/signup\",\r\n                  }} variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Box mt={3}>\r\n              <Copyright />\r\n            </Box>\r\n          </Paper>\r\n        </Container>\r\n      )}\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SignIn;","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\UserProfile.js",["460","461","462","463","464","465","466","467","468","469"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport User from \"../components/User\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport {useHttpClient} from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nexport default function UserProfile() {\r\n  const auth = useContext(AuthContext);\r\n  const {isLoading, error, status, sendRequest, clearError} = useHttpClient();\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [certificates, setCertificates] = useState([]);\r\n  const [setting, setSetting] = useState(\"\");\r\n  const [resume, setResume] = useState(\"\");\r\n  const [approvedCertCount, setApprovedCertCount] = useState(0);\r\n  const { uid } = useParams();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchInterviews = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/interviews/user/\" + usID,\r\n          'GET',\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setInterviews(responseData.interviews);\r\n      \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if(uid)\r\n       fetchInterviews(uid);\r\n    else\r\n       fetchInterviews(auth.userId)\r\n\r\n  }, [uid]);\r\n\r\n  useEffect(() => {\r\n    const fetchCertificates = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/certificates/user/\" + usID,\r\n          'GET',\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setCertificates(responseData.certificate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if(uid)\r\n       fetchCertificates(uid);\r\n   else\r\n      fetchCertificates(auth.userId)\r\n  }, [uid]);\r\n\r\n  useEffect(() => {\r\n    const fetchSetting = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/settings/user/\" + usID,\r\n          'GET',\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setSetting(responseData.setting);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if(uid)\r\n       fetchSetting(uid);\r\n\r\n  }, [uid]);\r\n\r\n  useEffect(() => {\r\n    const fetchResume = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/resumes/user/\" + usID,\r\n          'GET',\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResume(responseData.resume);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if(uid)\r\n       fetchResume(uid);\r\n    else\r\n       setResume(\"\")\r\n\r\n  }, [uid]);\r\n\r\n\r\n useEffect (()=>{\r\n  const countApprovedCert = () =>{\r\n    if(uid){\r\n     certificates.map((cert)=>{\r\n      cert.isApproved == true && setApprovedCertCount(approvedCertCount+1);\r\n    })\r\n  }\r\n  else{\r\n    setApprovedCertCount(certificates.length)\r\n    \r\n  }}\r\n    if (certificates){\r\n       countApprovedCert();\r\n    \r\n    }\r\n }, [uid, certificates]) \r\n \r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <CssBaseline />\r\n      <LoadingSpinner open={isLoading}/>\r\n      {!isLoading && \r\n       <User approvedCertCount = {approvedCertCount} otherUser = {uid} userInterviews = {interviews} userSetting = {setting} userResume = {resume}/>\r\n      \r\n      }\r\n         </Container>\r\n  );\r\n}\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\signUp.js",["470","471"],"import React, { useState, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport * as yup from \"yup\";\r\nimport SignupForm from '../components/SignupForm'\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Redirect } from 'react-router'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/auth\">\r\n       Copyright@2021 \r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  username: \"\",\r\n  contact: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n  lastName: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"Last Name must be atleast 3 characters\"),\r\n  email: yup.string()\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter valid username\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .min(6, \"Password must be atleast 6 characters long\")\r\n  // .matches(\r\n  //   /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/,\r\n  //   \"Must contain One Number and One Special Case Character\"\r\n  // )\r\n  ,\r\n  address: yup\r\n    .string()\r\n    .required(\"This field is required\"),\r\n\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n\r\n  contact: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(\r\n      /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/,\r\n      \"Please enter valid Contact number\"\r\n    )\r\n    .min(11),\r\n});\r\n\r\nexport default function SignUp() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error,status, sendRequest, clearError } = useHttpClient();\r\n  const [gender, setGender] = useState(\"other\");\r\n  const [country, setCountry] = useState(\"Afghanistan\");\r\n  const [dob, setdob] = useState(\"1900-01-01\");\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  const signUpSubmitHandler = async (values, props) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5000/api/users/signup',\r\n        'POST',\r\n        JSON.stringify({\r\n          firstname: values.firstName,\r\n          lastname: values.lastName,\r\n          country: country,\r\n          dob: dob,\r\n          email: values.email,\r\n          phone: values.contact,\r\n          password: values.password,\r\n          address: values.address,\r\n          gender: gender\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n      setUserEmail(responseData.email)\r\n    }\r\n    catch (err) {\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const classes = useStyles();\r\n  const paperStyle = {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    margin: \"80px 0px 20px 0px\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n\r\n  if (userEmail!=='') {\r\n    return <Redirect \r\n    to={{\r\n        pathname: \"/verifycode\",\r\n        state: { email: userEmail }\r\n      }}\r\n    />;;\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar open={error} autoHideDuration={6000} onClose={clearError}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n          {error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          SmartHire\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <SignupForm\r\n            signUpSubmitHandler={signUpSubmitHandler}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            gender={gender}\r\n            setGender={setGender}\r\n            country={country}\r\n            setCountry={setCountry}\r\n            dob={dob}\r\n            setdob={setdob}\r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/auth\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <Copyright />\r\n\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\ResetPassword.js",["472","473","474"],"import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword() {\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"20px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"#2D5F5D\",\r\n  };\r\n  const initialValues = {\r\n    username: \"\",\r\n  };\r\n  const ButtonStyle = {\r\n    minWidth: \"160px\",\r\n    minHeight: \"40px\",\r\n    margin: \"10px 8px \",\r\n  };\r\n  const validationSchema = yup.object().shape({\r\n    NewPass: yup\r\n    .string()\r\n    .min(8, \"Password must be atleast 8 characters long\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/,\r\n      \"Must contain One Number and One Special Case Character\"\r\n    ),\r\n  \r\n    ConfirmPass: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"NewPass\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  // const onSubmitHandler = (values, props) => {\r\n  //   console.log(\"Has been submitted\");\r\n  //   console.log(values);\r\n  //   window.location = '/login';\r\n  // setTimeout(() => {\r\n  //    props.resetForm();\r\n  //  props.setSubmitting(false);\r\n  //    }, 1000);\r\n  //  console.log(props);\r\n  //   };\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Reset Password?\r\n        </Typography>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VpnKeyIcon style={avatarStyle} />\r\n          </Avatar>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            // onSubmit={onSubmitHandler}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(props) => (\r\n              <Form  className={classes.form}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                 // type=\"password\"\r\n                  id=\"NewPass\"\r\n                  label=\"Enter new Password\"\r\n                  name=\"NewPass\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"NewPass\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n\r\n                  <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  type=\"password\"\r\n                  id=\"ConfirmPass\"\r\n                  label=\"Confirm Password\"\r\n                  name=\"ConfirmPass\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"ConfirmPass\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/Home\"\r\n                  disabled= {!(props.isValid || props.isSubmitting)}\r\n                >\r\n                 Reset\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={ButtonStyle}\r\n                  component={Link} to=\"/login\"\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={3}></Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\Video Call\\VideoCall.js",["475","476","477","478"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport { Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { AuthContext } from \"../shared/context/auth-context\";\r\nimport { SocketContext } from \"../shared/context/socket-context\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Peer from \"simple-peer\";\r\nimport Black from './black.png';\r\nimport Emotions from './Emotions';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    bottomDiv: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        position: \"absolute\",\r\n        width: \"30%\",\r\n        zIndex: 10,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        opacity: 0.5,\r\n        backgroundColor: \"#d3d3d3\",\r\n        alignItems: \"center\",\r\n        margin: \"10px\",\r\n        [theme.breakpoints.up(\"xm\")]: {\r\n            float: \"left\",\r\n            flexGrow: 1,\r\n            zIndex: -1,\r\n        },\r\n\r\n    },\r\n\r\n    topdiv: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n    },\r\n    userVideo: {\r\n        width: '100%',\r\n        bdcolor: 'rgba(255,255,255 ,1)',\r\n\r\n    },\r\n\r\n    userVideoStyles: {\r\n\r\n        maxWidth: '15rem',\r\n        maxHeight: '15rem',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        position: 'absolute',\r\n        bottom: 10,\r\n        right: 10,\r\n        zIndex: 3,\r\n    },\r\n    partnerVideoStyles: {\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: '99',\r\n        backgroundColor: 'rgba(50,50,50,1)',\r\n    },\r\n    IconStyles: {\r\n        marginLeft: \"1rem\",\r\n        marginRight: \"1rem\",\r\n        marginTop: \"0.5rem\",\r\n        marginBottom: \"0.5rem\",\r\n    },\r\n    message: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        height: '100px',\r\n        color: 'white',\r\n        fontSize: 30,\r\n    },\r\n    mediaMessage: {\r\n        position: 'absolute',\r\n        top: '60%',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        height: '100px',\r\n        color: 'white',\r\n        fontSize: 30,\r\n    }\r\n\r\n}));\r\n\r\nfunction VideoCall(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [audioMuted, setAudioMuted] = useState(false);\r\n    const [videoMuted, setVideoMuted] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [caller, setCaller] = useState(\"\");\r\n    const [callerSignal, setCallerSignal] = useState();\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [mediaMessage, setMediaMessage] = useState('');\r\n    const [faceEmotions, setFaceEmotions] = useState(false);\r\n\r\n    const socket = useContext(SocketContext);\r\n    const auth = useContext(AuthContext);\r\n\r\n    const userVideo = useRef();\r\n    const partnerVideo = useRef();\r\n    const myPeer = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"popstate\", goBack);\r\n        window.addEventListener(\"beforeunload\", alertUser);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", alertUser);\r\n            // window.removeEventListener(\"popstate\", goBack);\r\n        };\r\n    }, [myPeer, stream, socket]);\r\n    const alertUser = (e) => {\r\n        e.preventDefault();\r\n        e.returnValue = \"\";\r\n    };\r\n    const goBack = () => {\r\n        if (myPeer.current)\r\n            myPeer.current.destroy()\r\n        socket.emit('close', { to: caller })\r\n        if (stream) {\r\n            stream.getTracks().forEach((track) => {\r\n                track.stop();\r\n            });\r\n\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (props.location.state && props.location.state.to)\r\n            callPeer(props.location.state.to);\r\n        if (props.location.state && props.location.state.caller) {\r\n            setCaller(props.location.state.caller);\r\n            setCallerSignal(props.location.state.callerSignal);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (caller && callerSignal)\r\n            acceptCall();\r\n    }, [caller, callerSignal]);\r\n\r\n    useEffect(() => {\r\n        if (audioMuted || videoMuted)\r\n            setMediaMessage(\"Your mic/camera is muted..\")\r\n        else\r\n            setMediaMessage(\"\")\r\n\r\n    }, [audioMuted, videoMuted])\r\n    useEffect(() => {\r\n        return () => {\r\n            socket.off(\"callAccepted\");\r\n            socket.off(\"close\");\r\n            socket.off(\"rejected\");\r\n        };\r\n    }, [])\r\n    function callPeer(id) {\r\n        if (id !== '' && id !== auth.userId) {\r\n            navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n                setStream(stream);\r\n                setCaller(id)\r\n                setMessage(\"Calling...\");\r\n                if (userVideo.current) {\r\n                    userVideo.current.srcObject = stream;\r\n                }\r\n                const peer = new Peer({\r\n                    initiator: true,\r\n                    trickle: false,\r\n                    config: {\r\n\r\n                        iceServers: [\r\n                            // {\r\n                            //     urls: \"stun:numb.viagenie.ca\",\r\n                            //     username: \"sultan1640@gmail.com\",\r\n                            //     credential: \"98376683\"\r\n                            // },\r\n                            // {\r\n                            //     urls: \"turn:numb.viagenie.ca\",\r\n                            //     username: \"sultan1640@gmail.com\",\r\n                            //     credential: \"98376683\"\r\n                            // }\r\n                            { url: 'stun:stun01.sipphone.com' },\r\n                            { url: 'stun:stun.ekiga.net' },\r\n                            { url: 'stun:stun.fwdnet.net' },\r\n                            { url: 'stun:stun.ideasip.com' },\r\n                            { url: 'stun:stun.iptel.org' },\r\n                            { url: 'stun:stun.rixtelecom.se' },\r\n                            { url: 'stun:stun.schlund.de' },\r\n                            { url: 'stun:stun.l.google.com:19302' },\r\n                            { url: 'stun:stun1.l.google.com:19302' },\r\n                            { url: 'stun:stun2.l.google.com:19302' },\r\n                            { url: 'stun:stun3.l.google.com:19302' },\r\n                            { url: 'stun:stun4.l.google.com:19302' },\r\n                            { url: 'stun:stunserver.org' },\r\n                            { url: 'stun:stun.softjoys.com' },\r\n                            { url: 'stun:stun.voiparound.com' },\r\n                            { url: 'stun:stun.voipbuster.com' },\r\n                            { url: 'stun:stun.voipstunt.com' },\r\n                            { url: 'stun:stun.voxgratia.org' },\r\n                            { url: 'stun:stun.xten.com' },\r\n                            {\r\n                                url: 'turn:numb.viagenie.ca',\r\n                                credential: 'muazkh',\r\n                                username: 'webrtc@live.com'\r\n                            },\r\n                            {\r\n                                url: 'turn:192.158.29.39:3478?transport=udp',\r\n                                credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                                username: '28224511:1379330808'\r\n                            },\r\n                            {\r\n                                url: 'turn:192.158.29.39:3478?transport=tcp',\r\n                                credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                                username: '28224511:1379330808'\r\n                            }\r\n                        ]\r\n                    },\r\n                    stream: stream,\r\n                });\r\n\r\n                myPeer.current = peer;\r\n\r\n                peer.on(\"signal\", data => {\r\n                    console.log(\"signal\")\r\n                    socket.emit(\"callUser\", { userToCall: props.location.state.to, signalData: data, fromId: auth.userId, fromName: auth.resume.fullname, fromImage: auth.resume.image })\r\n                })\r\n\r\n                peer.on(\"stream\", stream => {\r\n                    console.log(\"stream got\", stream)\r\n                    setMessage(\"\");\r\n                    if (partnerVideo.current) {\r\n                        partnerVideo.current.srcObject = stream;\r\n                    }\r\n                });\r\n\r\n                peer.on('error', (err) => {\r\n                    console.log('on error')\r\n                    endCall()\r\n                })\r\n\r\n                socket.on(\"callAccepted\", signal => {\r\n                    setCallAccepted(true);\r\n                    console.log(\"accepted\")\r\n                    peer.signal(signal);\r\n                })\r\n\r\n                socket.on('close', () => {\r\n                    console.log('on close')\r\n                    myPeer.current.destroy()\r\n                    setMessage(\"Call Ended..\");\r\n                    setTimeout(() => {\r\n                        stream.getTracks().forEach((track) => {\r\n                            track.stop();\r\n                        });\r\n                        history.goBack();\r\n                    }, 2000);\r\n                })\r\n\r\n                socket.on('rejected', () => {\r\n                    console.log('on rejected')\r\n                    setMessage(\"Call Declined..\");\r\n                    setTimeout(() => {\r\n                        stream.getTracks().forEach((track) => {\r\n                            track.stop();\r\n                        });\r\n                        history.goBack();\r\n                    }, 2000);\r\n                })\r\n                socket.on('busy', () => {\r\n                    console.log('on busy')\r\n                    setMessage(\"User is Busy..\");\r\n                    setTimeout(() => {\r\n                        stream.getTracks().forEach((track) => {\r\n                            track.stop();\r\n                        });\r\n                        history.goBack();\r\n                    }, 2000);\r\n                })\r\n            })\r\n                .catch(() => {\r\n                    console.log(\"error\")\r\n                    alert('You cannot place/ receive a call without granting video and audio permissions! Please change your settings.')\r\n                })\r\n        } else {\r\n            console.log(\"error2\")\r\n            return\r\n        }\r\n    }\r\n    function acceptCall() {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n            setStream(stream);\r\n            if (userVideo.current) {\r\n                userVideo.current.srcObject = stream;\r\n            }\r\n            setCallAccepted(true);\r\n            const peer = new Peer({\r\n                initiator: false,\r\n                trickle: false,\r\n                stream: stream,\r\n            });\r\n\r\n            myPeer.current = peer\r\n\r\n            peer.on(\"signal\", data => {\r\n                console.log('on signal')\r\n\r\n                socket.emit(\"acceptCall\", { signal: data, to: caller })\r\n            })\r\n\r\n            peer.on(\"stream\", stream => {\r\n                console.log('stream got', stream)\r\n                partnerVideo.current.srcObject = stream;\r\n            });\r\n\r\n            peer.on('error', (err) => {\r\n                console.log('on error')\r\n                endCall()\r\n            })\r\n\r\n            peer.signal(callerSignal);\r\n\r\n            socket.on('close', () => {\r\n                console.log('on close')\r\n                myPeer.current.destroy()\r\n                setMessage(\"Call Ended..\");\r\n                setTimeout(() => {\r\n                    stream.getTracks().forEach((track) => {\r\n                        track.stop();\r\n                    });\r\n                    history.goBack();\r\n                }, 2000);\r\n                // window.location.reload()\r\n            })\r\n        })\r\n            .catch((err) => {\r\n                //   setModalMessage('You cannot place/ receive a call without granting video and audio permissions! Please change your settings to use Cuckoo.')\r\n                //   setModalVisible(true)\r\n                console.log(err)\r\n            })\r\n    }\r\n    function endCall() {\r\n        console.log(\"ended\")\r\n        if (myPeer.current)\r\n            myPeer.current.destroy()\r\n        socket.emit('close', { to: caller })\r\n        setMessage(\"Call Ended..\");\r\n        setTimeout(() => {\r\n            if (stream) {\r\n                stream.getTracks().forEach((track) => {\r\n                    track.stop();\r\n                });\r\n            }\r\n            history.goBack();\r\n        }, 2000);\r\n    }\r\n    function showFaceEmotions(){\r\n        setFaceEmotions(!faceEmotions);\r\n    }\r\n    function toggleMuteAudio() {\r\n        if (stream) {\r\n            setAudioMuted(!audioMuted)\r\n            stream.getAudioTracks()[0].enabled = audioMuted\r\n        }\r\n    }\r\n    function toggleMuteVideo() {\r\n        if (stream) {\r\n            setVideoMuted(!videoMuted)\r\n            stream.getVideoTracks()[0].enabled = videoMuted\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.topdiv}>\r\n                <div className={classes.message}>{message}</div>\r\n                <div className={classes.mediaMessage}>{mediaMessage}</div>\r\n                <div className={classes.partnerVideoStyles}>\r\n                    {callAccepted && (<video width='100%' height='100%' playsInline ref={partnerVideo} poster={Black} autoPlay />)}\r\n                </div>\r\n                {faceEmotions&&(<Emotions />)}\r\n\r\n                <div className={classes.userVideoStyles}>\r\n                    {stream && (<video className={classes.userVideo} playsInline muted ref={userVideo} poster={Black} autoPlay />)}\r\n                </div>\r\n                <div className={classes.bottomDiv}>\r\n                    <Grid align=\"center\">\r\n                        <IconButton className={classes.IconStyles} onClick={toggleMuteAudio}>\r\n                            {audioMuted ? <MicIcon color=\"primary\" style={{ fontSize: \"2rem\" }} /> : <MicOffIcon color=\"primary\" style={{ fontSize: \"2rem\" }} />}\r\n                        </IconButton>\r\n                        <IconButton className={classes.IconStyles} onClick={toggleMuteVideo} >\r\n                            {videoMuted ? <VideocamIcon color=\"primary\" style={{ fontSize: \"2rem\" }} /> : <VideocamOffIcon color=\"primary\" style={{ fontSize: \"2rem\" }} />}\r\n                        </IconButton>\r\n                        <IconButton className={classes.IconStyles} onClick={() => endCall()}>\r\n                            <CallEndIcon color=\"primary\" style={{ fontSize: \"2rem\" }} />\r\n                        </IconButton>\r\n                        <IconButton className={classes.IconStyles} onClick={() => showFaceEmotions()}>\r\n                            <SentimentVerySatisfiedIcon color=\"primary\" style={{ fontSize: \"2rem\" }} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VideoCall;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\CodeVerification.js",["479"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PhonelinkRingIcon from '@material-ui/icons/PhonelinkRing';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n    feilds: {\r\n        width: \"100%\",\r\n\r\n    },\r\n    otpfield: {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        textAlign: \"center\",\r\n        margin: \"10px\",\r\n        border: \"solid\",\r\n        borderColor: \"#d3d3d3\"\r\n\r\n    },\r\n    typo: {\r\n        marginBottom: \"20px\"\r\n\r\n    }\r\n\r\n}));\r\n\r\nexport default function CodeVerification(props) {\r\n    const auth = useContext(AuthContext);\r\n    const [success, setSuccess] = useState(false);\r\n    const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n    const userEmail = props.location.state.email;\r\n\r\n    const paperStyle = {\r\n        width: \"100%\",\r\n        padding: 20,\r\n        marginTop: \"70px\",\r\n    };\r\n    const avatarStyle = {\r\n        backgroundColor: \"primary\",\r\n    };\r\n    const initialValues = {\r\n        username: \"\",\r\n    };\r\n    const ButtonStyle = {\r\n        // minWidth: \"160px\",\r\n        // minHeight: \"40px\",\r\n        margin: \"10px 8px \",\r\n\r\n    };\r\n\r\n    const typostyle = {\r\n        color: \"#004777\",\r\n        fontWeight: \"bold\"\r\n\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [otp, setOtp] = useState(new Array(4).fill(\"\"));\r\n\r\n    const handleChange = (element, index) => {\r\n        if (isNaN(element.value)) return false;\r\n\r\n        setOtp([...otp.map((d, idx) => (idx === index ? element.value : d))]);\r\n\r\n        //Focus next input\r\n        if (element.nextSibling) {\r\n            element.nextSibling.focus();\r\n        }\r\n    };\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        const code = otp.join(\"\");\r\n        try {\r\n            const responseData = await sendRequest(\r\n                'http://localhost:5000/api/users/verifyCode',\r\n                'POST',\r\n                JSON.stringify({\r\n                    email: props.location.state.email,\r\n                    code: code\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            );\r\n            if (responseData.isVerified) {\r\n\r\n                auth.login(responseData.userId, responseData.token, responseData.resume, responseData.setting);\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        catch (err) {\r\n        }\r\n\r\n    };\r\n\r\n    const onCancelHandler = (e) => {\r\n        console.log(\"cancel\")\r\n        setOtp([...otp.map(v => \"\")]);\r\n        if (otp.join(\"\")) {\r\n            console.log(\"in\");\r\n        }\r\n    }\r\n\r\n    const [DisableBtn, setDisableBtn] = useState(true);\r\n    const [Play, SetIsPlay] = useState(true)\r\n    const renderTime = ({ remainingTime }) => {\r\n        if (remainingTime === 0) {\r\n\r\n            return <div className=\"timer\">Press Resend</div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"timer\">\r\n                <Typography variant=\"h4\">{remainingTime}</Typography>\r\n            </div>\r\n        );\r\n    };\r\n    const onResendHandler = async (e) => {\r\n        try {\r\n            const responseData = await sendRequest(\r\n              'http://localhost:5000/api/users/sendCode',\r\n              'POST',\r\n              JSON.stringify({\r\n                email: userEmail,\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n            if (responseData.status)\r\n              setSuccess(true)\r\n          }\r\n          catch (err) {\r\n          }\r\n        SetIsPlay(true);\r\n        setDisableBtn(true);\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n            <LoadingSpinner open={isLoading} />\r\n            <Snackbar open={!!error} autoHideDuration={6000}>\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={clearError}>\r\n                    {error}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Snackbar open={success} autoHideDuration={6000} >\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" onClose={()=>{setSuccess(false)}}>\r\n                    Code has been sent Successfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Paper elevation={10} style={paperStyle}>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                    Verification Code\r\n                </Typography>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <PhonelinkRingIcon style={avatarStyle} />\r\n                    </Avatar>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={onSubmitHandler}\r\n                        onClick={onCancelHandler}\r\n                    >\r\n                        {(props) => (\r\n                            <Form className={classes.form}>\r\n                                <Typography className={classes.typo} variant=\"body1\" align=\"center\">\r\n                                    The Verification Code has been sent to your provided Email {userEmail}.\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" align=\"center\" style={typostyle} >\r\n                                    Enter 4-digit Code\r\n                                </Typography>\r\n                                <Grid align=\"center\">\r\n                                    {otp.map((data, index) => {\r\n                                        return (\r\n                                            <input\r\n                                                className={classes.otpfield}\r\n                                                type=\"text\"\r\n                                                name=\"otp\"\r\n                                                maxLength=\"1\"\r\n                                                key={index}\r\n                                                value={data}\r\n                                                onChange={e => handleChange(e.target, index)}\r\n                                                onFocus={e => e.target.select()}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <p>OTP Entered - {otp.join(\"\")}</p>\r\n                                    {(error !== \"\") ? (<Typography className=\"MuiFormHelperText-root\" >{error}</Typography>) : \" \"}\r\n                                </Grid >\r\n                                <Grid align=\"center\" style={{ marginTop: \"20px\" }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        style={ButtonStyle}\r\n                                        onSubmit={onSubmitHandler}\r\n                                    >\r\n                                        Verify\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        style={ButtonStyle}\r\n                                        size=\"large\"\r\n                                        onClick={onCancelHandler}\r\n                                    >\r\n                                        Clear\r\n                                    </Button>\r\n                                </Grid>\r\n                                <br />\r\n                                <Grid className=\"timer-wrapper\" align=\"center\">\r\n                                    <CountdownCircleTimer\r\n                                        isPlaying={Play}\r\n                                        duration={30}\r\n                                        colors={[[\"#4E78A0\"]]}\r\n                                        onComplete={() => {\r\n                                            setDisableBtn(false);\r\n                                            SetIsPlay(false);\r\n                                        }\r\n                                        }\r\n                                        size=\"120\"\r\n                                    >\r\n                                        {renderTime}\r\n                                    </CountdownCircleTimer>\r\n                                </Grid>\r\n                                <Grid align=\"center\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        style={ButtonStyle}\r\n                                        onClick={onResendHandler}\r\n                                        disabled={DisableBtn}\r\n                                    >\r\n                                        Resend\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n                <Box mt={2}></Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\pages\\Faq.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CreateInterview.js",["480","481","482","483","484","485","486","487","488","489","490"],"import React, { Fragment, useState , useContext} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DvrIcon from \"@material-ui/icons/Dvr\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InterviewForm from \"./InterviewForm\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Smarthire\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CreateInterview = (props) => {\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [field, setField] = useState(\"Computer Science\");\r\n  const [doi, setDoi] = useState(date);\r\n  const [timeOfInter, setTimeOfInter] = useState(\"12:00\");\r\n\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n    const getData = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/interviews/user/\" + usID,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        props.setInterviews(responseData.interviews);\r\n      \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n  \r\n \r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle disableTypography>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Schedule Interview\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <DvrIcon style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            <InterviewForm\r\n              field={field}\r\n              setField={setField}\r\n              doi={doi}\r\n              setDoi={setDoi}\r\n              timeOfInter={timeOfInter}\r\n              setTimeOfInter={setTimeOfInter}\r\n              setOpen={props.setOpen}\r\n              getData = {getData}\r\n            \r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\Interview.js",["491","492","493","494","495","496","497","498","499","500","501","502"],"import React, { useContext, useState, useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InterviewList from \"../components/InterviewList\";\r\nimport bgInterview5 from \"../../shared/components/UIElements/Images/bgInterview5.jpg\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateInterview from \"../components/CreateInterview\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n    paddingLeft: 60,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n\r\n  hero: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    marginTop: 0,\r\n    backgroundImage: `linear-gradient(\r\n        to bottom,\r\n        rgba(0, 27.8, 46.7, 0.7),\r\n        rgba(78, 120, 160, 0.7)\r\n      ), url(${bgInterview5})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 20px\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst Interview = () => {\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [role, setRole] = useState();\r\n\r\n  const [userSentRequests, setUserSentRequests] = useState();\r\n  const [userReceivedRequests, setUserReceivedRequests] = useState();\r\n  const [userAddedInterviews, setUserAddedInterviews] = useState();\r\n\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  \r\n\r\n  const auth = useContext(AuthContext);\r\n  // const [reloadPage, setReloadPage] = useState(false);\r\n  const { uid } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getUserRole = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/settings/user/\" + usID,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setRole(responseData.setting.role);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if (uid == auth.userId) setRole(auth.setting.role);\r\n    else getUserRole(uid);\r\n  }, [uid]);\r\n\r\n  useEffect(() => {\r\n    const getData = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/interviews/user/\" + usID,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setInterviews(responseData.interviews);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if (uid) getData(uid);\r\n    else getData(auth.userId);\r\n  }, [uid, role]);\r\n\r\n  useEffect(() => {\r\n    const getCandidateRequestsData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/users/${auth.userId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setUserSentRequests(responseData.sentRequests);\r\n        setUserReceivedRequests(responseData.receivedRequests);\r\n        setUserAddedInterviews(responseData.addedInterviews);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    if (auth.setting.role == \"Candidate\") {\r\n      getCandidateRequestsData();\r\n    }\r\n  }, []);\r\n\r\n\r\n \r\n\r\n  // const deleteInterviewHandler =(deletedInterviewId)=>{\r\n  //       setInterviews(prevInterviews => prevInterviews.filter(inter => inter.id !== deletedInterviewId))\r\n  //     }\r\n\r\n  const hasAccess = uid && uid == auth.userId;\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <Box className={classes.hero}>\r\n          <Box style={{ fontFamily: \"Serif, Open Sans, Arial\" }}>\r\n            Interviews\r\n          </Box>\r\n        </Box>\r\n        <Container maxWidth=\"lg\" component=\"main\">\r\n          <Paper elevation={5} className={classes.paper}>\r\n            {role && role == \"Interviewer\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleOpenDialog();\r\n                }}\r\n                className={classes.button}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Create Interview\r\n              </Button>\r\n            )}\r\n            {open && (\r\n              <CreateInterview\r\n                open={open}\r\n                handleCloseDialog={handleCloseDialog}\r\n                setOpen={setOpen}\r\n                setInterviews = {setInterviews}\r\n              />\r\n            )}\r\n\r\n          \r\n            <LoadingSpinner open={isLoading} />\r\n            {uid == auth.userId && auth.setting.role == \"Candidate\"\r\n              ? !isLoading &&\r\n                role &&\r\n                userSentRequests &&\r\n                userReceivedRequests &&\r\n                userAddedInterviews && (\r\n                  <InterviewList\r\n                    uid={uid}\r\n                    userAddedInterviews={userAddedInterviews}\r\n                    setUserAddedInterviews={setUserAddedInterviews}\r\n                    userSentRequests={userSentRequests}\r\n                    setUserSentRequests={setUserSentRequests}\r\n                    userReceivedRequests={userReceivedRequests}\r\n                    setUserReceivedRequests={setUserReceivedRequests}\r\n                    role={role}\r\n                    hasAccess={hasAccess}\r\n                  />\r\n                )\r\n              : !isLoading &&\r\n                role &&\r\n                interviews && (\r\n                  <InterviewList\r\n                    items={interviews}\r\n                    role={role}\r\n                    hasAccess={hasAccess}\r\n                    setInterviews = {setInterviews}\r\n                  />\r\n                )}\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Interview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\pages\\ViewCertificate.js",["503","504","505","506","507","508","509"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport UpdateCertificate from \"../components/UpdateCertificate\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    textAlign: \"center\", \r\n    marginTop: 10\r\n   },\r\n}));\r\n\r\nconst ViewCertificate = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { certId } = useParams();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [loadedCertificate, setLoadedCertificate] = useState();\r\n  const [loadedField, setLoadedField] = useState();\r\n  const [disableField, setDisableField] = useState(true);\r\n\r\n  const EnableFieldsHandler = () => {\r\n    setDisableField(false);\r\n  };\r\n\r\n  // Request to get sepcific Certificate Details\r\n  useEffect(() => {\r\n    const fetchCertificate = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/certificates/${certId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedCertificate(responseData.certificate);\r\n      } catch (err) {}\r\n    };\r\n    if (!loadedCertificate) \r\n        fetchCertificate();\r\n  }, [loadedCertificate]);\r\n\r\n  // Request to get field title of fetched Interview\r\n\r\n  useEffect(() => {\r\n    const fetchField = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/fields/${loadedCertificate.field}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedField(responseData.field);\r\n      } catch (err) {}\r\n    };\r\n    if (!loadedField) fetchField();\r\n  }, [loadedField, loadedCertificate]);\r\n\r\n  const hasEditAccess = loadedCertificate && loadedCertificate.creator == auth.userId\r\n  const paperStyle = {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    margin: \"80px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Certificate Details\r\n        </Typography>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <ListAltIcon style={avatarStyle} />\r\n          </Avatar>\r\n        </div>\r\n\r\n        {!isLoading && loadedCertificate && loadedField ? (\r\n          <UpdateCertificate\r\n            certId={certId}\r\n            disableField={disableField}\r\n            setDisableField = {setDisableField}\r\n            loadedCertificate={loadedCertificate}\r\n            loadedField={loadedField}\r\n            hasEditAccess={hasEditAccess}\r\n          />\r\n        ) : (\r\n          <LoadingSpinner open={isLoading} />\r\n        )}\r\n      <Grid   className={classes.submit}>\r\n        {disableField && hasEditAccess && (\r\n          <Button\r\n            onClick={EnableFieldsHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<BiEdit style={{ marginLeft: 6 }} />}\r\n            size=\"small\"\r\n          \r\n          >\r\n            Edit Details\r\n          </Button>\r\n        )}\r\n        </Grid>\r\n        {/* <Box mt={4}></Box> */}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ViewCertificate;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Admin\\pages\\AdminHome.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesList.js",["510","511","512","513","514","515","516"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport InterviewCandidates from \"./InterviewCandidates\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst CandidateList = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [candidateResume, setCandidateResume] = useState([]);\r\n  const [receivedCandResume, setReceivedCandResume ] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setCandidateResume([]);\r\n    const fetchCandidateResume = async (candID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/resumes/user/${candID}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n\r\n        setCandidateResume((oldArray) => [...oldArray, responseData.resume]);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    props.interCandidates.map((candidate) =>\r\n      fetchCandidateResume(candidate.id)\r\n    );\r\n  }, [props.interCandidates]);\r\n\r\n  return (\r\n   \r\n    !isLoading &&\r\n    \r\n    candidateResume && (\r\n    \r\n      <InterviewCandidates\r\n        candidateResume={candidateResume}\r\n        interCandidates={props.interCandidates}\r\n        interReceivedRequests = {props.interReceivedRequests}\r\n        interId={props.interId}\r\n        open={props.open}\r\n        setOpen={props.setOpen}\r\n        getInterviewRequestsData = {props.getInterviewRequestsData}\r\n      />\r\n   \r\n    )\r\n   \r\n  );\r\n};\r\nexport default CandidateList;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\pages\\Certificate.js",["517","518","519","520","521","522","523","524","525","526"],"import React, { useContext, useState, useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport bgInterview5 from \"../../shared/components/UIElements/Images/bgInterview5.jpg\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddCertificate from \"../components/AddCertificate\";\r\nimport CertificateList from \"../components/CeritificateList\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n    paddingLeft: 60,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  hero: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    marginTop: 0,\r\n    backgroundImage: `linear-gradient(\r\n        to bottom,\r\n        rgba(0, 27.8, 46.7, 0.7),\r\n        rgba(78, 120, 160, 0.7)\r\n      ), url(${bgInterview5})`,\r\n    // background:\r\n    //   \"linear-gradient( rgba(0, 27.8, 46.7, 0.7), rgba(78, 120, 160, 0.5))\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 50px\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst Certificate = () => {\r\n  const [loadedCertificates, setLoadedCertificates] = useState([]);\r\n  const { uid } = useParams();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [approvedCertCount, setApprovedCertCount] = useState(0);\r\n  const auth = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n  //for getting certificates from the dababase\r\n  useEffect(() => {\r\n    const fetchCertificates = async (usID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/certificates/user/\" + usID,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedCertificates(responseData.certificate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if (uid) fetchCertificates(uid);\r\n    else fetchCertificates(auth.userId);\r\n  }, [uid]);\r\n\r\n\r\n\r\n  useEffect (()=>{\r\n    const countApprovedCert = () =>{\r\n      if(uid){\r\n        loadedCertificates.map((cert)=>{\r\n        cert.isApproved == true && setApprovedCertCount(approvedCertCount+1);\r\n      })\r\n    }\r\n    else{\r\n      setApprovedCertCount(loadedCertificates.length)\r\n      \r\n    }\r\n  }\r\n      if (loadedCertificates){\r\n         countApprovedCert();\r\n      \r\n      }\r\n  \r\n  }, [uid, loadedCertificates]);\r\n\r\n  const hasDeleteAccess = uid && uid == auth.userId;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box className={classes.hero}>\r\n        <Box style={{ fontFamily: \"Serif, Open Sans, Arial\" }}>\r\n          Certificates\r\n        </Box>\r\n      </Box>\r\n\r\n      <Container maxWidth=\"lg\" component=\"main\">\r\n        <Paper elevation={5} className={classes.paper}>\r\n          {hasDeleteAccess && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleOpenDialog}\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Cerificates\r\n            </Button>\r\n          )}\r\n\r\n          {open && (\r\n            <AddCertificate\r\n              open={open}\r\n              handleCloseDialog={handleCloseDialog}\r\n              setOpen={setOpen}\r\n              setLoadedCertificates={setLoadedCertificates}\r\n            />\r\n          )}\r\n          {!isLoading ? (\r\n            <CertificateList\r\n              items={loadedCertificates}\r\n              uid={uid}\r\n              setLoadedCertificates={setLoadedCertificates}\r\n              hasDeleteAccess={hasDeleteAccess}\r\n              approvedCertCount={approvedCertCount}\r\n            />\r\n          ) : (\r\n            <LoadingSpinner open={true} />\r\n          )}\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\pages\\ViewInterview.js",["527","528","529","530","531","532","533","534"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport UpdateInterview from \"../components/UpdateInterview\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { BiEdit } from \"react-icons/bi\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n   paperStyle : {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    margin: \"80px auto\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n     paddingBottom: \"50px\"\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n   textAlign: \"center\", \r\n   marginTop: 10\r\n  },\r\n}));\r\n\r\nconst ViewInterview = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { interId } = useParams();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [loadedInterview, setLoadedInterview] = useState();\r\n  const [loadedField, setLoadedField] = useState();\r\n  const [disableField, setDisableField] = useState(true);\r\n  const [userSentRequests, setUserSentRequests] = useState();\r\n  const [userReceivedRequests, setUserReceivedRequests] = useState();\r\n  const [userAddedInterviews, setUserAddedInterviews] = useState();\r\n  //const theme = useTheme();\r\n\r\n  const EnableFieldsHandler = () => {\r\n    setDisableField(false);\r\n  };\r\n  const today = new Date();\r\n\r\n  const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  const CurrentDate = new Date(date);\r\n\r\n \r\n  useEffect(() => {\r\n    const getCandidateSentReq = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/users/${auth.userId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setUserSentRequests(responseData.sentRequests);\r\n        setUserReceivedRequests(responseData.receivedRequests);\r\n        setUserAddedInterviews(responseData.addedInterviews);\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n  \r\n      getCandidateSentReq();\r\n    \r\n  }, []);\r\n  // Request to get sepcific Interview Details\r\n  useEffect(() => {\r\n    const fetchInterview = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/${interId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedInterview(responseData.interview);\r\n      } catch (err) {}\r\n    };\r\n    if (!loadedInterview) fetchInterview();\r\n  }, [loadedInterview]);\r\n\r\n  // Request to get field title of fetched Interview\r\n\r\n  useEffect(() => {\r\n    const fetchField = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/fields/${loadedInterview.field}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedField(responseData.field);\r\n      } catch (err) {}\r\n    };\r\n    if (!loadedField) fetchField();\r\n  }, [loadedField, loadedInterview]);\r\n\r\n  const hasEditAccess = loadedInterview && loadedInterview.creator == auth.userId;\r\n  const InterviewStatus =  loadedInterview && loadedInterview.isCancelled\r\n      ? \"CANCELLED\"\r\n      : new Date(loadedInterview && loadedInterview.date) > CurrentDate\r\n      ? \"PENDING\"\r\n      : \"TAKEN\"\r\n  \r\n  \r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Paper elevation={10} className={classes.paperStyle}>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Interview Details\r\n        </Typography>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <ListAltIcon style={avatarStyle} />\r\n          </Avatar>\r\n        </div>\r\n        \r\n        {!isLoading && loadedInterview && loadedField && userSentRequests && userReceivedRequests && userAddedInterviews ? (\r\n          <UpdateInterview\r\n            interId={interId}\r\n            disableField={disableField}\r\n            setDisableField = {setDisableField}\r\n            loadedInterview={loadedInterview}\r\n            loadedField={loadedField}\r\n            hasEditAccess={hasEditAccess}\r\n            InterviewStatus = {InterviewStatus}\r\n            userAddedInterviews = {userAddedInterviews}\r\n            userSentRequests = {userSentRequests}\r\n            userReceivedRequests = {userReceivedRequests}\r\n\r\n          />\r\n        ) : (\r\n          <LoadingSpinner open={isLoading} />\r\n        )}\r\n       \r\n      <Grid  className={classes.submit}>\r\n        {disableField && hasEditAccess && InterviewStatus == \"PENDING\" && (\r\n          <Button\r\n            onClick={EnableFieldsHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size = \"small\"\r\n            startIcon={<BiEdit style={{ marginLeft: 6 }} />}\r\n          \r\n          >\r\n           Edit Details\r\n          </Button>\r\n        )}\r\n     \r\n        </Grid>\r\n       \r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ViewInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Pages\\Resume.js",["535","536","537","538"],"import React from \"react\";\r\nimport Basic from \"../Components/Left/Basic\";\r\nimport Right from \"../Components/Right/Right\";\r\nimport \"./Resume.css\";\r\nimport ResumeContextProvider from \"../Contexts/ResumeContext\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport myClasses from \"./../Components/Left/Left.module.css\";\r\n//import logo from \"../../src/assets/default.png\";\r\n// import thumbn from \"../../src/assets/templateA.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Templates from \"../Components/Templates\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <ResumeContextProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/resume\" component={Templates} exact />\r\n            <Route path=\"/resume/basic\" component={Basic} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n        <Right />\r\n      </ResumeContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewItems.js",["539","540","541","542","543","544","545","546","547","548","549"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuItem, Divider, withStyles } from \"@material-ui/core\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport { FaRegCheckCircle, FaRegClock } from \"react-icons/fa\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport InterviewMenu from \"./InterviewMenu\";\r\nimport ViewInterview from \"../pages/ViewInterview\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"10px 17px\",\r\n    // background:\r\n    //   \"linear-gradient( rgba(0, 27.8, 46.7, 0.7), rgba(78, 120, 160, 0.5))\",\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst InterviewItems = (props) => {\r\n  const MoreIconStyle = {\r\n    marginTop: \"5px\",\r\n  };\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const today = new Date();\r\n\r\n  const date =\r\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n  const CurrentDate = new Date(date);\r\n\r\n  const [InterviewMobAnchorEl, setInterviewMobAnchorEl] = useState(null);\r\n  const isInterviewMenuOpen = Boolean(InterviewMobAnchorEl);\r\n\r\n  const openInterviewMenu = (event) => {\r\n    setInterviewMobAnchorEl(event.currentTarget);\r\n  };\r\n  const closeInterviewMenu = () => {\r\n    setInterviewMobAnchorEl(null);\r\n  };\r\n\r\n  const [interSentRequests, setInterSentRequests] = useState();\r\n  const [interReceivedRequests, setInterReceivedRequests] = useState();\r\n  const [interCandidates, setInterCandidates] = useState();\r\n\r\n  useEffect(() => {\r\n    const getInterviewRequestsData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/interviewreq/${props.id}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setInterSentRequests(responseData.sentRequests);\r\n        setInterReceivedRequests(responseData.receivedRequests);\r\n        setInterCandidates(responseData.candidates);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    if (auth.setting.role == \"Interviewer\") {\r\n      getInterviewRequestsData();\r\n    }\r\n  }, []);\r\n\r\n  const InterviewMobileMenu = (\r\n    <Menu\r\n      anchorEl={InterviewMobAnchorEl}\r\n      id=\"Int-mob-menu\"\r\n      keepMounted\r\n      open={isInterviewMenuOpen}\r\n      // anchorOrigin={{\r\n      //   vertical: \"right\",\r\n      //   horizontal: \"bottom\",\r\n      // }}\r\n      getContentAnchorEl={null}\r\n    >\r\n      {matches && (\r\n        <MenuItem\r\n          style={{ height: 40 }}\r\n          component={Link}\r\n          to={`/interviews/view/${props.id}`}\r\n        >\r\n          <IconButton color=\"primary\">\r\n            <IoMdEye />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">View Details</Typography>\r\n        </MenuItem>\r\n      )}\r\n          <Divider variant=\"middle\" />\r\n    {props.hasAccess && props.role == \"Interviewer\" && (\r\n    \r\n          <InterviewMenu\r\n            closeInterviewMenu={closeInterviewMenu}\r\n            status={props.status}\r\n            intId={props.id}\r\n            interSentRequests={interSentRequests}\r\n            setInterSentRequests={setInterSentRequests}\r\n            interReceivedRequests={interReceivedRequests}\r\n            setInterReceivedRequests={setInterReceivedRequests}\r\n            interCandidates={interCandidates}\r\n            setInterCandidates={setInterCandidates}\r\n            setInterviews={props.setInterviews}\r\n          />\r\n\r\n          )}\r\n      </Menu>\r\n    \r\n    \r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.card}>\r\n        <Grid container spacing={5}>\r\n          <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n            <div className={classes.header}>\r\n              <Typography variant=\"h5\" align=\"justify\">\r\n                {props.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" style={{ color: grey[900] }}>\r\n                {props.date}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item sm={6} lg={5}>\r\n            <Typography variant=\"subtitle2\" className={classes.statusStyle}>\r\n              {(props.status === \"PENDING\" && (\r\n                <FaRegClock className={classes.statusIconStyle} />\r\n              )) ||\r\n                (props.status === \"TAKEN\" && (\r\n                  <FaRegCheckCircle className={classes.statusIconStyle} />\r\n                )) ||\r\n                (props.status === \"CANCELLED\" && (\r\n                  <BlockIcon className={classes.statusIconStyle} />\r\n                ))}\r\n              {props.status}\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              className={classes.ViewButton}\r\n              startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n              component={Link}\r\n              to={`/interviews/view/${props.id}`}\r\n            >\r\n              View Details\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        { (\r\n          <OutsideClickHandler onOutsideClick={closeInterviewMenu}>\r\n            <IconButton onClick={openInterviewMenu}>\r\n              <MoreVertIcon style={MoreIconStyle} />\r\n            </IconButton>\r\n          </OutsideClickHandler>\r\n        )}\r\n\r\n        {InterviewMobileMenu}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InterviewItems;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\pages\\Chat.js",["550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport BottomBar from \"../components/BottomBar\";\r\nimport ChatSearch from \"../components/ChatSearch\";\r\nimport ConversationList from \"../components/ConversationList\";\r\nimport LeftTopBar from \"../components/LeftTopBar\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport RightTopBar from \"../components/RightTopBar\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { SocketContext } from \"../../shared/context/socket-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./Chat.css\"\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  aside: {\r\n    //  width: \"25%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginLeft: \"60px\",\r\n    background: \"#fff\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"50%\",\r\n      marginLeft: 0,\r\n      marginTop: 65\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"40%\",\r\n      marginLeft: 60\r\n\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"25%\",\r\n      marginLeft: 60\r\n\r\n    },\r\n  },\r\n\r\n  mainChat: {\r\n    // width: \"75%\",\r\n    background: \"#d3d3d3\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundSize: \"contain\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"50%\",\r\n      marginTop: 65\r\n\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"60%\",\r\n\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"75%\",\r\n\r\n\r\n    },\r\n\r\n  }\r\n}));\r\n\r\nfunction Chat() {\r\n\r\n  const auth = useContext(AuthContext);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const classes = useStyles();\r\n  const [data, setData] = useState();\r\n  const [searchedData, setSearchedData] = useState();\r\n  const [selectedChat, setSelectedChat] = useState()\r\n  const [messages, setMessages] = useState([]);\r\n  const [flag, setFlag] = useState(false);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [file, setFile] = useState('');\r\n  const[previewUrl,setPreviewUrl]=useState('');\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (msg) => {\r\n      if (selectedChat) {\r\n        if (selectedChat.with == msg.sender || selectedChat.with == msg.receiver)\r\n          setMessages([...messages, msg]);\r\n      }\r\n      if (data) {\r\n        fetchChats();\r\n      }\r\n      openChat()\r\n    })\r\n    return () => {\r\n      socket.off(\"message\");\r\n    };\r\n  }, [data, selectedChat, messages]);\r\n  useEffect(() => {\r\n\r\n    socket.on(\"deleteMessage\", (msg) => {\r\n      if (selectedChat) {\r\n        if (messages[messages.length - 1].id == msg.id) {\r\n          let chat = selectedChat;\r\n          chat.lastMessage = messages[messages.length - 2].content?messages[messages.length - 2].content:'image';\r\n          chat.lastMessageTime = messages[messages.length - 2].time;\r\n          setSelectedChat(chat);\r\n        }\r\n        setMessages(messages.filter(m => m.id != msg.id));\r\n      } else {\r\n        fetchChats();\r\n      }\r\n    })\r\n    return () => {\r\n      socket.off(\"deleteMessage\");\r\n    };\r\n  }, [messages, selectedChat]);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [])\r\n  const openChat = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/settings/openChat/${auth.userId}`,\r\n        \"PATCH\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) { }\r\n  }\r\n  const fetchChats = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/chats/${auth.userId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setData(responseData.chats);\r\n    } catch (err) { }\r\n  };\r\n  function pushMessage() {\r\n    if (!(/^ *$/.test(newMessage)) || file) {\r\n      let message = {\r\n        sender: auth.userId,\r\n        receiver: (selectedChat.with == auth.userId) ? selectedChat.from : selectedChat.with,\r\n        content: newMessage,\r\n        time: (new Date()).toISOString(),\r\n        isRead: true,\r\n        chat: selectedChat.id,\r\n      }\r\n      let d = {\r\n        message,\r\n        file:file,\r\n        fileName:file.name,\r\n        previewUrl:previewUrl,\r\n        token: \"Bearer \" + auth.token\r\n      }\r\n      socket.emit(\"message\", d);\r\n      setNewMessage('');\r\n      setPreviewUrl('');\r\n      setFile('');\r\n      let msg={\r\n        ...message,\r\n        previewUrl\r\n      };\r\n      setMessages([...messages, msg]);\r\n      if (data) {\r\n        let index;\r\n        data.forEach(chat => {\r\n          if (chat.id == msg.chat) {\r\n            index = data.indexOf(chat);\r\n          }\r\n        });\r\n        if (index > -1) {\r\n          data[index].lastMessage = msg.content?msg.content:'image';\r\n          data[index].lastMessageTime = msg.time;\r\n          if (data[index].from != auth.userId)\r\n            data[index].withUnread = 0;\r\n          else\r\n            data[index].fromUnread = 0;\r\n          setData(data)\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className={classes.aside} >\r\n        <header>\r\n          <LeftTopBar\r\n            name={auth.resume && auth.resume.fullname}\r\n          />\r\n        </header>\r\n        <ChatSearch data={data} setSearchedData={setSearchedData} />\r\n        <div className=\"contact-boxes\">\r\n          {data != null && (<ConversationList data={data} setData={setData} searchedData={searchedData} selectedChat={selectedChat} setSelectedChat={setSelectedChat} />)}\r\n        </div>\r\n      </div>\r\n      <div className={classes.mainChat}>\r\n        <header>\r\n          {selectedChat != null && (<RightTopBar selectedChat={selectedChat} />)}\r\n        </header>\r\n\r\n        {selectedChat != null && (<MessageBox selectedChat={selectedChat} setSelectedChat={setSelectedChat} messages={messages} setMessages={setMessages} />)}\r\n        {selectedChat != null && (<BottomBar newMessage={newMessage} setNewMessage={setNewMessage} pushMessage={pushMessage} previewUrl={previewUrl} setPreviewUrl={setPreviewUrl} file={file} setFile={setFile}/>)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Chat;\r\n\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\NavigationElements\\Navbar.js",["567","568","569","570","571","572","573","574","575","576","577"],"import React, { Fragment, useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Divider,\r\n  Avatar,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { FaQuestionCircle, FaBell } from \"react-icons/fa\";\r\nimport { IoLogOut } from \"react-icons/io5\";\r\nimport { MdArrowDropDownCircle } from \"react-icons/md\";\r\nimport { AiFillLock, AiOutlineUserSwitch } from \"react-icons/ai\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { AuthContext } from \"../../../shared/context/auth-context\";\r\nimport { useAuth } from \"../../../shared/hooks/auth-hook\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { IoIosSwitch } from \"react-icons/io\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { SocketContext } from \"../../../shared/context/socket-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: \"auto 8px\",\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  navbar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(0),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  },\r\n  MoreIconButton: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  MainLogo: {\r\n    flexGrow: 1,\r\n    color: \"#fff\"\r\n  },\r\n  switchControl: {\r\n    marginRight: \"0px\",\r\n    marginLeft: \"2px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  root: {\r\n    paddingBottom: \"0px\",\r\n  },\r\n  gutters: {\r\n    // paddingRight: \"10px\",\r\n    marginRight: \"0px\",\r\n  },\r\n  switchBase: {\r\n    color: \"#fff\",\r\n    \"&$checked\": {\r\n      color: \"white\",\r\n    },\r\n    \"_&$checked + $track\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n    get \"&$checked + $track\"() {\r\n      return this[\"_&$checked + $track\"];\r\n    },\r\n    set \"&$checked + $track\"(value) {\r\n      this[\"_&$checked + $track\"] = value;\r\n    },\r\n  },\r\n  checked: {\r\n    color: \"#fff\",\r\n  },\r\n  track: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function Navbar(props) {\r\n\r\n  const [NavSignUp, setNavSignup] = useState(true);\r\n  const auth = useContext(AuthContext);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const { login} = useAuth();\r\n\r\n  const history = useHistory();\r\n  const [success, setSuccess] = useState(false);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [role, setRole] = useState(\"Candidate\");\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n  const logout=()=>{\r\n    auth.logout();\r\n    socket.disconnect();\r\n  }\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    if (auth.setting)\r\n      setRole(auth.setting.role);\r\n  }, [auth.setting]);\r\n\r\n  const switchRole = () => {\r\n    const SetRole = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/settings/role/${auth.setting._id}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            role: (role == 'Candidate') ? \"Interviewer\" : \"Candidate\",\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        if (responseData.setting){\r\n          const storedData = JSON.parse(localStorage.getItem('userData'));\r\n          login(storedData.userId, storedData.token, storedData.resume, responseData.setting);\r\n        }\r\n        history.go(0);\r\n      } catch (err) {\r\n       }\r\n    };\r\n    SetRole();\r\n  };\r\n\r\n  const NavsignUpBtnHandler = () => {\r\n    setNavSignup(!NavSignUp);\r\n  };\r\n\r\n  const ProfileMenuItem = {\r\n    //  width: \"100%\",\r\n    marginRight: \"10px\",\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [mobileMenuAnchorEl, setMobileMenuAnchorEl] = useState(false);\r\n  const isMobileMenuOpen = Boolean(mobileMenuAnchorEl);\r\n  const [desktopMenuAnchorEl, setDesktopMenuAnchorEl] = useState(false);\r\n  const isNavMenuOpen = Boolean(desktopMenuAnchorEl);\r\n\r\n  const openMobileMenu = (event) => {\r\n    setMobileMenuAnchorEl(event.currentTarget);\r\n  };\r\n  const closeMobileMenu = () => {\r\n    setMobileMenuAnchorEl(null);\r\n  };\r\n\r\n  function OpenNavbarMenu(event) {\r\n    setDesktopMenuAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const CloseNavbarMenu = () => {\r\n    setDesktopMenuAnchorEl(null);\r\n  };\r\n\r\n  const matches = useMediaQuery(\"(min-width:960px)\");\r\n\r\n  useEffect(() => {\r\n    if (matches) setMobileMenuAnchorEl(null);\r\n  }, [matches]);\r\n\r\n  const mobileMenuBeforeLogin = (\r\n    <Menu\r\n      anchorEl={mobileMenuAnchorEl}\r\n      id=\"mobile-menu\"\r\n      keepMounted\r\n      open={isMobileMenuOpen}\r\n      className={classes.MoreIconButton}\r\n    >\r\n      <MenuItem\r\n        onClick={NavsignUpBtnHandler}\r\n        component={Link}\r\n        to={NavSignUp ? \"/signup\" : \"/auth\"}\r\n      >\r\n        <IconButton color=\"primary\">\r\n          <AiFillLock />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle1\">\r\n          {\" \"}\r\n          {NavSignUp ? \"Sign Up\" : \"Sign In\"}{\" \"}\r\n        </Typography>\r\n      </MenuItem>\r\n      <MenuItem onClick={closeMobileMenu} component={Link} to=\"/Faq\">\r\n        <IconButton color=\"primary\">\r\n          <FaQuestionCircle />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle1\">Help & Support</Typography>\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  const desktopMenu = (\r\n    <Menu\r\n      anchorEl={desktopMenuAnchorEl}\r\n      open={isNavMenuOpen}\r\n      keepMounted\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"center\",\r\n      }}\r\n      getContentAnchorEl={null}\r\n    >\r\n      <MenuItem\r\n        classes={{ root: classes.root, gutters: classes.gutters }}\r\n        style={ProfileMenuItem}\r\n        component={Link}\r\n        to=\"/profile\"\r\n      >\r\n        {auth.resume &&(<Avatar\r\n          src={\"http://localhost:5000/\" + auth.resume.image}\r\n          alt={null}\r\n          style={{ height: \"70px\", width: \"70px\", marginRight: 10 }}\r\n        />)}\r\n        <div>\r\n          <Typography variant=\"h6\">\r\n            {auth.resume && auth.resume.fullname}\r\n          </Typography>\r\n          <Typography variant=\"body1\">See your profile</Typography>\r\n        </div>\r\n      </MenuItem>\r\n      <MenuItem\r\n        className={classes.root}\r\n        component={Link}\r\n        to=\"/Faq\"\r\n        onClick={CloseNavbarMenu}\r\n      >\r\n        <IconButton color=\"primary\">\r\n          <FaQuestionCircle />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle1\">Help & Support</Typography>\r\n      </MenuItem>\r\n\r\n      <Divider variant=\"middle\" />\r\n      <Hidden smUp implementation=\"css\">\r\n        <MenuItem className={classes.root} onClick={switchRole}>\r\n          <IconButton color=\"primary\">\r\n            <IoIosSwitch />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Switch to{\" \"}\r\n            {role == \"Candidate\"? \"Interviewer\" : \"Candidate\"}\r\n          </Typography>\r\n        </MenuItem>\r\n        <Divider variant=\"middle\" />\r\n      </Hidden>\r\n\r\n      <MenuItem\r\n        className={classes.root}\r\n        component={Link}\r\n        to=\"/Faq\"\r\n        onClick={CloseNavbarMenu}\r\n      >\r\n        <IconButton color=\"primary\">\r\n          <SettingsIcon />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle1\">Settings</Typography>\r\n      </MenuItem>\r\n      <Divider variant=\"middle\" />\r\n      <MenuItem className={classes.root} onClick={logout}>\r\n        <IconButton color=\"primary\">\r\n          <IoLogOut />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle1\">Log Out</Typography>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <LoadingSpinner open={isLoading} />\r\n\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={1200}\r\n        onClose={status == \"200\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"200\" ? \"success\" : \"error\"}\r\n          onClose={status == \"200\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"200\"\r\n            ? `Your role has been swtiched to ${role == \"Candidate\" ? \"Interviewer\" : \"Candidate\"}`\r\n            : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <AppBar position=\"fixed\" className={classes.navbar}>\r\n        <Toolbar>\r\n          {auth.isLoggedIn && (\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={props.HandleDrawer}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n\r\n          <Typography variant=\"h4\" className={classes.MainLogo}>\r\n            SmartHire\r\n          </Typography>\r\n      \r\n          <div className={classes.sectionDesktop}>\r\n            {!auth.isLoggedIn && (\r\n              <>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.button}\r\n                  component={Link}\r\n                  to={NavSignUp ? \"/signup\" : \"/auth\"}\r\n                  onClick={NavsignUpBtnHandler}\r\n                >\r\n                  {NavSignUp ? \"Sign Up\" : \"Sign In\"}\r\n                </Button>\r\n                <IconButton color=\"secondary\" component={Link} to=\"/Faq\">\r\n                  <FaQuestionCircle />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className={classes.sectionMobile}>\r\n            {!auth.isLoggedIn && (\r\n              <>\r\n                <OutsideClickHandler onOutsideClick={closeMobileMenu}>\r\n                  <IconButton color=\"inherit\" onClick={openMobileMenu}>\r\n                    <MoreIcon />\r\n                  </IconButton>\r\n                </OutsideClickHandler>\r\n                {mobileMenuBeforeLogin}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {auth.isLoggedIn && (\r\n            <>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={4} color=\"error\">\r\n                  <FaBell />\r\n                </Badge>\r\n              </IconButton>\r\n\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  className={classes.switchControl}\r\n                  control={\r\n                    <Switch\r\n                      checked={role == 'Candidate'}\r\n                      onChange={switchRole}\r\n                      name=\"checked\"\r\n                      classes={{\r\n                        switchBase: classes.switchBase,\r\n                        thumb: classes.thumb,\r\n                        track: classes.track,\r\n                        checked: classes.checked,\r\n                      }}\r\n                    />\r\n                  }\r\n                  label={\r\n                    role\r\n                  }\r\n                />\r\n              </FormGroup>\r\n              <OutsideClickHandler onOutsideClick={CloseNavbarMenu}>\r\n                <IconButton color=\"inherit\" onClick={OpenNavbarMenu}>\r\n                  <MdArrowDropDownCircle />\r\n                </IconButton>\r\n              </OutsideClickHandler>\r\n              {desktopMenu}\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\hooks\\http-hook.js",["578","579"],"import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [status, setStatus] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  const httpAbortCtrl = new AbortController();\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n    \r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      let response;\r\n      try {\r\n        response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n        setStatus(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        if (!response)\r\n          setStatus(400);\r\n        setIsLoading(false);\r\n        throw err;\r\n      \r\n      }\r\n    \r\n   \r\n    },\r\n    []\r\n  );\r\n  \r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort()); \r\n      httpAbortCtrl.abort();\r\n       \r\n    };\r\n  }, []);\r\n\r\n \r\n  return { isLoading, error, status, sendRequest, clearError };\r\n};\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewCandidates.js",["580","581","582","583"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport SearchCandidates from \"./SearchCandidates\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport CandidatesDialogItems from \"./CandidatesDialogItems\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  search: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CustomizedDialogs = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [resume, setResume] = useState([]);\r\n  const [closeIcon, setCloseIcon] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setResume(\"\");\r\n    setCloseIcon(false);\r\n  }, [searchItem]);\r\n\r\n  const handleCloseDialog = () => {\r\n    props.setOpen(false);\r\n    setSearchItem(\"\");\r\n    setCloseIcon(false);\r\n  };\r\n\r\n  const getSearchItem = () => {\r\n    setCloseIcon(!closeIcon);\r\n    const fetchSearchedResumes = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/resumes/resume/${searchItem}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResume(responseData.resumes);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchSearchedResumes();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleCloseDialog}\r\n        open={props.open}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle\r\n          onClose={handleCloseDialog}\r\n          className={classes.dialogTitle}\r\n        >\r\n          Candidates\r\n          <SearchCandidates\r\n            setSearchItem={setSearchItem}\r\n            searchItem={searchItem}\r\n            getSearchItem={getSearchItem}\r\n            closeIcon={closeIcon}\r\n            setCloseIcon={setCloseIcon}\r\n          />\r\n        </DialogTitle>\r\n        {isLoading && <LoadingSpinner open={isLoading} />}\r\n        <DialogContent dividers>\r\n          <div align=\"center\">\r\n            {!searchItem || !closeIcon\r\n              ? props.candidateResume.length === 0\r\n                ? \"No Candidates have been added to this Interview. \"\r\n                : props.candidateResume.map((candidate) => (\r\n                    <CandidatesDialogItems\r\n                      key={candidate.id}\r\n                      id={candidate.id}\r\n                      name={candidate.fullname}\r\n                      userId={candidate.user}\r\n                      interId={props.interId}\r\n                      interCandidates={props.interCandidates}\r\n                      getInterviewRequestsData = {props.getInterviewRequestsData}\r\n                       //  image={candidate.image}\r\n                    />\r\n                  ))\r\n              : resume.length === 0\r\n              ? \"No users Found\"\r\n              : resume.map((resume) => (\r\n                  <CandidatesDialogItems\r\n                    key={resume._id}\r\n                    id={resume._id}\r\n                    name={resume.fullname}\r\n                    interId={props.interId}\r\n                    userId={resume.user}\r\n                    searchItem={searchItem}\r\n                    interCandidates={props.interCandidates}\r\n                    interReceivedRequests = {props.interReceivedRequests}\r\n                    getInterviewRequestsData = {props.getInterviewRequestsData}\r\n\r\n                    //  image={candidate.image}\r\n                  />\r\n                ))}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedDialogs;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CeritificateList.js",["584","585","586","587"],"import React, {useContext} from \"react\";\r\nimport CertificateItems from \"./CertificateItems\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 50px\",\r\n  },\r\n  heading:{\r\n    paddingTop: \"16px\",\r\n    fontSize: \"1.2rem\"\r\n\r\n  }\r\n}));\r\nconst CertificateList = (props) => {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Paper elevation={5} className={classes.paper}>\r\n          <Typography variant=\"h4\" color=\"primary\" align=\"center\">\r\n           {auth.setting.role == \"Candidate\" ? \"No certificates has been added by this User\": \" No certificates found. Maybe create one?\"} \r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (props.approvedCertCount == 0 && props.uid != auth.userId ){\r\n    return (\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Paper elevation={5} className={classes.paper}>\r\n          <Typography variant=\"h4\" color=\"primary\" align=\"center\">\r\n            No certificate has been added by the user yet\r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <AppBar position=\"static\" >\r\n      <Typography className = {classes.heading}>ADDED CERTIFICATES</Typography>\r\n     </AppBar>\r\n\r\n     { props.items.map((certificate) => (\r\n         ((props.hasDeleteAccess) || (!props.hasDeleteAccess && certificate.isApproved == true ))&& (\r\n        <CertificateItems\r\n          key={certificate.id}\r\n          id={certificate.id}\r\n          title={certificate.title}\r\n          description={certificate.description}\r\n          institute={certificate.institute}\r\n          isApproved={certificate.isApproved}\r\n          file={certificate.file}\r\n          field={certificate.field}\r\n          status={certificate.isApproved ? \"APPROVED\" : \"UNAPPROVED\"}\r\n          creatorId={certificate.creator}\r\n          hasDeleteAccess={props.hasDeleteAccess}\r\n          approvedCertCount={props.approvedCertCount}\r\n          setLoadedCertificates={props.setLoadedCertificates}\r\n         \r\n        />\r\n       )\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CertificateList;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Admin\\Components\\SideBar.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\AddCertificate.js",["588","589","590","591","592","593"],"import React, { Fragment, useState, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DvrIcon from \"@material-ui/icons/Dvr\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CertificateForm from \"./CertificateForm\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst AddCertificate = (props) => {\r\n  var curr = new Date();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [field, setField] = useState(\"Computer Science\");\r\n\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const fetchCertificates = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/certificates/user/\" + auth.userId,\r\n        'GET',\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.setLoadedCertificates(responseData.certificate);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle disableTypography>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Add Certificate\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <DvrIcon style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            <CertificateForm field={field}    fetchCertificates={fetchCertificates}  setField={setField} setOpen = {props.setOpen}/>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCertificate;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\UpdateCertificate.js",["594","595","596","597","598","599","600","601"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BiSave } from \"react-icons/bi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    marginTop: \"15px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n    marginTop: 8,\r\n  },\r\n}));\r\n\r\nconst fields = [\r\n  \"Computer Science\",\r\n  \"Electrical Engineering\",\r\n  \"Material Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"MBBS\",\r\n  \"BDS\",\r\n  \"Software Engineering\",\r\n];\r\n\r\nconst validationSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .min(5, \"Title must be atleast 5 characters long\")\r\n    .required(\"Title is required\"),\r\n  description: yup\r\n    .string()\r\n    .min(15, \"Description must be atleast 15 characters long\")\r\n    .required(\"Description is required\"),\r\n  institute: yup\r\n    .string()\r\n    .min(10, \"Institute must be atleast 10 characters long\")\r\n    .required(\"Institute is required\"),\r\n  // CertificateImage: yup.mixed().required(\"A Certificate Image is required\"),\r\n});\r\n\r\nconst UpdateCertificate = (props) => {\r\n  const certificateId = props.certId;\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [field, setField] = useState(props.loadedField.title);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n    title: props.loadedCertificate.title,\r\n    description: props.loadedCertificate.description,\r\n    institute: props.loadedCertificate.institute,\r\n  };\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/certificates/${certificateId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: values.title,\r\n          description: values.description,\r\n          institute: values.institute,\r\n          fieldTitle: field,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      status == 200 && props.setDisableField(true);\r\n      status == 200 ? setSuccess(true) : setSuccess(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner open={isLoading} />}\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={3000}\r\n        onClose={status == \"200\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"200\" ? \"success\" : \"error\"}\r\n          onClose={status == \"200\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"200\" ? \"Certificate Updated Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Grid item={true} xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    disabled={props.disableField}\r\n                    helperText={\r\n                      <ErrorMessage\r\n                        name=\"title\"\r\n                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    id=\"description\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    disabled={props.disableField}\r\n                    label=\"Description\"\r\n                    helperText={\r\n                      <ErrorMessage\r\n                        name=\"description\"\r\n                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Field\r\n                      as={TextField}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      size=\"medium\"\r\n                      multiline\r\n                      name=\"institute\"\r\n                      label=\"Institute\"\r\n                      id=\"institute\"\r\n                      disabled={props.disableField}\r\n                      helperText={\r\n                        <ErrorMessage\r\n                          name=\"institute\"\r\n                          style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} className={classes.GridStyle}>\r\n                    <SelectBox\r\n                      value={field}\r\n                      setValue={setField}\r\n                      title={\"Select Field \"}\r\n                      data={fields}\r\n                      fullWidth\r\n                      disabled={props.disableField}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item={true} xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    name=\"status\"\r\n                    value={\r\n                      props.loadedCertificate.isApproved\r\n                        ? \"APPROVED\"\r\n                        : \"UNAPPROVED\"\r\n                    }\r\n                    disabled\r\n                    size=\"small\"\r\n                    label=\"Status\"\r\n                    id=\"status\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Grid item xs={12} sm={6}>\r\n                <div className={classes.content}>\r\n                  <img className={classes.preview} src={`http://localhost:5000/${props.loadedCertificate.image}`} alt={props.loadedCertificate.title}/>\r\n                  <br />\r\n                </div>\r\n              </Grid> */}\r\n            </Grid>\r\n            <Grid className={classes.submit}>\r\n              {!props.disableField && props.hasEditAccess && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  disabled={!(fProps.isValid || !field || fProps.isSubmitting)}\r\n                  startIcon={<BiSave style={{ marginLeft: 6 }} />}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default UpdateCertificate;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\RightTopBar.js",["602","603","604","605"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport './RightTopBar.css';\r\nimport {AuthContext} from '../../shared/context/auth-context';\r\n\r\nfunction RightTopBar(props) {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"avatar-component\">\r\n\r\n        <Avatar src={'http://localhost:5000/uploads/images/image.png'}>\r\n        </Avatar>\r\n        <div style={{ margin: \"10px\" }}>\r\n          <Typography variant=\"h6\" >\r\n            { (props.selectedChat.from==auth.userId)? props.selectedChat.withName:props.selectedChat.fromName}\r\n          </Typography>\r\n        </div>\r\n\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <IconButton\r\n        >\r\n          <CallIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton\r\n        component = {Link}\r\n        to =\"/videocall\"\r\n        >\r\n          <VideocamIcon color=\"primary\" />\r\n        </IconButton>\r\n\r\n        <IconButton\r\n        >\r\n          <MoreVertIcon color=\"primary\" />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\nexport default RightTopBar;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\LeftTopBar.js",["606","607"],"import React, { useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport './LeftTopBar.css';\r\nimport {AuthContext} from '../../shared/context/auth-context';\r\n\r\nfunction LeftTopBar(props) {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      <div className=\"avatar-component\">\r\n\r\n        <Avatar\r\n          src={\"http://localhost:5000/\" + auth.resume.image}\r\n          >\r\n        </Avatar>\r\n        <div style={{ margin: \"10px\" }}>\r\n          <Typography variant=\"h6\" >\r\n            {props.name}\r\n          </Typography>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <IconButton\r\n        >\r\n          <MoreVertIcon color=\"primary\" />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\nexport default LeftTopBar;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\MessageBox.js",["608","609","610","611","612","613","614","615","616"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport Message from \"./Message\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { SocketContext } from \"../../shared/context/socket-context\";\r\nimport './Message.css';\r\nfunction MessageBox(props) {\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const socket = useContext(SocketContext);\r\n  // useEffect(()=>{\r\n  //   endDiv.onscroll = function() {\r\n  //     console.log(window.pageYOffset);\r\n  //     if(endDiv.pageYOffset === 0) {\r\n  //       console.log('I AM AT THE TOP');\r\n  //     }\r\n  //   };\r\n  // },[])\r\n  useEffect(() => {\r\n    fetchMessageData();\r\n    markRead();\r\n  }, [props.selectedChat])\r\n  const fetchMessageData = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/messages/chat/${props.selectedChat.id}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.setMessages(responseData.messages)\r\n    } catch (err) { }\r\n  };\r\n  const markRead = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `http://localhost:5000/api/chats/`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          uid: auth.userId,\r\n          cid: props.selectedChat.id,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) { }\r\n  };\r\n  const deleteMessage = (msg) => {\r\n    let d = {\r\n      msg,\r\n      token: \"Bearer \" + auth.token\r\n    }\r\n    socket.emit(\"deleteMessage\", d);\r\n    if (props.messages[props.messages.length - 1].id == msg.id) {\r\n      let chat = props.selectedChat;\r\n      chat.lastMessage = props.messages[props.messages.length - 2].content;\r\n      chat.lastMessageTime = props.messages[props.messages.length - 2].time;\r\n      props.setSelectedChat(chat);\r\n    }\r\n    props.setMessages(props.messages.filter(m => m.id != msg.id));\r\n\r\n  }\r\n\r\n  const endDiv = useRef(null)\r\n  useEffect(() => {\r\n    endDiv.current.scrollIntoView()\r\n  })\r\n  const scrollHandler = (event) => {\r\n    // console.log(window.innerHeight)\r\n    // console.log(endDiv.current.getBoundingClientRect().bottom)\r\n    // console.log(event.target.scrollHeight)\r\n    if (event.target.scrollTop == 0) {\r\n      console.log(\"top\");\r\n      // fetchMessageData();\r\n    }\r\n    // console.log(event.target.clientHeight)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"chats\" onScroll={scrollHandler}>\r\n\r\n        {props.messages.map((msg, idx) => (\r\n          <Message\r\n            key={idx}\r\n            message={msg}\r\n            deleteMessage={deleteMessage}\r\n          />\r\n        ))}\r\n        <div style={{ float: \"right\", clear: \"both\" }} ref={endDiv}> </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MessageBox;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationList.js",["617","618","619","620","621","622","623","624","625","626"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./ConversationList.css\";\r\nimport ConversationListItem from './ConversationListItem';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nfunction ConversationList({ data,setData, searchedData,selectedChat, setSelectedChat }) {\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (selectedChat) {\r\n      let index = data.indexOf(selectedChat);\r\n      if (index > -1) {\r\n        if (data[index].from != auth.userId)\r\n          data[index].withUnread = 0;\r\n        else\r\n          data[index].fromUnread = 0;\r\n          setData(data)\r\n      }\r\n    }\r\n  }, [selectedChat,data])\r\n\r\n  if (searchedData) {\r\n    return (\r\n      <>\r\n      {searchedData.map(chat => (\r\n        <ConversationListItem key={chat.id} selectedChat={selectedChat} setSelectedChat={setSelectedChat} chat={chat} />\r\n      ))}\r\n    </>\r\n    );\r\n  }\r\n  if (data.length === 0) {\r\n    return (\r\n      <Typography variant=\"h5\" color=\"primary\" align=\"center\" style={{ marginTop: \"200px\" }}>\r\n        No Chats Available\r\n      </Typography>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {data.map(chat => (\r\n        <ConversationListItem key={chat.id} selectedChat={selectedChat} setSelectedChat={setSelectedChat} chat={chat} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConversationList;","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\BottomBar.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ChatSearch.js",["627","628","629"],"import React, { useContext } from \"react\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport \"./ChatSearch.css\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nfunction ChatSearch(props) {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const getName = (chat) => {\r\n    return (chat.from == auth.userId) ? chat.withName : chat.fromName\r\n  }\r\n  const searchHandler = (value) => {\r\n    if (value == '')\r\n      props.setSearchedData(null);\r\n    else {\r\n      let newData = props.data.filter(chat => getName(chat).toLowerCase().includes(value.toLowerCase()));\r\n      props.setSearchedData(newData);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"search\">\r\n        <SearchBar\r\n          onChange={searchHandler}\r\n          placeholder=\"Search Chat\" style={{ height: \"40px\", width: \"100%\" }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatSearch;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewMenu.js",["630","631","632","633","634","635","636","637"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport { MenuItem, Divider } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CandidateList from \"./CandidatesList\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport DeleteInterview from \"./DeleteInterview\";\r\nimport CancelInterview from \"./CancelInterview\";\r\nimport { IoIosPeople } from \"react-icons/io\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport CandidateRequestsList from \"./CandidateRequestsList\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst InterviewMenu = (props) => {\r\n  const [OpenCancelDialog, setOpenCancelDialog] = useState(false);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [open, setOpen] = useState(true);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n    // props.setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n\r\n\r\n  const OpenCancelDialogHandler = () => {\r\n    setOpenCancelDialog(true);\r\n  };\r\n  const CloseCancelDialogHandler = () => {\r\n    setOpenCancelDialog(false);\r\n  };\r\n\r\n  const [OpenDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const OpenDeleteDialogHandler = () => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n\r\n  const [callComp, setCallComp] = useState(false);\r\n  const [callCandidateReq, setCallCandidateReq ] = useState(false);\r\n\r\n  const CallCompHandler = () => {\r\n    setCallComp(true);\r\n    setCallCandidateReq(false);\r\n    setOpen(true);\r\n  };\r\n\r\n  const callCandidateReqHandler = () => {\r\n    setCallCandidateReq(true);\r\n    setCallComp(false);\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const getData = async (usID) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/interviews/user/\" + usID,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.setInterviews(responseData.interviews);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getInterviewRequestsData = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/interviews/interviewreq/${props.intId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.setInterSentRequests(responseData.sentRequests);\r\n      \r\n      props.setInterReceivedRequests(responseData.receivedRequests);\r\n\r\n      props.setInterCandidates(responseData.candidates);\r\n      \r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n   \r\n \r\n  return (\r\n    <>\r\n    {/* <Snackbar\r\n            open={success  || !!error}\r\n            autoHideDuration={6000}\r\n            onClose={ status == \"200\"? clearSuccess : clearError}\r\n          >\r\n            <MuiAlert\r\n              elevation={6}\r\n              variant=\"filled\"\r\n              severity={status == \"200\"? \"success\" : \"error\"}\r\n              onClose={ status == \"200\" ? clearSuccess : clearError}\r\n            >\r\n              {status == \"200\" ? \"Interview Cancelled Successfully!\" : error}\r\n            </MuiAlert>\r\n          </Snackbar> */}\r\n      {\" \"}\r\n      {props.status === \"PENDING\" ? (\r\n        <>\r\n          <MenuItem\r\n            onClick={props.closeInterviewMenu}\r\n            component={Link}\r\n            to={`/interviews/view/${props.intId}`}\r\n            style={{ height: 40 }}\r\n          >\r\n            <IconButton color=\"primary\">\r\n              <TiEdit />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\">Edit Details</Typography>\r\n          </MenuItem>\r\n          <Divider variant=\"middle\" />\r\n          <MenuItem onClick={OpenCancelDialogHandler} style={{ height: 40 }}>\r\n            <IconButton color=\"primary\">\r\n              <BlockIcon />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\">Cancel Interview</Typography>\r\n          </MenuItem>\r\n          {OpenCancelDialog && (\r\n            <CancelInterview\r\n              OpenCancelDialog={OpenCancelDialog}\r\n              CloseCancelDialogHandler={CloseCancelDialogHandler}\r\n              setOpenCancelDialog={setOpenCancelDialog}\r\n              selectedInterviewId={props.intId}\r\n              getData = {getData}\r\n            />\r\n          )}\r\n           \r\n          <Divider variant=\"middle\" />\r\n          <MenuItem onClick={CallCompHandler} style={{ height: 40 }}>\r\n            <IconButton color=\"primary\">\r\n              <IoIosPeople />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\">Candidates</Typography>\r\n          </MenuItem>\r\n          {callComp &&(\r\n            <CandidateList\r\n              open={open}\r\n              setOpen={setOpen}\r\n              interId={props.intId}\r\n              interSentRequests={props.interSentRequests}\r\n              interReceivedRequests = {props.interReceivedRequests}\r\n              interCandidates={props.interCandidates}\r\n              getInterviewRequestsData = {getInterviewRequestsData}\r\n           \r\n            />\r\n          )}\r\n\r\n          <Divider variant=\"middle\" />\r\n\r\n          <MenuItem\r\n            onClick={callCandidateReqHandler} \r\n            style={{ height: 40 }}\r\n          >\r\n            <IconButton color=\"primary\">\r\n              <PersonAddIcon />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\">Candidate Requests</Typography>\r\n          </MenuItem>\r\n          { callCandidateReq && (\r\n            <CandidateRequestsList\r\n              open={open}\r\n              setOpen={setOpen}\r\n              interId={props.intId}\r\n              interSentRequests={props.interSentRequests}\r\n              interReceivedRequests = {props.interReceivedRequests}\r\n              getInterviewRequestsData = {getInterviewRequestsData}\r\n    \r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <MenuItem onClick={OpenDeleteDialogHandler} style={{ height: 40 }}>\r\n            <IconButton color=\"primary\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n\r\n            <Typography variant=\"subtitle1\">Delete Interview</Typography>\r\n          </MenuItem>\r\n          {OpenDeleteDialog && (\r\n            <DeleteInterview\r\n              OpenDeleteDialog={OpenDeleteDialog}\r\n              setOpenDeleteDialog={setOpenDeleteDialog}\r\n              selectedInterviewId={props.intId}\r\n              getData = {getData}\r\n              // onDelete = {props.onDelete}\r\n            />\r\n          )}\r\n          \r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InterviewMenu;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidatesDialogItems.js",["638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { BsFillPersonCheckFill } from \"react-icons/bs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FaUserClock, FaUserCheck } from \"react-icons/fa\";\r\nimport { ImUserPlus } from \"react-icons/im\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ActionButton: {\r\n    fontSize: \"0.8rem\",\r\n    margin: \"15px 0px\",\r\n    height: \"32px\",\r\n    width: \"140px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"120px\",\r\n      height: \"30px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    padding: \"4px 8px\",\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"32px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  list: {\r\n    padding: 0,\r\n  },\r\n  responsive: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n}));\r\nconst CandidatesDialogItems = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [responseStatus, setResponseStatus] = useState();\r\n\r\n  const Users = [];\r\n  Users.push(props.userId);\r\n\r\n  const classes = useStyles();\r\n  const [interview, setInterview] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchInterview = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/${props.interId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setInterview(responseData.interview);\r\n      } catch (err) {}\r\n    };\r\n    props.interId && fetchInterview();\r\n  }, []);\r\n\r\n  function findAddedCandidates(arr1, arr2) {\r\n    return arr1.some((item) => arr2 == item.id);\r\n  }\r\n  function findRequestedCandidates(arr1, arr2) {\r\n    return arr1.some((item) => arr2 == item);\r\n  }\r\n\r\n  function findAcceptingCandidates(arr1, arr2) {\r\n    return arr1.some((item) => arr2 == item.id);\r\n  }\r\n\r\n\r\n  const inviteCandidateHandler = () => {\r\n    const sendInvitationRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/invitecandidate/${props.interId}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: props.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setInterview(responseData.interview);\r\n        \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    sendInvitationRequest();\r\n  };\r\n\r\n  const removeCandidateHandler = () => {\r\n    const removeAddedCand = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/removecandidate/${props.interId}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: props.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResponseStatus(responseData.responseDone);\r\n       props.getInterviewRequestsData();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    removeAddedCand();\r\n  };\r\n  const AcceptCandidateReqHandler = () => {\r\n     const AcceptCandRequest = async () => {  \r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/acceptcandidatereq/${props.interId}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: props.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResponseStatus(responseData.responseDone);\r\n        props.getInterviewRequestsData();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    AcceptCandRequest();\r\n  };\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 201);\r\n  }, [status]);\r\n  return (\r\n    <>\r\n      {\r\n        <Snackbar\r\n          open={success || responseStatus == \"removed\" || !!error}\r\n          autoHideDuration={6000}\r\n          onClose={\r\n            status == \"201\" || responseStatus == \"removed\"\r\n              ? clearSuccess\r\n              : clearError\r\n          }\r\n        >\r\n          <MuiAlert\r\n            elevation={6}\r\n            variant=\"filled\"\r\n            severity={\r\n              status == \"201\" || responseStatus == \"removed\"\r\n                ? \"success\"\r\n                : \"error\"\r\n            }\r\n            onClose={\r\n              status == \"201\" || responseStatus == \"removed\"\r\n                ? clearSuccess\r\n                : clearError\r\n            }\r\n          >\r\n            {status == \"201\"\r\n              ? \"Invitation has sent successfully!\"\r\n              : responseStatus == \"removed\"\r\n              ? \"Candidate has been removed from the Interview successfully!\"\r\n              : responseStatus == \"accepted\"\r\n              ? \"Candidate Request has been accepted successfully!\"\r\n              : error}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      }\r\n\r\n      {props.userId != auth.userId && (\r\n        <List className={classes.list}>\r\n          <Grid container>\r\n            <Grid item xs={6} sm={8} className={classes.responsive}>\r\n              <ListItem\r\n                className={classes.listItem}\r\n                button\r\n                component={Link}\r\n                to={`/profile/${props.userId}`}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    src={props.image}\r\n                    style={{\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                      marginRight: 10,\r\n                    }}\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText> {props.name} </ListItemText>\r\n              </ListItem>\r\n            </Grid>\r\n            {isLoading && <LoadingSpinner open={isLoading} />}\r\n\r\n            <Grid item sm={4} xs={6} align=\"center\">\r\n              {/* IF */}\r\n              {props.interCandidates && !props.searchItem ? (\r\n                Users.map(\r\n                  (id) =>\r\n                    findAddedCandidates(props.interCandidates, id) && (\r\n                      <Button\r\n                        key={id}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.ActionButton}\r\n                        onClick={removeCandidateHandler}\r\n                        startIcon={\r\n                          <PersonAddDisabledIcon style={{ marginLeft: 6 }} />\r\n                        }\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    )\r\n                )\r\n              ) : // ELSE\r\n              //IF\r\n              typeof interview.sentRequests !== \"undefined\" &&\r\n                props.interCandidates &&\r\n                props.interReceivedRequests ? (\r\n                //  else if\r\n                Users.map((id) =>\r\n                  findAddedCandidates(props.interCandidates, id) ? (\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      className={classes.statusStyle}\r\n                      key={id}\r\n                    >\r\n                      <BsFillPersonCheckFill\r\n                        className={classes.statusIconStyle}\r\n                        key={id}\r\n                      />\r\n                      ADDED\r\n                    </Typography>\r\n                  ) : //  else if\r\n                  findRequestedCandidates(interview.sentRequests, id) ||\r\n                    status == 201 ? (\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      className={classes.statusStyle}\r\n                      key={id}\r\n                    >\r\n                      <FaUserClock\r\n                        className={classes.statusIconStyle}\r\n                        key={id}\r\n                      />\r\n                      REQUESTED\r\n                    </Typography>\r\n                  ) : //else\r\n                  findAcceptingCandidates(props.interReceivedRequests, id) &&\r\n                    status == \"200\" ? (\r\n                    responseStatus == \"accepted\" ? (\r\n                      <Typography\r\n                        variant=\"subtitle2\"\r\n                        className={classes.statusStyle}\r\n                        key={id}\r\n                      >\r\n                        <FaUserCheck\r\n                          className={classes.statusIconStyle}\r\n                          key={id}\r\n                        />\r\n                        ACCEPTED\r\n                      </Typography>\r\n                    ) : (\r\n                      <Button\r\n                        key={id}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.ActionButton}\r\n                        startIcon={<FaUserCheck style={{ marginLeft: 6 }} />}\r\n                        onClick={AcceptCandidateReqHandler}\r\n                      >\r\n                        Accept\r\n                      </Button>\r\n                    )\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.ActionButton}\r\n                      onClick={inviteCandidateHandler}\r\n                      startIcon={<PersonAddIcon style={{ marginLeft: 6 }} />}\r\n                      key={id}\r\n                    >\r\n                      Invite\r\n                    </Button>\r\n                  )\r\n                )\r\n              ) : (\r\n                //ELSE\r\n                //ELSE\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.ActionButton}\r\n                  onClick={inviteCandidateHandler}\r\n                  startIcon={<PersonAddIcon style={{ marginLeft: 6 }} />}\r\n                  //key={id}\r\n                >\r\n                  Invite\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CandidatesDialogItems;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\SearchCandidates.js",["658"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flexGrow: 1,\r\n    padding: 10,\r\n    width:\"80%\"\r\n  },\r\n\r\n  iconButton:{\r\n      float: \"right\",\r\n      marginTop: \"3px\"\r\n  }\r\n}));\r\n\r\n function SearchCandidates(props) {\r\n const classes = useStyles();\r\n\r\n const searchHandler = (e) =>{\r\n    props.setSearchItem(e.target.value)\r\n }\r\n\r\nconst clearHandler = ()=>{\r\n  props.setCloseIcon(false);\r\n  props.setSearchItem(\"\");\r\n} \r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}>\r\n  \r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Type something and click search icon\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n         onChange={searchHandler}\r\n         value={props.searchItem}\r\n      />\r\n      {!props.closeIcon && props.searchItem ?\r\n        <IconButton  className={classes.iconButton} aria-label=\"search\" onClick={props.getSearchItem}>\r\n        <SearchIcon />\r\n      </IconButton> :\r\n       <IconButton  className={classes.iconButton} aria-label=\"search\" onClick={clearHandler}>\r\n       <ClearIcon />\r\n     </IconButton>\r\n      }\r\n     \r\n    </Paper>\r\n\r\n  );\r\n}\r\nexport default SearchCandidates;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidateRequestsList.js",["659","660","661","662","663"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport CandidateRequests from \"./CandidateRequests\";\r\n\r\nconst CandidateRequestsList = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [receivedCandResume, setReceivedCandResume] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setReceivedCandResume([]);\r\n    const fetchReceiveCandResume = async (candID) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/resumes/user/${candID}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n\r\n        setReceivedCandResume((oldArray) => [...oldArray, responseData.resume]);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    props.interReceivedRequests.map((candidate) =>\r\n      fetchReceiveCandResume(candidate.id)\r\n    );\r\n  }, [props.interReceivedRequests]);\r\n\r\n  return (\r\n    !isLoading &&\r\n    receivedCandResume && (\r\n      <CandidateRequests\r\n        receivedCandResume={receivedCandResume}\r\n        interId={props.interId}\r\n        open={props.open}\r\n        setOpen={props.setOpen}\r\n        getInterviewRequestsData = {props.getInterviewRequestsData}\r\n      />\r\n    )\r\n  );\r\n};\r\nexport default CandidateRequestsList;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\UploadPhoto.js",["664","665","666","667"],"import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    content: {\r\n        textAlign: \"center\"\r\n    },\r\n    preview: {\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        maxWidth: '60%',\r\n        maxHeight: '60%'\r\n    }\r\n}));\r\n\r\nconst UploadPhoto = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (!props.file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            props.setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(props.file);\r\n    }, [props.file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            props.setFile(pickedFile);\r\n        }\r\n    };\r\n\r\n    const sendPhoto = async () => {\r\n        props.pushMessage();\r\n        props.handleCloseDialog();\r\n    }\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Dialog open={props.open} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle disableTypography>\r\n                    <Typography variant=\"h4\" align=\"center\">\r\n                        Upload Photo\r\n          </Typography>\r\n\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <label htmlFor=\"upload-photo\">\r\n                            <input\r\n                                style={{ display: \"none\" }}\r\n                                id=\"upload-photo\"\r\n                                name=\"upload-photo\"\r\n                                type=\"file\"\r\n                                accept=\".jpg,.png,.jpeg\"\r\n                                onChange={pickedHandler}\r\n\r\n                            />\r\n                            <Fab color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                <AddIcon /> Choose photo\r\n                            </Fab>\r\n                        </label>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div className={classes.content}>\r\n                        <img className={classes.preview} src={props.previewUrl} />\r\n                        <br />\r\n                        {props.file && (\r\n                            <>\r\n                                <input type=\"text\" placeholder=\"Type a message\" value={props.newMessage} onChange={(e) => props.setNewMessage(e.target.value)} />\r\n                                <Fab color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\" onClick={sendPhoto}>Send</Fab>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions >\r\n                    <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n                        CANCEL\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UploadPhoto;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\ConversationListItem.js",["668","669","670","671","672"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./ConversationList.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  customBadge: {\r\n    backgroundColor: \"#00aa00\",\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nfunction ConversationList(props) {\r\n  const auth = useContext(AuthContext);\r\n  const classes = useStyles();\r\n\r\n  const getMessage = (msg) => {\r\n    if (msg.length > 25) {\r\n      return msg.substring(0, 25) + \"...\"\r\n    } else {\r\n      return msg\r\n    }\r\n  }\r\n  const getName=()=>{\r\n    return(props.chat.from == auth.userId) ? props.chat.withName : props.chat.fromName\r\n  }\r\n  const getUnread=()=>{\r\n    return(props.chat.from != auth.userId) ? props.chat.withUnread : props.chat.fromUnread\r\n  }\r\n  const getDate = (datetime) => {\r\n    let d = new Date(datetime);\r\n    return d.getDate() + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\r\n  }\r\n  const getTime = (datetime) => {\r\n    let d = new Date(datetime);\r\n    return d.getHours() + \":\" + d.getMinutes();\r\n  }\r\n  const getClass = () => {\r\n    if(getUnread()>0)\r\n    return \"unread\"\r\n    if (props.selectedChat && props.selectedChat.id == props.chat.id)\r\n      return \"selected\"\r\n    return \"contact-box\"\r\n  }\r\n  return (\r\n    <React.Fragment >\r\n      <div className={getClass()} onClick={() => props.setSelectedChat(props.chat)}>\r\n        <div className=\"avatar-component\">\r\n          <Avatar src={'http://localhost:5000/uploads/images/image.png'} style={{ height: \"50px\", width: \"50px\", marginRight: \"10px\" }}>\r\n          </Avatar>\r\n        </div>\r\n        <div className=\"right-section\">\r\n          <div className=\"contact-box-header\">\r\n            <Typography variant=\"h6\" className=\"avatar-title\">{getName()}\r\n            </Typography>\r\n            <span><Badge badgeContent={getUnread()} classes={{ badge: classes.customBadge }}></Badge></span>\r\n            <span className=\"time-mark\">{getDate(props.chat.lastMessageTime)}</span>\r\n\r\n          </div>\r\n          <div className=\"last-msg\">\r\n            <Typography className=\"text\" variant=\"body2\" >{getMessage(props.chat.lastMessage)}</Typography >\r\n            <span className=\"time-mark\">{getTime(props.chat.lastMessageTime)}</span>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ConversationList;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidateRequests.js",["673","674","675","676","677","678","679"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport CandidateRequestsDialogItems from \"./CandidateRequestsDialogItems\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  search: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    fontSize: \"1.3rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CandidateRequests = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const handleCloseDialog = () => {\r\n    props.setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleCloseDialog}\r\n        open={props.open}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle\r\n          onClose={handleCloseDialog}\r\n          className={classes.dialogTitle}\r\n      \r\n        >\r\n            Candidate Requests\r\n        </DialogTitle>\r\n        {isLoading && <LoadingSpinner open={isLoading} />}\r\n        <DialogContent dividers>\r\n          <div align=\"center\">\r\n            {props.receivedCandResume.length === 0\r\n              ? \"No received requests are found. \"\r\n              : props.receivedCandResume.map((candidate) => (\r\n                  <CandidateRequestsDialogItems\r\n                    key={candidate.id}\r\n                    id={candidate.id}\r\n                    name={candidate.fullname}\r\n                    userId={candidate.user}\r\n                    interId={props.interId}\r\n                    getInterviewRequestsData = {props.getInterviewRequestsData}\r\n\r\n                    //  image={candidate.image}\r\n                  />\r\n                ))}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateRequests;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CandidateRequestsDialogItems.js",["680","681","682","683","684","685","686","687","688","689","690","691","692","693","694"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { BsFillPersonCheckFill } from \"react-icons/bs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FaUserCheck, FaUserTimes } from \"react-icons/fa\";\r\nimport { ImUserPlus } from \"react-icons/im\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ActionButton: {\r\n    height: \"32px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    // [theme.breakpoints.up(\"sm\")]: {\r\n    //   float: \"left\",\r\n    // },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"32px\",\r\n      width: \"90px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    padding: \"4px 8px\",\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"32px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"3px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  list: {\r\n    padding: 0,\r\n  },\r\n  responsive: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n}));\r\nconst CandidateRequestsDialogItems = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const Users = [];\r\n  Users.push(props.userId);\r\n\r\n  const classes = useStyles();\r\n  const [responseStatus, setResponseStatus] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const AcceptCandidateReqHandler = () => {\r\n    const AcceptCandRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/acceptcandidatereq/${props.interId}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: props.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n       \r\n        setResponseStatus(responseData.responseDone);\r\n        props.getInterviewRequestsData();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    AcceptCandRequest();\r\n  };\r\n  const RejectCandidateReqHandler = () => {\r\n    const RejectCandRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/rejectcandidatereq/${props.interId}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: props.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n     \r\n        setResponseStatus(responseData.responseDone);\r\n        props.getInterviewRequestsData();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    RejectCandRequest();\r\n  };\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n  return (\r\n    <>\r\n      {\r\n        <Snackbar\r\n          open={success || !!error}\r\n          autoHideDuration={6000}\r\n          onClose={status == \"200\" ? clearSuccess : clearError}\r\n        >\r\n          <MuiAlert\r\n            elevation={6}\r\n            variant=\"filled\"\r\n            severity={status == \"200\" ? \"success\" : \"error\"}\r\n            onClose={status == \"200 \" ? clearSuccess : clearError}\r\n          >\r\n            {status == \"200\" && responseStatus == \"accepted\"\r\n              ? \"Candidate Request has been accepted successfully!\"\r\n              : responseStatus == \"rejected\"\r\n              ? \"Candidate Request has been rejected successfully!\"\r\n              : error}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      }\r\n\r\n      {props.userId != auth.userId && (\r\n        <List className={classes.list}>\r\n          <Grid container>\r\n            <Grid item sm={6} xs={6} className={classes.responsive}>\r\n              <ListItem\r\n                className={classes.listItem}\r\n                button\r\n                component={Link}\r\n                to={`/profile/${props.userId}`}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    src={props.image}\r\n                    style={{\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                      marginRight: 10,\r\n                    }}\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText> {props.name} </ListItemText>\r\n              </ListItem>\r\n            </Grid>\r\n            {isLoading && <LoadingSpinner open={isLoading} />}\r\n\r\n            <Grid item sm={6} xs={6} align=\"center\">\r\n              {status == \"200\" ? (\r\n                <Typography variant=\"subtitle2\" className={classes.statusStyle}>\r\n                  {responseStatus == \"accepted\" ? (\r\n                    <FaUserCheck className={classes.statusIconStyle} />\r\n                  ) : (\r\n                    <FaUserTimes className={classes.statusIconStyle} />\r\n                  )}\r\n\r\n                  {responseStatus == \"accepted\" ? \"ACCEPTED\" : \"REJECTED\"}\r\n                </Typography>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.ActionButton}\r\n                    startIcon={<FaUserCheck style={{ marginLeft: 6 }} />}\r\n                    onClick={AcceptCandidateReqHandler}\r\n                  >\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.ActionButton}\r\n                    startIcon={<FaUserTimes style={{ marginLeft: 6 }} />}\r\n                    onClick={RejectCandidateReqHandler}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CandidateRequestsDialogItems;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\CancelInterview.js",["695","696","697","698","699","700","701","702"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CancelInterview = (props) => {\r\n  const interviewId = props.selectedInterviewId;\r\n  const classes = useStyles();\r\n  const [loadedInterview, setLoadedInterview] = useState();\r\n  const [loadedField, setLoadedField] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n\r\n  // Request to get sepcific Interview Details\r\n  useEffect(() => {\r\n    const fetchInterview = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/${interviewId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedInterview(responseData.interview);\r\n      } catch (err) {}\r\n    };\r\n    if (!loadedInterview) fetchInterview();\r\n  }, []);\r\n\r\n\r\n\r\n    // Request to get FieldTitle against FieldId from loadedInterviews\r\n    useEffect(() => {\r\n      const fetchField = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `http://localhost:5000/api/fields/${loadedInterview.field}`,\r\n            \"GET\",\r\n            null,\r\n            {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + auth.token,\r\n            }\r\n          );\r\n          setLoadedField(responseData.field);\r\n        } catch (err) {}\r\n      };\r\n      if (!loadedField) fetchField();\r\n    }, [loadedField, loadedInterview]);\r\n\r\n  const CancelInterviewHandler = async() => {\r\n     try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/interviews/${interviewId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: loadedInterview.title,\r\n          description: loadedInterview.description,\r\n          fieldTitle: loadedField.title,\r\n          date: loadedInterview.date,\r\n          time: loadedInterview.time,\r\n          isCancelled: true,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.getData(auth.userId);\r\n      props.setOpenCancelDialog(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"200\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"200\" ? \"success\" : \"error\"}\r\n          onClose={status == \"200\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"200\" ? \"Interview Cancelled Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={props.OpenCancelDialog}\r\n        onClose={props.CloseCancelDialogHandler}\r\n        fullWidth\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle\r\n          onClose={props.CloseCancelDialogHandler}\r\n          className={classes.dialogTitle}\r\n        >\r\n          Cancel Interview Confirmation\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            Are you sure you want to cancel this interview?\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={props.CloseCancelDialogHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            No\r\n          </Button>\r\n          <LoadingSpinner open={isLoading} />\r\n\r\n          <Button\r\n            onClick={CancelInterviewHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            //  disabled = {!(loadedInterview && loadedField)}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CancelInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\chat\\components\\Message.js",["703","704","705"],"import React, { useContext } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './Message.css';\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nfunction Message(props) {\r\n    const getDate = (datetime) => {\r\n        let d = new Date(datetime);\r\n        return d.getDate() + \"/\" + (d.getMonth()+1) + \"/\" + d.getFullYear()\r\n    }\r\n    const getTime = (datetime) => {\r\n        let d = new Date(datetime);\r\n        return d.getHours() + \":\" + d.getMinutes();\r\n    }\r\n    const auth = useContext(AuthContext);\r\n    return (\r\n        <>\r\n            <div className={props.message.sender !== auth.userId ? \"message sent\" : \"message received\"}>\r\n                {props.message.file && (<img className={\"image\"} src={'http://localhost:5000/'+props.message.file} />)}\r\n                {props.message.previewUrl && (<img className={\"image\"} src={props.message.previewUrl} />)}\r\n                {props.message.content}\r\n                <div className=\"metadata\">\r\n                    <span className=\"date\">{getTime(props.message.time) + \" \" + getDate(props.message.time)}</span>\r\n\r\n                </div>\r\n            <div className={'button-delete'} onClick={()=>{props.deleteMessage(props.message)}} ><DeleteIcon color={'error'} /></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Message;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\DeleteInterview.js",["706","707","708","709","710","711","712","713"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst DeleteInterview = (props) => {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n\r\n  const CloseDeleteDialogHandler = () => {\r\n    props.setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/interviews/${props.selectedInterviewId}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n\r\n      props.setOpenDeleteDialog(false);\r\n      props.getData(auth.userId);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n  \r\n      <Dialog\r\n        onClose={CloseDeleteDialogHandler}\r\n        open={props.OpenDeleteDialog}\r\n        fullWidth\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle\r\n          onClose={CloseDeleteDialogHandler}\r\n          className={classes.dialogTitle}\r\n        >\r\n          Delete Interview Confirmation\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            Are you sure you want to delete this interview?\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={CloseDeleteDialogHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {isLoading && <LoadingSpinner open={isLoading} />}\r\n\r\n          <Button\r\n            onClick={confirmDeleteHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateForm.js",["714","715","716","717","718","719","720","721","722","723","724","725"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport UploadPhoto from \"../../user/components/UploadPhoto\";\r\n//import UploadCertificate from \"./uploadCertificate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 2),\r\n  },\r\n  GridStyle: {\r\n    margin: \"20px 22px\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  uploadImageText: {\r\n    fontFamily: \"Times New Roman\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n  content: {\r\n    textAlign: \"center\",\r\n  },\r\n  preview: {\r\n    alignContent: \"center\",\r\n    width: \"70%\",\r\n    height: \"70%\",\r\n  },\r\n}));\r\n\r\nconst fields = [\r\n  \"Computer Science\",\r\n  \"Electrical Engineering\",\r\n  \"Material Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"MBBS\",\r\n  \"BDS\",\r\n  \"Software Engineering\",\r\n];\r\n\r\nconst CertificateForm = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [open, setOpen] = useState(false);\r\n  const [file, setFile] = useState(false);\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n    props.setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 201);\r\n  }, [status]);\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n    institute: \"\",\r\n    //   CertificateImage: \"\",\r\n  };\r\n\r\n  // const FILE_SIZE = 160 * 1024;\r\n  // const SUPPORTED_FORMATS = [\r\n  //   \"image/jpg\",\r\n  //   \"image/jpeg\",\r\n  //   \"image/gif\",\r\n  //   \"image/png\",\r\n  // ];\r\n\r\n  const validationSchema = yup.object().shape({\r\n    title: yup\r\n      .string()\r\n      .min(5, \"Title must be atleast 5 characters long\")\r\n      .required(\"Title is required\"),\r\n    description: yup\r\n      .string()\r\n      .min(15, \"Description must be atleast 15 characters long\")\r\n      .required(\"Description is required\"),\r\n    institute: yup\r\n      .string()\r\n      .min(10, \"Institute must be atleast 10 characters long\")\r\n      .required(\"Institute is required\"),\r\n    //  CertificateImage: yup.mixed().required(\"A Certificate Image is required\"),\r\n    //   .test(\r\n    //     \"fileSize\",\r\n    //     \"File too large\",\r\n    //     value => value && value.size <= FILE_SIZE\r\n    //   )\r\n    //   .test(\r\n    //     \"fileFormat\",\r\n    //     \"Unsupported Format\",\r\n    //     value => value && SUPPORTED_FORMATS.includes(value.type)\r\n    //   )\r\n  });\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    console.log(\"File: \" + file)\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append( 'title', values.title);\r\n      formData.append( 'description', values.description);\r\n      formData.append( 'institute', values.institute);\r\n      formData.append( 'fieldTitle', props.field);\r\n      formData.append('image', file);\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/certificates/\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          // \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      console.log(responseData.certificate)\r\n      props.fetchCertificates();\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"201\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"201\" ? \"success\" : \"error\"}\r\n          onClose={status == \"201\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"201\" ? \"Certificate Added Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  size=\"medium\"\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  name=\"title\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"title\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  size=\"medium\"\r\n                  multiline\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  id=\"description\"\r\n                  autoComplete=\"description\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"description\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    size=\"medium\"\r\n                    multiline\r\n                    name=\"institute\"\r\n                    label=\"Institute\"\r\n                    id=\"institute\"\r\n                    autoComplete=\"institute\"\r\n                    helperText={\r\n                      <ErrorMessage\r\n                        name=\"institute\"\r\n                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={5} className={classes.GridStyle}>\r\n                  <SelectBox\r\n                    value={props.field}\r\n                    setValue={props.setField}\r\n                    title={\"Select Field \"}\r\n                    data={fields}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} align=\"center\">\r\n                {/* <UploadCertificate\r\n                  center\r\n                /> */}\r\n                {/* <input\r\n                  style={{ display: \"none\" }}\r\n                  id=\"upload-photo\"\r\n                  name=\"upload-photo\"\r\n                  type=\"file\"\r\n                  accept=\".jpg,.png,.jpeg\"\r\n                  onChange={pickedHandler}\r\n                /> */}\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"contained-button-file\"\r\n                  type=\"file\"\r\n                  multiple\r\n                  name=\"CertificateImage\"\r\n                  // onChange={(event) => {\r\n                  //   fProps.setFieldValue(\r\n                  //     \"CertificateImage\",\r\n                  //     event.target.files[0]\r\n                  //   );\r\n                  // }}\r\n                  onChange = {pickedHandler}\r\n                />\r\n\r\n                <div className={classes.content}>\r\n                  <img className={classes.preview} src={previewUrl} />\r\n                  <br />\r\n                </div>\r\n\r\n                <label htmlFor=\"contained-button-file\">\r\n                  <Button\r\n                    startIcon={<CloudUploadIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    component=\"span\"\r\n                   // onClick={handleOpenDialog}\r\n                  >\r\n                    Attach Certificate\r\n                  </Button>\r\n\r\n                  {/* {open && (\r\n                <UploadPhoto\r\n                  open={open}\r\n                  handleCloseDialog={handleCloseDialog}\r\n                  setOpen={setOpen}\r\n                  attachCertificate={attachCertificate}\r\n                  setAttachCertificate = {setAttachCertificate}\r\n                  setCertificateFile = {setCertificateFile}\r\n\r\n                />\r\n              )} */}\r\n                </label>\r\n                <div\r\n                  style={{ color: \"#004777\" }}\r\n                  className={classes.uploadImageText}\r\n                >\r\n                  {file\r\n                    ? file.name\r\n                    : \"No file Chosen\"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={\r\n                !(fProps.isValid || !props.field || fProps.isSubmitting)\r\n              }\r\n              className={classes.submit}\r\n            >\r\n              Send Approval Request\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CertificateForm;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\SelectBox.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateItems.js",["726","727","728","729","730","731","732","733","734"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuItem, Divider } from \"@material-ui/core\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport { FaRegCheckCircle, FaStamp } from \"react-icons/fa\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GiShieldDisabled } from \"react-icons/gi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport CertificateMenu from \"./CertificateMenu\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  card: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"12px 17px\",\r\n    // background:\r\n    //   \"linear-gradient( rgba(0, 27.8, 46.7, 0.7), rgba(78, 120, 160, 0.5))\",\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n   marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n     \r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      float: \"right\",\r\n      marginRight: \"0px\"\r\n\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      float: \"left\",\r\n    },\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      float: \"left\",\r\n      marginRight:\"10px\"\r\n    },\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n \r\n}));\r\n\r\n\r\n\r\n\r\nconst CertificateItem = (props) => {\r\n \r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [loadedField, setLoadedField ] = useState();\r\n  const MoreIconStyle = {\r\n    marginTop: \"5px\",\r\n  };\r\n  const classes = useStyles();\r\n\r\n      //for getting field of loaded Certificate from the dababase\r\n      useEffect(() => {\r\n        const fetchField = async () => {\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `http://localhost:5000/api/fields/${props.field}`,\r\n              \"GET\",\r\n              null,\r\n              {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + auth.token,\r\n              }\r\n            );\r\n            setLoadedField(responseData.field);\r\n          } catch (err) {}\r\n        };\r\n        if (!loadedField) \r\n        fetchField();\r\n      }, [loadedField]);\r\n    \r\n\r\n  const [CertificateMobAnchorEl, setCertificateMobAnchorEl] = useState(null);\r\n  const isCertificateMenuOpen = Boolean(CertificateMobAnchorEl);\r\n\r\n  const openCertificateMenu = (event) => {\r\n    setCertificateMobAnchorEl(event.currentTarget);\r\n  };\r\n  const closeCertificateMenu = () => {\r\n    setCertificateMobAnchorEl(null);\r\n  };\r\n\r\n  \r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const CertificateMobileMenu = (\r\n    <Menu\r\n      anchorEl={CertificateMobAnchorEl}\r\n      keepMounted\r\n      open={isCertificateMenuOpen}\r\n      getContentAnchorEl={null}\r\n      //  anchorOrigin={{\r\n      //   vertical: \"right\",\r\n      //   horizontal: \"bottom\",\r\n      // }}\r\n    >\r\n      {matches && (\r\n        <MenuItem  style={{ height: 40 }}  \r\n        component={Link}\r\n        to={`/certificates/edit/${props.id}`}\r\n        >\r\n          <IconButton color=\"primary\">\r\n            <IoMdEye />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">View Details</Typography>\r\n        </MenuItem>\r\n      )}\r\n        <Divider variant=\"middle\" />\r\n  \r\n      <CertificateMenu\r\n        closeCertificateMenu={closeCertificateMenu}\r\n        status={props.status}\r\n        certId = {props.id}\r\n        hasDeleteAccess = {props.hasDeleteAccess}\r\n        setLoadedCertificates={props.setLoadedCertificates}\r\n    \r\n      />\r\n    </Menu>\r\n        \r\n  );\r\n \r\n \r\n\r\n  return (\r\n \r\n    <Card className={classes.card}>\r\n      <Grid container spacing={2} >\r\n        <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n          <div className={classes.header}>\r\n            <Typography variant=\"h5\" align=\"justify\">\r\n             {props.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" style={{ color: grey[900] }}>\r\n              {loadedField && loadedField.title}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n     \r\n      <Grid item sm={6} lg={5}  >\r\n        <Typography variant=\"subtitle2\" className={classes.statusStyle}>\r\n          {(props.status === \"APPROVED\" && (\r\n            <FaStamp className={classes.statusIconStyle} />\r\n          )) ||\r\n            (props.status === \"UNAPPROVED\" && (\r\n              <GiShieldDisabled className={classes.statusIconStyle} />\r\n            ))}\r\n          {props.status}\r\n        </Typography>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.ViewButton}\r\n          startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n          component={Link}\r\n          to={`/certificates/edit/${props.id}`}\r\n        >\r\n          View Details\r\n        </Button>\r\n      </Grid>\r\n</Grid>\r\n{props.hasDeleteAccess && (\r\n   <OutsideClickHandler onOutsideClick={closeCertificateMenu}>\r\n   <IconButton onClick={openCertificateMenu}>\r\n     <MoreVertIcon style={MoreIconStyle} />\r\n   </IconButton>\r\n  </OutsideClickHandler>\r\n)}\r\n \r\n {CertificateMobileMenu}\r\n \r\n     \r\n    </Card>\r\n   \r\n    \r\n  );\r\n};\r\n\r\nexport default CertificateItem;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Templates.js",["735","736","737","738"],"import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport myClasses from \"./../Components/Left/Left.module.css\";\r\nimport thumbn from \"../../assets/templateA.png\";\r\nimport { Paper, Typography } from '@material-ui/core';\r\nfunction Templates() {\r\n  const useStyles = makeStyles({\r\n    headerLink: {\r\n      color: \"#FF8E53 \",\r\n      minWidth: 100,\r\n      marginLeft: 30,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Paper style ={{marginTop:\"55px\"}}>\r\n    <div className=\"left\">\r\n      <Typography variant=\"h5\" style={{textAlign:\"center\"}}>Chose Templates</Typography>\r\n      <div className={myClasses.cards}>\r\n        <div className={myClasses.templateCard}>\r\n          <Button\r\n            className={classes.headerLink}\r\n            component={Link}\r\n            to=\"/resume/basic/header\"\r\n          >\r\n            The Basic\r\n          </Button>\r\n        </div>\r\n        {/* Placeholder for a second template */}\r\n        {/* <div className={myClasses.templateCard}>\r\n          <img src={thumbn} alt=\"thumbnail\" className={myClasses.imgThumb} />\r\n          <Button\r\n            className={classes.headerLink}\r\n            component={Link}\r\n            to=\"/basic/header\"\r\n          >\r\n            The Stylish\r\n          </Button>\r\n        </div> */}\r\n      </div>\r\n     \r\n    </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n  export default Templates;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Contexts\\ResumeContext.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewForm.js",["739","740","741","742","743","744","745"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport DatePicker from \"../../shared/components/UIElements/FormElements/DatePicker\";\r\nimport TimePicker from \"../../shared/components/UIElements/FormElements/TimePicker\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GridStyle: {\r\n    margin: \"0px 22px\",\r\n  },\r\n}));\r\n\r\nconst fields = [\r\n  \"Computer Science\",\r\n  \"Electrical Engineering\",\r\n  \"Material Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"MBBS\",\r\n  \"BDS\",\r\n  \"Software Engineering\",\r\n];\r\n\r\nconst InterviewForm = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n    props.setOpen(false)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setSuccess(status==201);\r\n  }, [status]);\r\n\r\n \r\n\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    title: yup\r\n      .string()\r\n      .min(5, \"Title must be atleast 5 characters long\")\r\n      .required(\"Title is required\"),\r\n    description: yup\r\n      .string()\r\n      .min(15, \"Description must be atleast 15 characters long\")\r\n      .required(\"Description is required\"),\r\n  });\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/interviews/\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: values.title,\r\n          description: values.description,\r\n          fieldTitle: props.field,\r\n          date: props.doi,\r\n          time: props.timeOfInter,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.getData(auth.userId)\r\n     \r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoadingSpinner open={isLoading} />\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"201\" ? clearSuccess   : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"201\" ? \"success\" : \"error\"}\r\n          onClose={status == \"201\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"201\" ? \"Interview Created Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  name=\"title\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"title\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  id=\"description\"\r\n                  autoComplete=\"description\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"description\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={3} sm={3} className={classes.GridStyle}>\r\n                  <SelectBox\r\n                    value={props.field}\r\n                    setValue={props.setField}\r\n                    title={\"Select Field \"}\r\n                    data={fields}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={3} sm={3} className={classes.GridStyle}>\r\n                  <DatePicker\r\n                    date={props.doi}\r\n                    setDate={props.setDoi}\r\n                    label=\"Set Interview Date\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={3} sm={3} className={classes.GridStyle}>\r\n                  <TimePicker\r\n                    time={props.timeOfInter}\r\n                    setTime={props.setTimeOfInter}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={\r\n                !(\r\n                  fProps.isValid ||\r\n                  !props.field ||\r\n                  !props.doi ||\r\n                  fProps.isSubmitting\r\n                )\r\n              }\r\n              className={classes.submit}\r\n            >\r\n              Create Interview\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InterviewForm;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\InterviewList.js",["746","747","748","749","750","751","752","753","754"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport InterviewItems from \"./InterviewItems\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport bgInterview5 from \"../../shared/components/UIElements/Images/bgInterview5.jpg\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport MyInterviewCandidate from \"./MyInterviewCandidate\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabContext from \"@material-ui/lab/TabContext\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TabList from \"@material-ui/lab/TabList\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hero: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    marginTop: 0,\r\n    backgroundImage: `linear-gradient(\r\n        to bottom,\r\n        rgba(0, 27.8, 46.7, 0.7),\r\n        rgba(78, 120, 160, 0.7)\r\n      ), url(${bgInterview5})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"4rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 300,\r\n      fontSize: \"3em\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 50px\",\r\n  },\r\n  TabStyle: {\r\n    paddingTop: \"13px\",\r\n    fontSize: \"1.4rem\",\r\n  },\r\n  noRequests: {\r\n    width: \"100%\",\r\n    padding: \"10px 17px\",\r\n    color: \"#004777\",\r\n  },\r\nroot:{\r\n  padding: \"6px\"\r\n}\r\n}));\r\n\r\nconst InterviewList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const today = new Date();\r\n  const date =\r\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n  const CurrentDate = new Date(date);\r\n\r\n  const [value, setValue] = useState(\"1\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  if (props.uid == auth.userId && auth.setting.role == \"Candidate\") {\r\n\r\n    const getCandidateRequestsData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/users/${auth.userId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        props.setUserSentRequests(responseData.sentRequests);\r\n        props.setUserReceivedRequests(responseData.receivedRequests);\r\n        props.setUserAddedInterviews(responseData.addedInterviews);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    \r\n    return (\r\n      <TabContext value={value}>\r\n        <AppBar position=\"static\">\r\n          <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n            <Tab label=\"Sent Requests\" value=\"1\" />\r\n            <Tab label=\"Received Requests\" value=\"2\" />\r\n            <Tab label=\"My Interviews\" value=\"3\" />\r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value = \"1\" className={classes.root}>\r\n        {props.userSentRequests.length === 0 ?  \r\n          ( <Card className={classes.noRequests}>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              \"No requests are found\"{\" \"}\r\n            </Typography>{\" \"}\r\n          </Card> ) : \r\n         ( props.userSentRequests.map((sentReq) => (\r\n            <MyInterviewCandidate\r\n              getCandidateRequestsData = {getCandidateRequestsData}\r\n              key={sentReq.id}\r\n              InterID={sentReq.id}\r\n              InterTitle = {sentReq.title}\r\n              InterDate = {sentReq.date}\r\n              tabValue= {value}\r\n              userSentRequests = {props.userSentRequests}\r\n              InterStatus={\r\n                sentReq.isCancelled\r\n                  ? \"CANCELLED\"\r\n                  : new Date(sentReq.date) > CurrentDate\r\n                  ? \"PENDING\"\r\n                  : \"TAKEN\"\r\n              }\r\n              hasAccess={props.hasAccess}\r\n            />\r\n          )))}\r\n        </TabPanel>\r\n        <TabPanel value = \"2\" className={classes.root}>\r\n        {props.userReceivedRequests.length === 0 ?  \r\n          ( <Card className={classes.noRequests}>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              \"No requests are found\"{\" \"}\r\n            </Typography>{\" \"}\r\n          </Card> ) : \r\n          (props.userReceivedRequests.map((receiveReq) => (\r\n            <MyInterviewCandidate\r\n            getCandidateRequestsData = {getCandidateRequestsData}\r\n              key={receiveReq.id}\r\n              InterID={receiveReq.id}\r\n              InterTitle = {receiveReq.title}\r\n              InterDate = {receiveReq.date}\r\n              hasAccess={props.hasAccess}\r\n              userReceivedRequests = {props.userReceivedRequests}\r\n              InterStatus={\r\n                \"TAKEN\"\r\n                // receiveReq.isCancelled\r\n                //   ? \"CANCELLED\"\r\n                //   : new Date(receiveReq.date) > CurrentDate\r\n                //   ? \"PENDING\"\r\n                //   : \"TAKEN\"\r\n              }\r\n              tabValue= {value}\r\n            />\r\n          )))}\r\n        </TabPanel>\r\n        <TabPanel value = \"3\" className={classes.root}>\r\n        {props.userAddedInterviews.length === 0 ?  \r\n          ( <Card className={classes.noRequests}>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              \"No interviews Pending\"{\" \"}\r\n            </Typography>{\" \"}\r\n          </Card> ) : \r\n         ( props.userAddedInterviews.map((addedInter) => (\r\n            <MyInterviewCandidate\r\n            getCandidateRequestsData = {getCandidateRequestsData}\r\n              key={addedInter.id}\r\n              InterID={addedInter.id}\r\n              InterTitle = {addedInter.title}\r\n              InterDate = {addedInter.date}\r\n              userAddedInterviews = {props.userAddedInterviews}\r\n              InterStatus={\r\n                addedInter.isCancelled\r\n                  ? \"CANCELLED\"\r\n                  : new Date(addedInter.date) > CurrentDate\r\n                  ? \"PENDING\"\r\n                  : \"TAKEN\"\r\n              }\r\n              tabValue= {value}\r\n              hasAccess={props.hasAccess}\r\n            />\r\n          )))}\r\n        </TabPanel>\r\n      </TabContext>\r\n    );\r\n  }\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Paper elevation={5} className={classes.paper}>\r\n          <Typography variant=\"h4\" color=\"primary\" align=\"center\">\r\n           {auth.setting.role == \"Candidate\" ? \"No interview has been created by this User\": \"No Interviews found. Maybe create one?\" } \r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TabContext value={value}>\r\n      <AppBar position=\"static\">\r\n   \r\n        <Tab\r\n          label=\"Created Interviews\"\r\n          value=\"1\"\r\n          className={classes.TabStyle}\r\n          selected={true}\r\n          disableRipple={false}\r\n        />\r\n       \r\n      </AppBar>\r\n      {props.items.map((interview) => (\r\n        <InterviewItems\r\n          key={interview.id}\r\n          id={interview.id}\r\n          title={interview.title}\r\n          description={interview.description}\r\n          date={interview.date}\r\n          isCancelled={interview.isCancelled}\r\n          field={interview.field}\r\n          candidates={interview.candidates}\r\n          sendRequests={interview.sendRequests}\r\n          receiveRequests={interview.receiveRequests}\r\n          status={\r\n            interview.isCancelled\r\n              ? \"CANCELLED\"\r\n              : new Date(interview.date) > CurrentDate\r\n              ? \"PENDING\"\r\n              : \"TAKEN\"\r\n          }\r\n          creatorId={interview.creator}\r\n          role={props.role}\r\n          hasAccess={props.hasAccess}\r\n          setInterviews = {props.setInterviews}\r\n          // receivedRequests = {props.receivedRequests}\r\n          //   users = {loadedCandidates.map(candidate => candidate.resume)}\r\n          //    onDelete = {props.onDeleteInterview}\r\n        />\r\n      ))}\r\n\r\n    \r\n    </TabContext>\r\n  );\r\n};\r\n\r\nexport default InterviewList;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Right.js",["755","756"],"import React, { useContext } from \"react\";\r\nimport Paper from \"./Paper/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green, pink } from \"@material-ui/core/colors\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport { ResumeContext } from \"../../Contexts/ResumeContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n      margin: \"35px\",\r\n \r\n  },\r\n  pink: {\r\n    color:\"#fffff\",\r\n    backgroundColor: \"#004777\",\r\n    margin: 10,\r\n  },\r\n  green: {\r\n    color: \"#fffff\",\r\n    backgroundColor: \"#004777\",\r\n    margin: 10,\r\n  },\r\n}));\r\n\r\nfunction Right() {\r\n  const { setContent } = useContext(ResumeContext);\r\n  const classes = useStyles();\r\n  const handleDeleteDate = (event) => {\r\n    event.preventDefault();\r\n    localStorage.clear();\r\n    setContent({\r\n      header: {},\r\n      professional: { desc1: [\"\", \"\", \"\"], desc2: [\"\", \"\", \"\"] },\r\n      education: {},\r\n      additional: [],\r\n    });\r\n  };\r\n  const handleSaveToPDF = (event) => {\r\n    // event.preventDefault();\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <div className=\"right\">\r\n      <div className={classes.root}>\r\n        <Link href=\"#\" onClick={handleDeleteDate}>\r\n          <Tooltip title=\"Delete All Data\" placement=\"right\">\r\n            <Avatar className={classes.pink}>\r\n              <ClearIcon />\r\n            </Avatar>\r\n          </Tooltip>\r\n        </Link>\r\n        <Link href=\"#\" onClick={handleSaveToPDF}>\r\n          <Tooltip title=\"Save to PDF\" placement=\"right\">\r\n            <Avatar className={classes.green}>\r\n              <PictureAsPdfIcon />\r\n            </Avatar>\r\n          </Tooltip>\r\n        </Link>\r\n        <Link href=\"#\" >\r\n          <Tooltip title=\"Delete Resume\" placement=\"right\">\r\n            <Avatar className={classes.green}>\r\n              <DeleteIcon />\r\n            </Avatar>\r\n          </Tooltip>\r\n        </Link>\r\n        <Link href=\"#\" >\r\n          <Tooltip title=\"Save Resume\" placement=\"right\">\r\n            <Avatar className={classes.green}>\r\n              <SaveIcon />\r\n            </Avatar>\r\n          </Tooltip>\r\n        </Link>\r\n      </div>\r\n      <Paper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Right;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\UpdateInterview.js",["757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport DatePicker from \"../../shared/components/UIElements/FormElements/DatePicker\";\r\nimport TimePicker from \"../../shared/components/UIElements/FormElements/TimePicker\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { BiSave } from \"react-icons/bi\";\r\nimport { FiCheckSquare } from \"react-icons/fi\";\r\nimport { SiCheckmarx } from \"react-icons/si\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  BsBoxArrowInUpLeft,\r\n  BsPersonCheckFill,\r\n  BsPersonPlusFill,\r\n} from \"react-icons/bs\";\r\nimport { GrUserExpert } from \"react-icons/gr\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n\r\n    marginTop: 10,\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    fontSize: \"1rem\",\r\n    color: \"#fff\",\r\n    // textAlign: \"center\",\r\n    height: \"35px\",\r\n    // marginTop: \"12px \",\r\n    padding: \"5px\",\r\n    // alignContent: \"center\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    borderRadius: 4,\r\n  //  margin: \"0px 80px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      float: \"right\"\r\n    },\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst fields = [\r\n  \"Computer Science\",\r\n  \"Electrical Engineering\",\r\n  \"Material Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"MBBS\",\r\n  \"BDS\",\r\n  \"Software Engineering\",\r\n];\r\n\r\nconst validationSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .min(5, \"Title must be atleast 5 characters long\")\r\n    .required(\"Title is required\"),\r\n  description: yup\r\n    .string()\r\n    .min(15, \"Description must be atleast 15 characters long\")\r\n    .required(\"Description is required\"),\r\n});\r\n\r\nconst UpdateInterview = (props) => {\r\n  const interviewId = props.interId;\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [field, setField] = useState(props.loadedField.title);\r\n  const [doi, setDoi] = useState(props.loadedInterview.date);\r\n  const [time, setTime] = useState(props.loadedInterview.time);\r\n  const [success, setSuccess] = useState(false);\r\n  const [interview, setInterview] = useState();\r\n\r\n  function onCandidateSentRequest(arr1, arr2) {\r\n    return arr1.some((item) => arr2 == item._id);\r\n  }\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 200 || status == 201);\r\n  }, [status]);\r\n\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const CurrentDate = new Date(\r\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()\r\n  );\r\n\r\n  const initialValues = {\r\n    title: props.loadedInterview.title,\r\n    description: props.loadedInterview.description,\r\n  };\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/interviews/${interviewId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: values.title,\r\n          description: values.description,\r\n          fieldTitle: field,\r\n          date: doi,\r\n          time: time,\r\n          isCancelled: false,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      status == 200 && props.setDisableField(true)\r\n        ? setSuccess(true)\r\n        : setSuccess(false);\r\n      status == 200 ? setSuccess(true) : setSuccess(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const sendInterviewRequestHandler = () => {\r\n    const sendInterviewRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/sendinterrequest/${props.interId}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: auth.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setInterview(responseData.interview);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    sendInterviewRequest();\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner open={isLoading} />}\r\n\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"200\" || status == \"201\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"200\" || status == \"201\" ? \"success\" : \"error\"}\r\n          onClose={\r\n            status == \"200\" || status == \"201\" ? clearSuccess : clearError\r\n          }\r\n        >\r\n          {status == \"200\"\r\n            ? \"Interview Updated Successfully!\"\r\n            : status == \"201\"\r\n            ? \"Request has been sent to the Interview\"\r\n            : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container>\r\n              <Grid item={true} xs={12} sm={12}>\r\n                <Grid item={true} xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    disabled={props.disableField}\r\n                    helperText={\r\n                      <ErrorMessage\r\n                        name=\"title\"\r\n                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    id=\"description\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    disabled={props.disableField}\r\n                    label=\"Description\"\r\n                    helperText={\r\n                      <ErrorMessage\r\n                        name=\"description\"\r\n                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item={true}\r\n                  xs={12}\r\n                  className={classes.InterviewFields}\r\n                >\r\n                  <Grid item={true} xs={12} sm={4}>\r\n                    <FormControl style={{ paddingLeft: \"10px\" }}>\r\n                      <SelectBox\r\n                        value={field}\r\n                        setValue={setField}\r\n                        title={\"Select Field \"}\r\n                        data={fields}\r\n                        fullWidth\r\n                        disabled={props.disableField}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item={true} xs={5} sm={3} className={classes.GridStyle}>\r\n                    <FormControl>\r\n                      <DatePicker\r\n                        date={doi}\r\n                        setDate={setDoi}\r\n                        label=\"Set Interview Date\"\r\n                        disabled={props.disableField}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item={true} xs={5} sm={3}>\r\n                    <TimePicker\r\n                      time={time}\r\n                      setTime={setTime}\r\n                      disabled={props.disableField}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item={true} xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    name=\"status\"\r\n                    value={\r\n                      props.loadedInterview.isCancelled\r\n                        ? \"CANCELLED\"\r\n                        : new Date(props.loadedInterview.date) > CurrentDate\r\n                        ? \"PENDING\"\r\n                        : \"TAKEN\"\r\n                    }\r\n                    disabled\r\n                    size=\"small\"\r\n                    label=\"Status\"\r\n                    id=\"status\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Grid item xs={6}></Grid> */}\r\n            </Grid>\r\n\r\n            <Grid className={classes.submit}>\r\n              {!props.disableField && props.hasEditAccess && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  disabled={\r\n                    !(fProps.isValid || !field || !doi || fProps.isSubmitting)\r\n                  }\r\n                  startIcon={<BiSave style={{ marginLeft: 6 }} />}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              )}\r\n\r\n              {auth.setting.role == \"Candidate\" && (\r\n                    onCandidateSentRequest(\r\n                      props.userAddedInterviews,\r\n                      props.interId\r\n                    ) ? (\r\n                      <div className={classes.Typo}>\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          className={classes.statusStyle}\r\n                        >\r\n                          <BsPersonCheckFill className={classes.statusIconStyle} />\r\n                          You are already ADDED to this Interview\r\n                        </Typography>\r\n                      </div>\r\n                    ) : status == \"201\" ||\r\n                      onCandidateSentRequest(\r\n                        props.userSentRequests,\r\n                        props.interId\r\n                      ) ? (\r\n                      // !onCandidateSentRequest(props.userAddedInterviews, props.interId)  ? (\r\n                      <div className={classes.Typo}>\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          className={classes.statusStyle}\r\n                        >\r\n                          <FiCheckSquare className={classes.statusIconStyle} />\r\n                          You have SENT request on this Interview\r\n                        </Typography>\r\n                      </div>\r\n                    ) : !onCandidateSentRequest(\r\n                        props.userReceivedRequests,\r\n                        props.interId\r\n                      ) &&\r\n                      props.InterviewStatus == \"PENDING\" &&\r\n                      auth.setting.role == \"Candidate\" &&\r\n                      !props.hasEditAccess ? (\r\n                      <Button\r\n                        onClick={sendInterviewRequestHandler}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        startIcon={<BsBoxArrowInUpLeft style={{ marginLeft: 6 }} />}\r\n                      >\r\n                        Send Request\r\n                      </Button>\r\n                    ) : (\r\n                      <div className={classes.Typo}>\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          className={classes.statusStyle}\r\n                        >\r\n                          <BsPersonPlusFill className={classes.statusIconStyle} />\r\n                          You are already INVITED to this Interview\r\n                        </Typography>\r\n                      </div>\r\n                    )\r\n              )}\r\n          \r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default UpdateInterview;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqCollection.js",["778","779","780","781"],"import React, { useState, useEffect } from \"react\";\r\nimport FaqList from \"./FaqList\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\nconst FaqCollection = () => {\r\n  const [faqs, setFaqs] = useState();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          'http://localhost:5000/api/faqs/'\r\n        );\r\n        setFaqs(responseData.faqs);\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    if (!faqs)\r\n      getData();\r\n\r\n  }, [faqs])\r\n\r\n  return (\r\n  <React.Fragment>\r\n    <LoadingSpinner open={isLoading} />\r\n    {faqs && (<FaqList items={faqs} />)}\r\n  </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default FaqCollection;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\User.js",["782","783","784","785"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst Users = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n const [myResume, setMyResume] = useState(auth.resume);\r\n const [setting, setSetting] = useState(\"\");\r\n useEffect(()=>{\r\n  const BlockUser = async () => {\r\n    console.log(auth.setting._id)\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/settings/\" + auth.setting._id,\r\n        'GET',\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setSetting(responseData.setting);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  BlockUser();\r\n},[])\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <UserItem\r\n          resume={ props.userResume.user ? props.userResume : myResume }\r\n          approvedCertCount={props.approvedCertCount}\r\n          userInter={props.userInterviews}\r\n          userSett = {props.userSetting}\r\n          otherUser = {props.otherUser}\r\n          setMyResume = {setMyResume}\r\n          setting = {setting}\r\n        />\r\n      ) : (\r\n        <LoadingSpinner open={isLoading} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\SignupForm.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\AuthForm.js",["786","787","788"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2),\r\n    },\r\n}));\r\n\r\nconst AuthForm = props => {\r\n    const setRememberme=props.setRememberme;\r\n    const rememberme=props.rememberme;\r\n    const error = props.error;\r\n    const status = props.status;\r\n    const classes = useStyles();\r\n    const validationSchema = yup.object().shape({\r\n        username: yup.string()\r\n            .email(\"Please enter valid email\")\r\n            .required(\"Email is required\"),\r\n        password: yup.string()\r\n            .min(6, \"Password must be atleast 6 characters long\")\r\n            .required(\"Password is required\"),\r\n    });\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Formik\r\n                initialValues={props.initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={props.onSubmitHandler}\r\n            >\r\n\r\n                {(props) => (\r\n                    <Form>\r\n                        <Field\r\n                            as={TextField}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            size=\"medium\"\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"username\"\r\n                            autoComplete=\"email\"\r\n                            helperText={\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Field\r\n                            as={TextField}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            size=\"medium\"\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            helperText={\r\n                                <ErrorMessage\r\n                                    name=\"password\"\r\n                                    style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                />\r\n                            }\r\n                        />\r\n                        <Field\r\n                            as={FormControlLabel}\r\n                            name=\"remember\"\r\n                            control={<Checkbox value=\"remember\" color=\"secondary\" checked={!!rememberme} onChange={() => { setRememberme(!rememberme) }} />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        {status === 401 ? (\r\n                            <Typography className=\"MuiFormHelperText-root\" align=\"center\" variant=\"body1\">{error}</Typography>\r\n                        ) : \" \"}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!(props.isValid || props.isSubmitting)}\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\CertificateMenu.js",["789","790","791","792","793"],"import React, { useState, useContext , useEffect} from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { MenuItem, Divider } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport DeleteCertificate from \"./DeleteCertificate\";\r\n\r\nconst CertificateMenu = (props) => {\r\n  const [OpenDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const OpenDeleteDialogHandler = () => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n\r\n\r\n    const fetchCertificates = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/certificates/user/\" + auth.userId,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        props.setLoadedCertificates(responseData.certificate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n \r\n  return (\r\n    <>\r\n    {props.hasDeleteAccess && (\r\n      <>\r\n        <MenuItem\r\n        onClick={props.closeCertificateMenu}\r\n        component={Link}\r\n        to={`/certificates/edit/${props.certId}`}\r\n        style={{ height: 40 }}\r\n      >\r\n        <IconButton color=\"primary\">\r\n          <TiEdit />\r\n        </IconButton>\r\n        <Typography variant=\"subtitle1\">Edit Details</Typography>\r\n      </MenuItem>\r\n\r\n      <Divider variant=\"middle\" />\r\n\r\n      <MenuItem onClick={OpenDeleteDialogHandler} style={{ height: 40 }}>\r\n        <IconButton color=\"primary\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n\r\n        <Typography variant=\"subtitle1\">Remove Certificate</Typography>\r\n      </MenuItem>\r\n      </>\r\n    )}\r\n    \r\n      {OpenDeleteDialog && (\r\n        <DeleteCertificate\r\n          OpenDeleteDialog={OpenDeleteDialog}\r\n          setOpenDeleteDialog={setOpenDeleteDialog}\r\n          certId={props.certId}\r\n          fetchCertificates = {fetchCertificates}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CertificateMenu;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Basic.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Contexts\\fake_data.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\DatePicker.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\shared\\components\\UIElements\\FormElements\\TimePicker.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Interviews\\components\\MyInterviewCandidate.js",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { Link , useLocation} from \"react-router-dom\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport { FaRegCheckCircle, FaRegClock } from \"react-icons/fa\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport theme from \"../../shared/components/UIElements/AppTheme/theme\";\r\nimport { MdEventAvailable, MdEventBusy } from \"react-icons/md\";\r\nimport { VscVmActive } from \"react-icons/vsc\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    padding: \"10px 17px\",\r\n    marginTop: \"15px\",\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginLeft: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    // [theme.breakpoints.down(\"sm\")]: {\r\n    //   display: \"none\",\r\n    // },\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  noRequests: {\r\n    width: \"100%\",\r\n    padding: \"10px 17px\",\r\n    color: \"#004777\",\r\n  },\r\n  statusStyle: {\r\n    background: \"#4E78A0\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginLeft: \"12px \",\r\n    paddingTop: \"5px\",\r\n    alignContent: \"center\",\r\n    width: \"140px\",\r\n    borderRadius: 4,\r\n    float: \"right\",\r\n  },\r\n  statusIconStyle: {\r\n    marginRight: \"7px\",\r\n    transform: \"translate(1px, 3px)\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst InterviewItems = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  let location = useLocation();\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const classes = useStyles();\r\n  const[responseStatus, setResponseStatus] = useState();\r\n\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 201 || status == 200);\r\n  }, [status]);\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const today = new Date();\r\n\r\n  const date =\r\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n  const CurrentDate = new Date(date);\r\n\r\n  const CancelInterviewRequestHandler = () => {\r\n    const cancelInterviewRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/cancelinterreq/${props.InterID}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: auth.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        props.getCandidateRequestsData();\r\n        \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    cancelInterviewRequest();\r\n  };\r\n\r\n  const AcceptReceiveRequestHandler = () => {\r\n    const AcceptReceiveRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/addcandidate/${props.InterID}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: auth.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResponseStatus(responseData.responseDone);\r\n        props.getCandidateRequestsData();\r\n      \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    AcceptReceiveRequest();\r\n  };\r\n\r\n  const RejectReceiveRequestHandler = () => {\r\n    const RejectReceiveRequest = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/interviews/rejectcandidate/${props.InterID}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            uid: auth.userId,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResponseStatus(responseData.responseDone);\r\n        props.getCandidateRequestsData();\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    RejectReceiveRequest();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner open={isLoading} />}\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"201\" || status == \"200\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"201\" || status == \"200\" ? \"success\" : \"error\"}\r\n          onClose={\r\n            status == \"201\" || status == \"200\" ? clearSuccess : clearError\r\n          }\r\n        >\r\n          {error ? error:\r\n          status == \"201\"\r\n            ? \"Request has been cancelled successfully!\"\r\n            : status == \"200\" && responseStatus == \"accepted\"\r\n            ? \"You are added to the scheduled interview successfully!\" :\r\n               \"You have rejected this Interview request!\" }\r\n           \r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n \r\n{/* {console.log(\"HEELO: \"+(props.InterStatus == \"CANCELLED\" || props.InterStatus == \"TAKEN\") && (props.userReceivedRequests || props.userSentRequests))} */}\r\n{/* {(props.userSentRequests || props.userReceivedRequests ) && props.InterStatus == \"PENDING\" ||() ( */}\r\n  <Card className={classes.card}>\r\n  <Grid container spacing={5}>\r\n    <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n      <div className={classes.header}>\r\n        <Typography variant=\"h5\" align=\"justify\">\r\n          {props.InterTitle}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" style={{ color: grey[900] }}>\r\n          {props.InterDate}\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  \r\n    <Grid item sm={6} lg={5}>\r\n      {props.tabValue == \"3\" && (\r\n        <Typography variant=\"subtitle2\" className={classes.statusStyle}>\r\n          {(props.InterStatus === \"PENDING\" && (\r\n            <FaRegClock className={classes.statusIconStyle} />\r\n          )) ||\r\n            (props.InterStatus === \"TAKEN\" && (\r\n              <FaRegCheckCircle className={classes.statusIconStyle} />\r\n            )) ||\r\n            (props.InterStatus === \"CANCELLED\" && (\r\n              <BlockIcon className={classes.statusIconStyle} />\r\n            ))}\r\n          {props.InterStatus}\r\n        </Typography>\r\n      )}\r\n  \r\n  {/* {console.log(\"Status: \"+props.InterStatus)} */}\r\n      {props.tabValue == \"1\" && status != \"201\" && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          className={classes.ViewButton}\r\n          onClick={CancelInterviewRequestHandler}\r\n          startIcon={<BlockIcon style={{ marginLeft: 6 }} />}\r\n        >\r\n          Cancel Request\r\n        </Button>\r\n      )}\r\n      {props.tabValue == \"2\" && (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.ViewButton}\r\n            onClick={RejectReceiveRequestHandler}\r\n            startIcon={\r\n              <MdEventBusy\r\n                style={{ marginLeft: 5, fontSize: \"1.3rem\" }}\r\n              />\r\n            }\r\n          >\r\n            Reject\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.ViewButton}\r\n            onClick={AcceptReceiveRequestHandler}\r\n            startIcon={\r\n              <MdEventAvailable\r\n                style={{ marginLeft: 5, fontSize: \"1.3rem\" }}\r\n              />\r\n            }\r\n          >\r\n            Accept\r\n          </Button>\r\n        </>\r\n      )}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.ViewButton}\r\n        startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n        component={Link}\r\n        to={`/interviews/view/${props.InterID}`}\r\n      >\r\n        View Details\r\n      </Button>\r\n    </Grid>\r\n  </Grid>\r\n  </Card>\r\n  \r\n{/* )} */}\r\n\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default InterviewItems;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\Paper.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqList.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\RadioButtons.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserItem.js",["818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833"],"E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\DeleteCertificate.js",["834","835","836","837","838"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DeleteCertificate = (props) => {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n    // props.setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n\r\n  const CloseDeleteDialogHandler = () => {\r\n    props.setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const CertificateDeleteHandler = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `http://localhost:5000/api/certificates/${props.certId}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.fetchCertificates();\r\n      props.setOpenDeleteDialog(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner open={isLoading} />}\r\n\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"200\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"200\" ? \"success\" : \"error\"}\r\n          onClose={status == \"200\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"200\" ? \"Certificate Deleted Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Dialog\r\n        onClose={CloseDeleteDialogHandler}\r\n        open={props.OpenDeleteDialog}\r\n        fullWidth\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle\r\n          onClose={CloseDeleteDialogHandler}\r\n          className={classes.dialogTitle}\r\n        >\r\n          Remove Certificate Confirmation\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            Are you sure you want to remove this Certificate? You can no longer\r\n            see this certificate in your profile!\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={CloseDeleteDialogHandler}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n\r\n          <LoadingSpinner open={isLoading} />\r\n\r\n          <Button\r\n            onClick={CertificateDeleteHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteCertificate;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Header.js",["839","840","841"],"\r\nimport React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport classes from \"./Left.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ResumeContext } from \"../../Contexts/ResumeContext\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Education from \"./Education\";\r\n\r\nexport default function Header() {\r\n  const { content, updateHeaderData, removeFakeData } = useContext(\r\n    ResumeContext\r\n  );\r\n\r\n  const { register, handleSubmit} = useForm();\r\n  const onSubmit = (data) => {\r\n    removeFakeData();\r\n    updateHeaderData(data);\r\n  };\r\n\r\n  return (\r\n<>\r\n     <h2>Header</h2>   \r\n      <form\r\n        className={classes.formStyle}\r\n        autoComplete=\"off\"\r\n        noValidate\r\n       // onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"FirstName\"\r\n          name=\"firstname\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.firstname}\r\n          inputRef={register}\r\n          onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n      \r\n         <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"LastName\"\r\n          name=\"lastname\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.lastname}\r\n          inputRef={register}\r\n           onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n       <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"E-mail\"\r\n          name=\"email\"\r\n          required\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.email}\r\n          inputRef={register}\r\n           onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n<TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          required\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.phone}\r\n          inputRef={register}\r\n           onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.address}\r\n          inputRef={register}\r\n          onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"City\"\r\n          name=\"city\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.city}\r\n          inputRef={register}\r\n          onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Country\"\r\n          name=\"country\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={content.header.country}\r\n          inputRef={register}\r\n          onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n        {/* <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          style={{ margin: 8 }}\r\n        //  onClick={onclickhandler}\r\n        >\r\n          Update\r\n        </Button> */}\r\n      </form>\r\n      \r\n   </>\r\n  );\r\n}\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Education.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\AdditionalSkills.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Left\\Professional.js",["842"],"import React, { useState, useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport classes from \"./Left.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ResumeContext } from \"../../Contexts/ResumeContext\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nfunction Professional() {\r\n  const { content, updateProfessionalData, removeFakeData } = useContext(\r\n    ResumeContext\r\n  );\r\n  const [btnText, setBtnText] = useState(\"Add\");\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = (data) => {\r\n    removeFakeData();\r\n    updateProfessionalData(data);\r\n    setBtnText(\"Update\");\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Professional Experience</h2>\r\n      <form\r\n        className={classes.formStyle}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <h4>Company </h4>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Company\"\r\n          name=\"company\"\r\n          variant=\"outlined\"\r\n          defaultValue={content.professional.company}\r\n          inputRef={register}\r\n          // onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Position\"\r\n          name=\"position\"\r\n          variant=\"outlined\"\r\n          defaultValue={content.professional.position}\r\n          inputRef={register}\r\n          // onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Start MM/YYYY\"\r\n          name=\"start\"\r\n          variant=\"outlined\"\r\n          defaultValue={content.professional.start}\r\n          inputRef={register}\r\n          // onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"End MM/YYYY\"\r\n          name=\"end\"\r\n          variant=\"outlined\"\r\n          defaultValue={content.professional.end}\r\n          inputRef={register}\r\n          // onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Description\"\r\n          name=\"desc\"\r\n          multiline\r\n          variant=\"outlined\"\r\n          defaultValue={content.professional.desc}\r\n          inputRef={register}\r\n          // onChange={handleSubmit(onSubmit)}\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          style={{ marginTop: 12, marginLeft: 8, marginRight: 8 }}\r\n        >\r\n          {btnText}\r\n        </Button>\r\n      </form>\r\n</>\r\n  );\r\n}\r\n\r\nexport default Professional;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\EducationP.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\HeaderP.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\ProfessionalP.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\Resumes\\Components\\Right\\Paper\\AdditionalSkillsP.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\faq\\components\\FaqListItems.js",["843"],"import React, {useState} from 'react';\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    \r\n      accor: {\r\n        padding: \"20px 40px\",\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        color: \"#004777\",\r\n      },\r\n\r\n    }));\r\nconst FaqListItems = (props) =>{\r\n    const classes = useStyles();\r\nreturn (\r\n\r\n    <Accordion className={classes.accor} >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon/>}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography className={classes.heading} align = \"justify\">\r\n       {props.question}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>   \r\n        <Typography  align = \"justify\">\r\n       {props.answer}\r\n          \r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n\r\n\r\n);\r\n}\r\n\r\nexport default FaqListItems;","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UploadPhoto.js",["844","845","846","847"],"import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    Typography: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    content: {\r\n        textAlign: \"center\"\r\n    },\r\n    preview: {\r\n\r\n        alignContent: \"center\",\r\n        width: \"60%\",\r\n        height: \"60%\"\r\n    }\r\n}));\r\n\r\nconst UploadPhoto = (props) => {\r\n    const [file, setFile] = useState(null);\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n        }\r\n    };\r\n\r\n    const uploadPhoto = async () => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('userId', auth.userId);\r\n            formData.append('image', file);\r\n            const responseData = await sendRequest(\r\n                'http://localhost:5000/api/users/uploadImage',\r\n                'POST',\r\n                formData,\r\n                {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n            if (responseData) {\r\n\r\n                const storedData = JSON.parse(localStorage.getItem('userData'));\r\n                storedData.resume.image = responseData.image;\r\n                auth.resume.image=responseData.image;\r\n                localStorage.setItem('userData', JSON.stringify(storedData));\r\n                props.handleCloseDialog();\r\n            }\r\n        } catch (err) {\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Dialog open={props.open} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle disableTypography>\r\n                    <Typography variant=\"h4\" align=\"center\">\r\n                        Upload Photo\r\n          </Typography>\r\n\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <label htmlFor=\"upload-photo\">\r\n                            <input\r\n                                style={{ display: \"none\" }}\r\n                                id=\"upload-photo\"\r\n                                name=\"upload-photo\"\r\n                                type=\"file\"\r\n                                accept=\".jpg,.png,.jpeg\"\r\n                                onChange={pickedHandler}\r\n\r\n                            />\r\n                            <Fab color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                <AddIcon /> Choose photo\r\n                            </Fab>\r\n                        </label>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div className={classes.content}>\r\n                        <img className={classes.preview} src={previewUrl} />\r\n                        <br />\r\n                        {file && (<Fab color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\" onClick={uploadPhoto}>Upload</Fab>)}\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions >\r\n                    <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n                        CANCEL\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UploadPhoto;","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\pages\\Home.js",["848","849","850","851"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SearchCandidates from \"../../Interviews/components/SearchCandidates\";\r\nimport { Card, Toolbar, Typography } from \"@material-ui/core\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport UserSearchedResumes from \"../components/UserSearchedResumes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bgCard: {\r\n    marginTop: \"50px\",\r\n    width: \"60%\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"20%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"80%\",\r\n      marginLeft: \"10%\",\r\n    },\r\n  },\r\n  searchBar: {\r\n    width: \"100%\",\r\n  },\r\n  searchedItems: {\r\n    backgroundColor: \"white\",\r\n    padding: 10\r\n\r\n  },\r\n  list: {\r\n    padding: 0,\r\n  },\r\n  responsive: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n  listItem: {\r\n    padding: \"4px 8px\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [resume, setResume] = useState([]);\r\n  const [closeIcon, setCloseIcon] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setResume(\"\");\r\n    setCloseIcon(false);\r\n  }, [searchItem]);\r\n\r\n  const handleCloseDialog = () => {\r\n    props.setOpen(false);\r\n    setSearchItem(\"\");\r\n    setCloseIcon(false);\r\n  };\r\n\r\n  const getSearchItem = () => {\r\n    setCloseIcon(!closeIcon);\r\n    const fetchSearchedResumes = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/resumes/resume/${searchItem}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setResume(responseData.resumes);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchSearchedResumes();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Toolbar />\r\n      <LoadingSpinner open={isLoading} />\r\n      <Card className={classes.bgCard}>\r\n        <SearchCandidates\r\n          className={classes.searchBar}\r\n          setSearchItem={setSearchItem}\r\n          searchItem={searchItem}\r\n          getSearchItem={getSearchItem}\r\n          closeIcon={closeIcon}\r\n          setCloseIcon={setCloseIcon}\r\n        />\r\n        {closeIcon && (\r\n            <Card className={classes.searchedItems}>\r\n            { resume.length === 0  ? \r\n             <Typography variant=\"h6\">{isLoading ? \"Searching User...\" : \"No user found\"}</Typography> \r\n            :\r\n            resume.map((resume) => (\r\n              <UserSearchedResumes\r\n                key={resume._id}\r\n                id={resume._id}\r\n                name={resume.firstname + \" \" + resume.lastname}\r\n                userId={resume.user}\r\n              />\r\n            ))}\r\n          </Card>\r\n        ) }\r\n      \r\n      </Card>\r\n\r\n      <CssBaseline />\r\n    </Container>\r\n  );\r\n}\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\UserSearchedResumes.js",["852","853","854"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    padding: 0,\r\n  },\r\n  responsive: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n  listItem: {\r\n    padding: \"4px 8px\",\r\n  },\r\n}));\r\n\r\nexport default function UserSearchedResumes(props) {\r\nconst auth = useContext(AuthContext);\r\n    const classes = useStyles();\r\nreturn(\r\nprops.userId != auth.userId && (\r\n  <List className={classes.list}>\r\n  <Grid container>\r\n    <Grid item xs={12} className={classes.responsive}>\r\n      <ListItem\r\n        className={classes.listItem}\r\n        button\r\n        component={Link}\r\n         to={`/profile/${props.userId}`}\r\n      >\r\n        <ListItemAvatar>\r\n          <Avatar\r\n            src={props.image}\r\n            style={{\r\n              height: \"50px\",\r\n              width: \"50px\",\r\n              marginRight: 10,\r\n            }}\r\n          />\r\n        </ListItemAvatar>\r\n        <ListItemText> {props.name} </ListItemText>\r\n      </ListItem>\r\n    </Grid>\r\n  </Grid>\r\n</List>\r\n)\r\n \r\n);\r\n}\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\Admin\\Components\\Faqs\\ViewFaqs.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\certificates\\components\\uploadCertificate.js",[],"E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\EditProfile.js",["855"],"import React, { Fragment, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\nimport EditProfileForm from \"./EditProfileForm\";\r\nimport * as yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst EditProfile = (props) => {\r\n      const avatarStyle = {\r\n        backgroundColor: \"primary\",\r\n      };\r\n      const classes = useStyles();\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const initialValues = {\r\n    firstName: auth.resume.firstname,\r\n    lastName: auth.resume.lastname,\r\n    dob: auth.resume.dob,\r\n    contact: auth.resume.phone,\r\n    email: auth.resume.email,\r\n    city: auth.resume.city,\r\n    country: auth.resume.country,\r\n    address: auth.resume.address,\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n    firstName: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n      .min(3, \"First Name must be atleast 3 characters\"),\r\n  \r\n    lastName: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n      .min(3, \"Last Name must be atleast 3 characters\"),\r\n    email: yup.string()\r\n      .required(\"This field is required\")\r\n      .email(\"Please enter valid username\"),\r\n\r\n    address: yup\r\n      .string()\r\n      .required(\"This field is required\"),\r\n\r\n    city: yup.string().required(\"This field is required\"), \r\n\r\n    contact: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .matches(\r\n        /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/,\r\n        \"Please enter valid Contact number\"\r\n      )\r\n      .length(11),\r\n  });\r\n\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.openEdit} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle disableTypography>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n           Edit Profile\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <FaUserEdit style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div className={classes.demo}>\r\n            <EditProfileForm \r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              setMyResume = {props.setMyResume}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={props.CloseEditDialogComp} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\user\\components\\EditProfileForm.js",["856","857","858","859","860"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SelectBox from \"../../shared/components/UIElements/FormElements/SelectBox\";\r\nimport DatePicker from \"../../shared/components/UIElements/FormElements/DatePicker\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst EditProfileForm = (props) => {\r\n  const countries = [\r\n    \"Afghanistan\",\r\n    \"Åland Islands\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"American Samoa\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Brazil\",\r\n    \"British Indian Ocean Territory\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burma\",\r\n    \"Burundi\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Cape Verde\",\r\n    \"Cayman Islands\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Christmas Island\",\r\n    \"Cocos (Keeling) Islands\",\r\n    \"Colombia\",\r\n    \"Comoros\",\r\n    \"Congo-Brazzaville\",\r\n    \"Congo-Kinshasa\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"$_[\",\r\n    \"Croatia\",\r\n    \"Curaçao\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"El Salvador\",\r\n    \"Egypt\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Ethiopia\",\r\n    \"Falkland Islands\",\r\n    \"Faroe Islands\",\r\n    \"Federated States of Micronesia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"French Southern Lands\",\r\n    \"Gabon\",\r\n    \"Gambia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Gibraltar\",\r\n    \"Greece\",\r\n    \"Greenland\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guam\",\r\n    \"Guatemala\",\r\n    \"Guernsey\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Heard and McDonald Islands\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Isle of Man\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jersey\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Laos\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Macedonia\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Malaysia\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mayotte\",\r\n    \"Mexico\",\r\n    \"Moldova\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger\",\r\n    \"Nigeria\",\r\n    \"Niue\",\r\n    \"Norfolk Island\",\r\n    \"Northern Mariana Islands\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Pitcairn Islands\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Réunion\",\r\n    \"Romania\",\r\n    \"Russia\",\r\n    \"Rwanda\",\r\n    \"Saint Barthélemy\",\r\n    \"Saint Helena\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Martin\",\r\n    \"Saint Pierre and Miquelon\",\r\n    \"Saint Vincent\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"São Tomé and Príncipe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Singapore\",\r\n    \"Sint Maarten\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Georgia\",\r\n    \"South Korea\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan\",\r\n    \"Suriname\",\r\n    \"Svalbard and Jan Mayen\",\r\n    \"Sweden\",\r\n    \"Swaziland\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Tanzania\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tokelau\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates\",\r\n    \"United Kingdom\",\r\n    \"United States\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Vatican City\",\r\n    \"Vietnam\",\r\n    \"Venezuela\",\r\n    \"Wallis and Futuna\",\r\n    \"Western Sahara\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\",\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(0, 0, 2),\r\n    },\r\n  }));\r\n\r\n  const { isLoading, error, status, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [country, setCountry] = useState(auth.resume.country);\r\n  const [dob, setdob] = useState(auth.resume.dob);\r\n  const classes = useStyles();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const clearSuccess = () => {\r\n    setSuccess(false);\r\n  };\r\n  useEffect(() => {\r\n    setSuccess(status == 200);\r\n  }, [status]);\r\n\r\n  const onSubmitHandler = async (values) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/resumes/${auth.resume._id}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          firstname: values.firstName,\r\n          lastname: values.lastName,\r\n          country: country,\r\n          dob: dob,\r\n          city: values.city,\r\n          email: values.email,\r\n          phone: values.contact,\r\n          address: values.address,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      console.log(responseData.resume);\r\n      if (responseData.resume) {\r\n        const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        storedData.resume = responseData.resume;\r\n        auth.resume = responseData.resume;\r\n        props.setMyResume(responseData.resume);\r\n\r\n        localStorage.setItem(\"userData\", JSON.stringify(storedData));\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner open={isLoading} />}\r\n      <Snackbar\r\n        open={success || !!error}\r\n        autoHideDuration={6000}\r\n        onClose={status == \"200\" ? clearSuccess : clearError}\r\n      >\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={status == \"200\" ? \"success\" : \"error\"}\r\n          onClose={status == \"200\" ? clearSuccess : clearError}\r\n        >\r\n          {status == \"200\" ? \"Profile Updated Successfully!\" : error}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <Formik\r\n        initialValues={props.initialValues}\r\n        onSubmit={onSubmitHandler}\r\n        validationSchema={props.validationSchema}\r\n      >\r\n        {(fProps) => (\r\n          <Form className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"firstName\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"lastName\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <SelectBox\r\n                  value={country}\r\n                  setValue={setCountry}\r\n                  title={\"Select country\"}\r\n                  data={countries}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <DatePicker\r\n                  date={dob}\r\n                  setDate={setdob}\r\n                  label=\"Date of Birth\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"contact\"\r\n                  label=\"Contact No\"\r\n                  id=\"contact\"\r\n                  autoComplete=\"contact\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"contact\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"city\"\r\n                  label=\"City\"\r\n                  id=\"city\"\r\n                  autoComplete=\"city\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"city\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  multiline\r\n                  id=\"Address\"\r\n                  label=\"Address\"\r\n                  name=\"address\"\r\n                  autoComplete=\"Address\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"address\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={\r\n                  !(\r\n                    fProps.isValid ||\r\n                    !props.country ||\r\n                    !props.dob ||\r\n                    fProps.isSubmitting\r\n                  )\r\n                }\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default EditProfileForm;\r\n","E:\\FYP\\Interview_Assistant\\frontend\\src\\RTC.js",["861","862","863"],"import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport { SocketContext } from \"./shared/context/socket-context\";\r\nimport ringtone from './Sounds/ringtone.mp3';\r\nimport { Howl } from 'howler';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ringtoneSound = new Howl({\r\n    src: [ringtone],\r\n    loop: true,\r\n    preload: true\r\n})\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst RTC = () => {\r\n    const [callerData, setCallerData] = useState({ name: '', image: '' });\r\n    const [receivingCall, setReceivingCall] = useState(false);\r\n    const [callerSignal, setCallerSignal] = useState();\r\n    const [callMessage, setCallMessage] = useState('is calling you..');\r\n\r\n    const socket = useContext(SocketContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!socket)\r\n            return;\r\n        socket.on(\"hey\", (data) => {\r\n            if(receivingCall){\r\n                socket.emit(\"busy\", { to: data.fromId })\r\n            }else{\r\n                setReceivingCall(true);\r\n                ringtoneSound.load();\r\n                ringtoneSound.play();\r\n                setCallerData({\r\n                    id: data.fromId,\r\n                    name: data.fromName,\r\n                    image: data.fromImage\r\n                });\r\n                setCallerSignal(data.signal);\r\n            }\r\n        })\r\n        socket.on(\"close\", (data) => {\r\n            setReceivingCall(false);\r\n            ringtoneSound.unload();\r\n            setCallerData({ name: '', image: '' });\r\n            setCallerSignal(null);\r\n        })\r\n\r\n        return () => {\r\n            socket.off(\"hey\");\r\n            socket.off(\"close\");\r\n        };\r\n    }, [socket]);\r\n\r\n\r\n    function acceptCall() {\r\n        ringtoneSound.unload();\r\n        setReceivingCall(false);\r\n        history.push({\r\n            pathname: '/videocall',\r\n            state: { from: true, caller: callerData.id, callerSignal }\r\n        });\r\n    }\r\n\r\n\r\n    function rejectCall() {\r\n        ringtoneSound.unload();\r\n        setReceivingCall(false);\r\n        socket.emit('rejected', { to: callerData.id })\r\n    }\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={receivingCall}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    Friend's Call\r\n                </DialogTitle>\r\n                <div style={{ display: 'flex', alignItems: 'center', alignContent: 'center', margin: '5%' }}>\r\n                    <Avatar src={'http://localhost:5000/' + callerData.image} style={{ height: \"20%\", width: \"20%\", margin: \"10px\" }}></Avatar>\r\n                    {callerData.name} {callMessage}\r\n                </div>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={rejectCall} style={{ color: 'red' }}>Reject Call</Button>\r\n                    <Button onClick={acceptCall} style={{ color: 'green' }}>Accept Call</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RTC;","E:\\FYP\\Interview_Assistant\\frontend\\src\\Video Call\\Emotions.js",["864"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '80%',\r\n        height: 15\r\n    },\r\n    emotions: {\r\n        maxWidth: '15rem',\r\n        maxHeight: '15rem',\r\n        height: '15rem',\r\n        width: '10rem',\r\n        position: 'absolute',\r\n        bottom: '50%',\r\n        right: 30,\r\n        zIndex: 3,\r\n        color: 'white',\r\n    },\r\n}));\r\nconst Emotions = () => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [buffer, setBuffer] = useState(10);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if (progress > 100) {\r\n                setProgress(0);\r\n                setBuffer(10);\r\n            } else {\r\n                const emotion = Math.random() * 100;\r\n                const diff2 = Math.random() * 10;\r\n                setBuffer(emotion +diff2);\r\n\r\n                setProgress(emotion);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div className={classes.emotions}>\r\n            <div >\r\n                Happy <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress}  valueBuffer={buffer} />\r\n            </div >\r\n            <div >\r\n                Sad <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress}  valueBuffer={buffer} />\r\n            </div >\r\n            <div >\r\n                Neutral <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n            </div >\r\n            <div >\r\n                Disgust <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress}  valueBuffer={buffer} />\r\n            </div >\r\n            <div >\r\n                Surprise <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n            </div >\r\n            <div >\r\n                Fear <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n            </div >\r\n            <div >\r\n                Angry <LinearProgress classes={{ root: classes.root, }} variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n            </div >\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Emotions;",{"ruleId":"865","replacedBy":"866"},{"ruleId":"867","replacedBy":"868"},{"ruleId":"869","severity":1,"message":"870","line":23,"column":8,"nodeType":"871","messageId":"872","endLine":23,"endColumn":22},{"ruleId":"869","severity":1,"message":"873","line":25,"column":8,"nodeType":"871","messageId":"872","endLine":25,"endColumn":22},{"ruleId":"869","severity":1,"message":"874","line":40,"column":9,"nodeType":"871","messageId":"872","endLine":40,"endColumn":13},{"ruleId":"875","severity":1,"message":"876","line":45,"column":33,"nodeType":"877","messageId":"878","endLine":45,"endColumn":35},{"ruleId":"875","severity":1,"message":"876","line":135,"column":30,"nodeType":"877","messageId":"878","endLine":135,"endColumn":32},{"ruleId":"875","severity":1,"message":"876","line":135,"column":68,"nodeType":"877","messageId":"878","endLine":135,"endColumn":70},{"ruleId":"875","severity":1,"message":"876","line":136,"column":31,"nodeType":"877","messageId":"878","endLine":136,"endColumn":33},{"ruleId":"875","severity":1,"message":"876","line":137,"column":31,"nodeType":"877","messageId":"878","endLine":137,"endColumn":33},{"ruleId":"875","severity":1,"message":"876","line":137,"column":92,"nodeType":"877","messageId":"878","endLine":137,"endColumn":94},{"ruleId":"869","severity":1,"message":"879","line":12,"column":8,"nodeType":"871","messageId":"872","endLine":12,"endColumn":17},{"ruleId":"869","severity":1,"message":"880","line":16,"column":8,"nodeType":"871","messageId":"872","endLine":16,"endColumn":19},{"ruleId":"869","severity":1,"message":"881","line":18,"column":8,"nodeType":"871","messageId":"872","endLine":18,"endColumn":25},{"ruleId":"869","severity":1,"message":"882","line":82,"column":11,"nodeType":"871","messageId":"872","endLine":82,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":82,"column":22,"nodeType":"871","messageId":"872","endLine":82,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":82,"column":29,"nodeType":"871","messageId":"872","endLine":82,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":82,"column":50,"nodeType":"871","messageId":"872","endLine":82,"endColumn":60},{"ruleId":"886","severity":1,"message":"887","line":103,"column":6,"nodeType":"888","endLine":103,"endColumn":14,"suggestions":"889"},{"ruleId":"886","severity":1,"message":"890","line":108,"column":6,"nodeType":"888","endLine":108,"endColumn":19,"suggestions":"891"},{"ruleId":"892","severity":1,"message":"893","line":334,"column":15,"nodeType":"894","messageId":"878","endLine":334,"endColumn":20},{"ruleId":"869","severity":1,"message":"895","line":55,"column":9,"nodeType":"871","messageId":"872","endLine":55,"endColumn":16},{"ruleId":"869","severity":1,"message":"884","line":57,"column":29,"nodeType":"871","messageId":"872","endLine":57,"endColumn":35},{"ruleId":"886","severity":1,"message":"896","line":67,"column":6,"nodeType":"888","endLine":67,"endColumn":8,"suggestions":"897"},{"ruleId":"875","severity":1,"message":"876","line":104,"column":13,"nodeType":"877","messageId":"878","endLine":104,"endColumn":15},{"ruleId":"875","severity":1,"message":"898","line":117,"column":15,"nodeType":"877","messageId":"878","endLine":117,"endColumn":17},{"ruleId":"869","severity":1,"message":"883","line":12,"column":21,"nodeType":"871","messageId":"872","endLine":12,"endColumn":26},{"ruleId":"869","severity":1,"message":"884","line":12,"column":28,"nodeType":"871","messageId":"872","endLine":12,"endColumn":34},{"ruleId":"869","severity":1,"message":"885","line":12,"column":49,"nodeType":"871","messageId":"872","endLine":12,"endColumn":59},{"ruleId":"886","severity":1,"message":"899","line":45,"column":6,"nodeType":"888","endLine":45,"endColumn":11,"suggestions":"900"},{"ruleId":"886","severity":1,"message":"899","line":68,"column":6,"nodeType":"888","endLine":68,"endColumn":11,"suggestions":"901"},{"ruleId":"886","severity":1,"message":"902","line":90,"column":6,"nodeType":"888","endLine":90,"endColumn":11,"suggestions":"903"},{"ruleId":"886","severity":1,"message":"902","line":114,"column":6,"nodeType":"888","endLine":114,"endColumn":11,"suggestions":"904"},{"ruleId":"905","severity":1,"message":"906","line":120,"column":29,"nodeType":"907","messageId":"908","endLine":120,"endColumn":31},{"ruleId":"875","severity":1,"message":"876","line":121,"column":23,"nodeType":"877","messageId":"878","endLine":121,"endColumn":25},{"ruleId":"886","severity":1,"message":"909","line":132,"column":5,"nodeType":"888","endLine":132,"endColumn":24,"suggestions":"910"},{"ruleId":"869","severity":1,"message":"874","line":109,"column":9,"nodeType":"871","messageId":"872","endLine":109,"endColumn":13},{"ruleId":"869","severity":1,"message":"884","line":110,"column":28,"nodeType":"871","messageId":"872","endLine":110,"endColumn":34},{"ruleId":"911","severity":1,"message":"912","line":57,"column":40,"nodeType":"913","messageId":"914","endLine":57,"endColumn":41,"suggestions":"915"},{"ruleId":"911","severity":1,"message":"916","line":57,"column":43,"nodeType":"913","messageId":"914","endLine":57,"endColumn":44,"suggestions":"917"},{"ruleId":"911","severity":1,"message":"918","line":57,"column":46,"nodeType":"913","messageId":"914","endLine":57,"endColumn":47,"suggestions":"919"},{"ruleId":"886","severity":1,"message":"920","line":122,"column":8,"nodeType":"888","endLine":122,"endColumn":32,"suggestions":"921"},{"ruleId":"886","severity":1,"message":"922","line":145,"column":8,"nodeType":"888","endLine":145,"endColumn":10,"suggestions":"923"},{"ruleId":"886","severity":1,"message":"924","line":149,"column":8,"nodeType":"888","endLine":149,"endColumn":30,"suggestions":"925"},{"ruleId":"886","severity":1,"message":"926","line":164,"column":8,"nodeType":"888","endLine":164,"endColumn":10,"suggestions":"927"},{"ruleId":"869","severity":1,"message":"884","line":61,"column":31,"nodeType":"871","messageId":"872","endLine":61,"endColumn":37},{"ruleId":"869","severity":1,"message":"928","line":5,"column":8,"nodeType":"871","messageId":"872","endLine":5,"endColumn":12},{"ruleId":"869","severity":1,"message":"929","line":6,"column":8,"nodeType":"871","messageId":"872","endLine":6,"endColumn":11},{"ruleId":"869","severity":1,"message":"930","line":7,"column":8,"nodeType":"871","messageId":"872","endLine":7,"endColumn":21},{"ruleId":"869","severity":1,"message":"931","line":10,"column":8,"nodeType":"871","messageId":"872","endLine":10,"endColumn":17},{"ruleId":"869","severity":1,"message":"932","line":11,"column":8,"nodeType":"871","messageId":"872","endLine":11,"endColumn":13},{"ruleId":"869","severity":1,"message":"933","line":22,"column":10,"nodeType":"871","messageId":"872","endLine":22,"endColumn":19},{"ruleId":"869","severity":1,"message":"934","line":58,"column":9,"nodeType":"871","messageId":"872","endLine":58,"endColumn":19},{"ruleId":"869","severity":1,"message":"882","line":68,"column":11,"nodeType":"871","messageId":"872","endLine":68,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":68,"column":22,"nodeType":"871","messageId":"872","endLine":68,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":68,"column":29,"nodeType":"871","messageId":"872","endLine":68,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":68,"column":50,"nodeType":"871","messageId":"872","endLine":68,"endColumn":60},{"ruleId":"869","severity":1,"message":"883","line":68,"column":22,"nodeType":"871","messageId":"872","endLine":68,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":68,"column":29,"nodeType":"871","messageId":"872","endLine":68,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":68,"column":50,"nodeType":"871","messageId":"872","endLine":68,"endColumn":60},{"ruleId":"875","severity":1,"message":"876","line":92,"column":13,"nodeType":"877","messageId":"878","endLine":92,"endColumn":15},{"ruleId":"886","severity":1,"message":"935","line":94,"column":6,"nodeType":"888","endLine":94,"endColumn":11,"suggestions":"936"},{"ruleId":"886","severity":1,"message":"899","line":115,"column":6,"nodeType":"888","endLine":115,"endColumn":17,"suggestions":"937"},{"ruleId":"875","severity":1,"message":"876","line":137,"column":27,"nodeType":"877","messageId":"878","endLine":137,"endColumn":29},{"ruleId":"886","severity":1,"message":"935","line":140,"column":6,"nodeType":"888","endLine":140,"endColumn":8,"suggestions":"938"},{"ruleId":"875","severity":1,"message":"876","line":149,"column":32,"nodeType":"877","messageId":"878","endLine":149,"endColumn":34},{"ruleId":"875","severity":1,"message":"876","line":172,"column":27,"nodeType":"877","messageId":"878","endLine":172,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":196,"column":18,"nodeType":"877","messageId":"878","endLine":196,"endColumn":20},{"ruleId":"875","severity":1,"message":"876","line":196,"column":54,"nodeType":"877","messageId":"878","endLine":196,"endColumn":56},{"ruleId":"869","severity":1,"message":"929","line":3,"column":8,"nodeType":"871","messageId":"872","endLine":3,"endColumn":11},{"ruleId":"869","severity":1,"message":"883","line":44,"column":22,"nodeType":"871","messageId":"872","endLine":44,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":44,"column":29,"nodeType":"871","messageId":"872","endLine":44,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":44,"column":50,"nodeType":"871","messageId":"872","endLine":44,"endColumn":60},{"ruleId":"886","severity":1,"message":"939","line":71,"column":6,"nodeType":"888","endLine":71,"endColumn":25,"suggestions":"940"},{"ruleId":"886","severity":1,"message":"902","line":91,"column":6,"nodeType":"888","endLine":91,"endColumn":38,"suggestions":"941"},{"ruleId":"875","severity":1,"message":"876","line":93,"column":72,"nodeType":"877","messageId":"878","endLine":93,"endColumn":74},{"ruleId":"869","severity":1,"message":"870","line":5,"column":8,"nodeType":"871","messageId":"872","endLine":5,"endColumn":22},{"ruleId":"869","severity":1,"message":"883","line":10,"column":22,"nodeType":"871","messageId":"872","endLine":10,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":10,"column":29,"nodeType":"871","messageId":"872","endLine":10,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":10,"column":50,"nodeType":"871","messageId":"872","endLine":10,"endColumn":60},{"ruleId":"869","severity":1,"message":"942","line":13,"column":10,"nodeType":"871","messageId":"872","endLine":13,"endColumn":28},{"ruleId":"869","severity":1,"message":"943","line":13,"column":30,"nodeType":"871","messageId":"872","endLine":13,"endColumn":51},{"ruleId":"886","severity":1,"message":"902","line":39,"column":6,"nodeType":"888","endLine":39,"endColumn":29,"suggestions":"944"},{"ruleId":"869","severity":1,"message":"945","line":6,"column":17,"nodeType":"871","messageId":"872","endLine":6,"endColumn":27},{"ruleId":"869","severity":1,"message":"946","line":8,"column":10,"nodeType":"871","messageId":"872","endLine":8,"endColumn":14},{"ruleId":"869","severity":1,"message":"883","line":63,"column":22,"nodeType":"871","messageId":"872","endLine":63,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":63,"column":29,"nodeType":"871","messageId":"872","endLine":63,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":63,"column":50,"nodeType":"871","messageId":"872","endLine":63,"endColumn":60},{"ruleId":"886","severity":1,"message":"899","line":95,"column":6,"nodeType":"888","endLine":95,"endColumn":11,"suggestions":"947"},{"ruleId":"905","severity":1,"message":"906","line":102,"column":38,"nodeType":"907","messageId":"908","endLine":102,"endColumn":40},{"ruleId":"875","severity":1,"message":"876","line":103,"column":25,"nodeType":"877","messageId":"878","endLine":103,"endColumn":27},{"ruleId":"886","severity":1,"message":"909","line":116,"column":6,"nodeType":"888","endLine":116,"endColumn":31,"suggestions":"948"},{"ruleId":"875","severity":1,"message":"876","line":118,"column":38,"nodeType":"877","messageId":"878","endLine":118,"endColumn":40},{"ruleId":"869","severity":1,"message":"883","line":53,"column":22,"nodeType":"871","messageId":"872","endLine":53,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":53,"column":29,"nodeType":"871","messageId":"872","endLine":53,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":53,"column":50,"nodeType":"871","messageId":"872","endLine":53,"endColumn":60},{"ruleId":"886","severity":1,"message":"899","line":95,"column":6,"nodeType":"888","endLine":95,"endColumn":8,"suggestions":"949"},{"ruleId":"886","severity":1,"message":"950","line":113,"column":6,"nodeType":"888","endLine":113,"endColumn":23,"suggestions":"951"},{"ruleId":"886","severity":1,"message":"902","line":133,"column":6,"nodeType":"888","endLine":133,"endColumn":36,"suggestions":"952"},{"ruleId":"875","severity":1,"message":"876","line":135,"column":68,"nodeType":"877","messageId":"878","endLine":135,"endColumn":70},{"ruleId":"875","severity":1,"message":"876","line":179,"column":59,"nodeType":"877","messageId":"878","endLine":179,"endColumn":61},{"ruleId":"869","severity":1,"message":"946","line":6,"column":40,"nodeType":"871","messageId":"872","endLine":6,"endColumn":44},{"ruleId":"869","severity":1,"message":"953","line":7,"column":8,"nodeType":"871","messageId":"872","endLine":7,"endColumn":17},{"ruleId":"869","severity":1,"message":"954","line":10,"column":10,"nodeType":"871","messageId":"872","endLine":10,"endColumn":20},{"ruleId":"869","severity":1,"message":"955","line":11,"column":8,"nodeType":"871","messageId":"872","endLine":11,"endColumn":14},{"ruleId":"869","severity":1,"message":"956","line":3,"column":35,"nodeType":"871","messageId":"872","endLine":3,"endColumn":45},{"ruleId":"869","severity":1,"message":"957","line":19,"column":8,"nodeType":"871","messageId":"872","endLine":19,"endColumn":21},{"ruleId":"869","severity":1,"message":"870","line":22,"column":8,"nodeType":"871","messageId":"872","endLine":22,"endColumn":22},{"ruleId":"869","severity":1,"message":"882","line":71,"column":11,"nodeType":"871","messageId":"872","endLine":71,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":71,"column":22,"nodeType":"871","messageId":"872","endLine":71,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":71,"column":29,"nodeType":"871","messageId":"872","endLine":71,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":71,"column":50,"nodeType":"871","messageId":"872","endLine":71,"endColumn":60},{"ruleId":"869","severity":1,"message":"958","line":80,"column":9,"nodeType":"871","messageId":"872","endLine":80,"endColumn":20},{"ruleId":"875","severity":1,"message":"876","line":116,"column":27,"nodeType":"877","messageId":"878","endLine":116,"endColumn":29},{"ruleId":"886","severity":1,"message":"959","line":119,"column":6,"nodeType":"888","endLine":119,"endColumn":8,"suggestions":"960"},{"ruleId":"875","severity":1,"message":"876","line":146,"column":36,"nodeType":"877","messageId":"878","endLine":146,"endColumn":38},{"ruleId":"869","severity":1,"message":"882","line":67,"column":11,"nodeType":"871","messageId":"872","endLine":67,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":67,"column":22,"nodeType":"871","messageId":"872","endLine":67,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":67,"column":29,"nodeType":"871","messageId":"872","endLine":67,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":67,"column":50,"nodeType":"871","messageId":"872","endLine":67,"endColumn":60},{"ruleId":"869","severity":1,"message":"961","line":73,"column":10,"nodeType":"871","messageId":"872","endLine":73,"endColumn":14},{"ruleId":"869","severity":1,"message":"962","line":73,"column":16,"nodeType":"871","messageId":"872","endLine":73,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":81,"column":31,"nodeType":"877","messageId":"878","endLine":81,"endColumn":33},{"ruleId":"875","severity":1,"message":"876","line":81,"column":66,"nodeType":"877","messageId":"878","endLine":81,"endColumn":68},{"ruleId":"886","severity":1,"message":"963","line":92,"column":6,"nodeType":"888","endLine":92,"endColumn":36,"suggestions":"964"},{"ruleId":"875","severity":1,"message":"876","line":97,"column":46,"nodeType":"877","messageId":"878","endLine":97,"endColumn":48},{"ruleId":"875","severity":1,"message":"898","line":103,"column":47,"nodeType":"877","messageId":"878","endLine":103,"endColumn":49},{"ruleId":"886","severity":1,"message":"965","line":111,"column":6,"nodeType":"888","endLine":111,"endColumn":30,"suggestions":"966"},{"ruleId":"886","severity":1,"message":"967","line":115,"column":6,"nodeType":"888","endLine":115,"endColumn":8,"suggestions":"968"},{"ruleId":"869","severity":1,"message":"969","line":118,"column":13,"nodeType":"871","messageId":"872","endLine":118,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":147,"column":38,"nodeType":"877","messageId":"878","endLine":147,"endColumn":40},{"ruleId":"875","severity":1,"message":"876","line":172,"column":23,"nodeType":"877","messageId":"878","endLine":172,"endColumn":25},{"ruleId":"875","severity":1,"message":"898","line":179,"column":32,"nodeType":"877","messageId":"878","endLine":179,"endColumn":34},{"ruleId":"869","severity":1,"message":"970","line":18,"column":16,"nodeType":"871","messageId":"872","endLine":18,"endColumn":24},{"ruleId":"869","severity":1,"message":"971","line":24,"column":22,"nodeType":"871","messageId":"872","endLine":24,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":132,"column":23,"nodeType":"877","messageId":"878","endLine":132,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":147,"column":25,"nodeType":"877","messageId":"878","endLine":147,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":281,"column":19,"nodeType":"877","messageId":"878","endLine":281,"endColumn":21},{"ruleId":"875","severity":1,"message":"876","line":315,"column":25,"nodeType":"877","messageId":"878","endLine":315,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":320,"column":28,"nodeType":"877","messageId":"878","endLine":320,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":321,"column":27,"nodeType":"877","messageId":"878","endLine":321,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":323,"column":19,"nodeType":"877","messageId":"878","endLine":323,"endColumn":21},{"ruleId":"875","severity":1,"message":"876","line":324,"column":54,"nodeType":"877","messageId":"878","endLine":324,"endColumn":56},{"ruleId":"875","severity":1,"message":"876","line":393,"column":37,"nodeType":"877","messageId":"878","endLine":393,"endColumn":39},{"ruleId":"886","severity":1,"message":"972","line":47,"column":5,"nodeType":"888","endLine":47,"endColumn":7,"suggestions":"973"},{"ruleId":"886","severity":1,"message":"974","line":62,"column":6,"nodeType":"888","endLine":62,"endColumn":8,"suggestions":"975"},{"ruleId":"869","severity":1,"message":"976","line":2,"column":8,"nodeType":"871","messageId":"872","endLine":2,"endColumn":17},{"ruleId":"869","severity":1,"message":"883","line":31,"column":22,"nodeType":"871","messageId":"872","endLine":31,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":31,"column":29,"nodeType":"871","messageId":"872","endLine":31,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":31,"column":50,"nodeType":"871","messageId":"872","endLine":31,"endColumn":60},{"ruleId":"875","severity":1,"message":"876","line":29,"column":31,"nodeType":"877","messageId":"878","endLine":29,"endColumn":33},{"ruleId":"875","severity":1,"message":"876","line":36,"column":31,"nodeType":"877","messageId":"878","endLine":36,"endColumn":33},{"ruleId":"875","severity":1,"message":"898","line":36,"column":49,"nodeType":"877","messageId":"878","endLine":36,"endColumn":51},{"ruleId":"875","severity":1,"message":"876","line":55,"column":88,"nodeType":"877","messageId":"878","endLine":55,"endColumn":90},{"ruleId":"869","severity":1,"message":"882","line":33,"column":11,"nodeType":"871","messageId":"872","endLine":33,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":33,"column":22,"nodeType":"871","messageId":"872","endLine":33,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":33,"column":29,"nodeType":"871","messageId":"872","endLine":33,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":33,"column":50,"nodeType":"871","messageId":"872","endLine":33,"endColumn":60},{"ruleId":"869","severity":1,"message":"977","line":36,"column":7,"nodeType":"871","messageId":"872","endLine":36,"endColumn":11},{"ruleId":"869","severity":1,"message":"934","line":39,"column":9,"nodeType":"871","messageId":"872","endLine":39,"endColumn":19},{"ruleId":"875","severity":1,"message":"876","line":70,"column":23,"nodeType":"877","messageId":"878","endLine":70,"endColumn":25},{"ruleId":"869","severity":1,"message":"969","line":83,"column":13,"nodeType":"871","messageId":"872","endLine":83,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":97,"column":14,"nodeType":"877","messageId":"878","endLine":97,"endColumn":16},{"ruleId":"875","severity":1,"message":"876","line":98,"column":14,"nodeType":"877","messageId":"878","endLine":98,"endColumn":16},{"ruleId":"875","severity":1,"message":"876","line":108,"column":25,"nodeType":"877","messageId":"878","endLine":108,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":113,"column":28,"nodeType":"877","messageId":"878","endLine":113,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":114,"column":27,"nodeType":"877","messageId":"878","endLine":114,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":116,"column":19,"nodeType":"877","messageId":"878","endLine":116,"endColumn":21},{"ruleId":"869","severity":1,"message":"978","line":1,"column":29,"nodeType":"871","messageId":"872","endLine":1,"endColumn":38},{"ruleId":"869","severity":1,"message":"979","line":1,"column":40,"nodeType":"871","messageId":"872","endLine":1,"endColumn":48},{"ruleId":"869","severity":1,"message":"928","line":4,"column":10,"nodeType":"871","messageId":"872","endLine":4,"endColumn":14},{"ruleId":"875","severity":1,"message":"876","line":22,"column":39,"nodeType":"877","messageId":"878","endLine":22,"endColumn":41},{"ruleId":"869","severity":1,"message":"928","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":14},{"ruleId":"869","severity":1,"message":"980","line":5,"column":8,"nodeType":"871","messageId":"872","endLine":5,"endColumn":20},{"ruleId":"869","severity":1,"message":"979","line":1,"column":36,"nodeType":"871","messageId":"872","endLine":1,"endColumn":44},{"ruleId":"869","severity":1,"message":"882","line":8,"column":11,"nodeType":"871","messageId":"872","endLine":8,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":8,"column":22,"nodeType":"871","messageId":"872","endLine":8,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":8,"column":29,"nodeType":"871","messageId":"872","endLine":8,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":8,"column":50,"nodeType":"871","messageId":"872","endLine":8,"endColumn":60},{"ruleId":"886","severity":1,"message":"981","line":22,"column":6,"nodeType":"888","endLine":22,"endColumn":26,"suggestions":"982"},{"ruleId":"875","severity":1,"message":"876","line":59,"column":54,"nodeType":"877","messageId":"878","endLine":59,"endColumn":56},{"ruleId":"875","severity":1,"message":"898","line":65,"column":55,"nodeType":"877","messageId":"878","endLine":65,"endColumn":57},{"ruleId":"875","severity":1,"message":"876","line":77,"column":32,"nodeType":"877","messageId":"878","endLine":77,"endColumn":34},{"ruleId":"869","severity":1,"message":"979","line":1,"column":40,"nodeType":"871","messageId":"872","endLine":1,"endColumn":48},{"ruleId":"869","severity":1,"message":"983","line":2,"column":8,"nodeType":"871","messageId":"872","endLine":2,"endColumn":14},{"ruleId":"869","severity":1,"message":"932","line":6,"column":10,"nodeType":"871","messageId":"872","endLine":6,"endColumn":15},{"ruleId":"869","severity":1,"message":"882","line":11,"column":11,"nodeType":"871","messageId":"872","endLine":11,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":11,"column":22,"nodeType":"871","messageId":"872","endLine":11,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":11,"column":29,"nodeType":"871","messageId":"872","endLine":11,"endColumn":35},{"ruleId":"869","severity":1,"message":"984","line":11,"column":37,"nodeType":"871","messageId":"872","endLine":11,"endColumn":48},{"ruleId":"869","severity":1,"message":"885","line":11,"column":50,"nodeType":"871","messageId":"872","endLine":11,"endColumn":60},{"ruleId":"875","severity":1,"message":"898","line":18,"column":30,"nodeType":"877","messageId":"878","endLine":18,"endColumn":32},{"ruleId":"886","severity":1,"message":"985","line":25,"column":6,"nodeType":"888","endLine":25,"endColumn":25,"suggestions":"986"},{"ruleId":"869","severity":1,"message":"928","line":4,"column":8,"nodeType":"871","messageId":"872","endLine":4,"endColumn":12},{"ruleId":"875","severity":1,"message":"876","line":11,"column":23,"nodeType":"877","messageId":"878","endLine":11,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":14,"column":15,"nodeType":"877","messageId":"878","endLine":14,"endColumn":17},{"ruleId":"869","severity":1,"message":"987","line":17,"column":8,"nodeType":"871","messageId":"872","endLine":17,"endColumn":16},{"ruleId":"869","severity":1,"message":"988","line":18,"column":8,"nodeType":"871","messageId":"872","endLine":18,"endColumn":16},{"ruleId":"869","severity":1,"message":"882","line":23,"column":11,"nodeType":"871","messageId":"872","endLine":23,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":23,"column":22,"nodeType":"871","messageId":"872","endLine":23,"endColumn":27},{"ruleId":"869","severity":1,"message":"885","line":23,"column":50,"nodeType":"871","messageId":"872","endLine":23,"endColumn":60},{"ruleId":"869","severity":1,"message":"989","line":26,"column":10,"nodeType":"871","messageId":"872","endLine":26,"endColumn":17},{"ruleId":"869","severity":1,"message":"990","line":28,"column":9,"nodeType":"871","messageId":"872","endLine":28,"endColumn":21},{"ruleId":"875","severity":1,"message":"876","line":33,"column":23,"nodeType":"877","messageId":"878","endLine":33,"endColumn":25},{"ruleId":"869","severity":1,"message":"991","line":21,"column":10,"nodeType":"871","messageId":"872","endLine":21,"endColumn":20},{"ruleId":"886","severity":1,"message":"992","line":91,"column":6,"nodeType":"888","endLine":91,"endColumn":8,"suggestions":"993"},{"ruleId":"875","severity":1,"message":"876","line":94,"column":37,"nodeType":"877","messageId":"878","endLine":94,"endColumn":39},{"ruleId":"875","severity":1,"message":"876","line":97,"column":37,"nodeType":"877","messageId":"878","endLine":97,"endColumn":39},{"ruleId":"875","severity":1,"message":"876","line":101,"column":37,"nodeType":"877","messageId":"878","endLine":101,"endColumn":39},{"ruleId":"875","severity":1,"message":"876","line":176,"column":23,"nodeType":"877","messageId":"878","endLine":176,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":182,"column":43,"nodeType":"877","messageId":"878","endLine":182,"endColumn":45},{"ruleId":"875","severity":1,"message":"876","line":185,"column":20,"nodeType":"877","messageId":"878","endLine":185,"endColumn":22},{"ruleId":"875","severity":1,"message":"876","line":185,"column":47,"nodeType":"877","messageId":"878","endLine":185,"endColumn":49},{"ruleId":"875","severity":1,"message":"876","line":194,"column":22,"nodeType":"877","messageId":"878","endLine":194,"endColumn":24},{"ruleId":"875","severity":1,"message":"876","line":194,"column":49,"nodeType":"877","messageId":"878","endLine":194,"endColumn":51},{"ruleId":"875","severity":1,"message":"876","line":199,"column":22,"nodeType":"877","messageId":"878","endLine":199,"endColumn":24},{"ruleId":"875","severity":1,"message":"876","line":199,"column":49,"nodeType":"877","messageId":"878","endLine":199,"endColumn":51},{"ruleId":"875","severity":1,"message":"876","line":204,"column":21,"nodeType":"877","messageId":"878","endLine":204,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":206,"column":32,"nodeType":"877","messageId":"878","endLine":206,"endColumn":34},{"ruleId":"875","severity":1,"message":"876","line":208,"column":32,"nodeType":"877","messageId":"878","endLine":208,"endColumn":34},{"ruleId":"875","severity":1,"message":"898","line":215,"column":21,"nodeType":"877","messageId":"878","endLine":215,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":281,"column":28,"nodeType":"877","messageId":"878","endLine":281,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":295,"column":28,"nodeType":"877","messageId":"878","endLine":295,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":296,"column":36,"nodeType":"877","messageId":"878","endLine":296,"endColumn":38},{"ruleId":"869","severity":1,"message":"945","line":8,"column":10,"nodeType":"871","messageId":"872","endLine":8,"endColumn":20},{"ruleId":"869","severity":1,"message":"870","line":4,"column":8,"nodeType":"871","messageId":"872","endLine":4,"endColumn":22},{"ruleId":"869","severity":1,"message":"883","line":9,"column":22,"nodeType":"871","messageId":"872","endLine":9,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":9,"column":29,"nodeType":"871","messageId":"872","endLine":9,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":9,"column":50,"nodeType":"871","messageId":"872","endLine":9,"endColumn":60},{"ruleId":"886","severity":1,"message":"902","line":35,"column":6,"nodeType":"888","endLine":35,"endColumn":35,"suggestions":"994"},{"ruleId":"869","severity":1,"message":"979","line":1,"column":27,"nodeType":"871","messageId":"872","endLine":1,"endColumn":35},{"ruleId":"869","severity":1,"message":"995","line":1,"column":37,"nodeType":"871","messageId":"872","endLine":1,"endColumn":47},{"ruleId":"886","severity":1,"message":"996","line":48,"column":8,"nodeType":"888","endLine":48,"endColumn":20,"suggestions":"997"},{"ruleId":"998","severity":1,"message":"999","line":92,"column":25,"nodeType":"1000","endLine":92,"endColumn":83},{"ruleId":"869","severity":1,"message":"978","line":1,"column":29,"nodeType":"871","messageId":"872","endLine":1,"endColumn":38},{"ruleId":"869","severity":1,"message":"979","line":1,"column":40,"nodeType":"871","messageId":"872","endLine":1,"endColumn":48},{"ruleId":"875","severity":1,"message":"876","line":28,"column":28,"nodeType":"877","messageId":"878","endLine":28,"endColumn":30},{"ruleId":"875","severity":1,"message":"898","line":31,"column":28,"nodeType":"877","messageId":"878","endLine":31,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":44,"column":53,"nodeType":"877","messageId":"878","endLine":44,"endColumn":55},{"ruleId":"869","severity":1,"message":"979","line":1,"column":17,"nodeType":"871","messageId":"872","endLine":1,"endColumn":25},{"ruleId":"869","severity":1,"message":"978","line":1,"column":27,"nodeType":"871","messageId":"872","endLine":1,"endColumn":36},{"ruleId":"869","severity":1,"message":"874","line":29,"column":9,"nodeType":"871","messageId":"872","endLine":29,"endColumn":13},{"ruleId":"869","severity":1,"message":"883","line":30,"column":22,"nodeType":"871","messageId":"872","endLine":30,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":30,"column":29,"nodeType":"871","messageId":"872","endLine":30,"endColumn":35},{"ruleId":"869","severity":1,"message":"984","line":30,"column":37,"nodeType":"871","messageId":"872","endLine":30,"endColumn":48},{"ruleId":"869","severity":1,"message":"885","line":30,"column":50,"nodeType":"871","messageId":"872","endLine":30,"endColumn":60},{"ruleId":"869","severity":1,"message":"1001","line":2,"column":8,"nodeType":"871","messageId":"872","endLine":2,"endColumn":29},{"ruleId":"869","severity":1,"message":"1002","line":9,"column":8,"nodeType":"871","messageId":"872","endLine":9,"endColumn":21},{"ruleId":"869","severity":1,"message":"1003","line":18,"column":10,"nodeType":"871","messageId":"872","endLine":18,"endColumn":31},{"ruleId":"869","severity":1,"message":"991","line":21,"column":10,"nodeType":"871","messageId":"872","endLine":21,"endColumn":20},{"ruleId":"875","severity":1,"message":"876","line":126,"column":23,"nodeType":"877","messageId":"878","endLine":126,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":134,"column":27,"nodeType":"877","messageId":"878","endLine":134,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":139,"column":30,"nodeType":"877","messageId":"878","endLine":139,"endColumn":32},{"ruleId":"875","severity":1,"message":"876","line":140,"column":29,"nodeType":"877","messageId":"878","endLine":140,"endColumn":31},{"ruleId":"875","severity":1,"message":"876","line":142,"column":21,"nodeType":"877","messageId":"878","endLine":142,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":142,"column":48,"nodeType":"877","messageId":"878","endLine":142,"endColumn":50},{"ruleId":"875","severity":1,"message":"876","line":144,"column":32,"nodeType":"877","messageId":"878","endLine":144,"endColumn":34},{"ruleId":"875","severity":1,"message":"898","line":151,"column":21,"nodeType":"877","messageId":"878","endLine":151,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":177,"column":23,"nodeType":"877","messageId":"878","endLine":177,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":179,"column":35,"nodeType":"877","messageId":"878","endLine":179,"endColumn":37},{"ruleId":"875","severity":1,"message":"876","line":185,"column":35,"nodeType":"877","messageId":"878","endLine":185,"endColumn":37},{"ruleId":"875","severity":1,"message":"876","line":40,"column":23,"nodeType":"877","messageId":"878","endLine":40,"endColumn":25},{"ruleId":"886","severity":1,"message":"1004","line":60,"column":6,"nodeType":"888","endLine":60,"endColumn":8,"suggestions":"1005"},{"ruleId":"886","severity":1,"message":"902","line":81,"column":8,"nodeType":"888","endLine":81,"endColumn":38,"suggestions":"1006"},{"ruleId":"869","severity":1,"message":"969","line":85,"column":13,"nodeType":"871","messageId":"872","endLine":85,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":111,"column":25,"nodeType":"877","messageId":"878","endLine":111,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":116,"column":28,"nodeType":"877","messageId":"878","endLine":116,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":117,"column":27,"nodeType":"877","messageId":"878","endLine":117,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":119,"column":19,"nodeType":"877","messageId":"878","endLine":119,"endColumn":21},{"ruleId":"869","severity":1,"message":"1007","line":2,"column":8,"nodeType":"871","messageId":"872","endLine":2,"endColumn":18},{"ruleId":"998","severity":1,"message":"999","line":20,"column":41,"nodeType":"1000","endLine":20,"endColumn":118},{"ruleId":"998","severity":1,"message":"999","line":21,"column":47,"nodeType":"1000","endLine":21,"endColumn":105},{"ruleId":"869","severity":1,"message":"978","line":1,"column":29,"nodeType":"871","messageId":"872","endLine":1,"endColumn":38},{"ruleId":"869","severity":1,"message":"979","line":1,"column":40,"nodeType":"871","messageId":"872","endLine":1,"endColumn":48},{"ruleId":"869","severity":1,"message":"987","line":12,"column":8,"nodeType":"871","messageId":"872","endLine":12,"endColumn":16},{"ruleId":"869","severity":1,"message":"988","line":13,"column":8,"nodeType":"871","messageId":"872","endLine":13,"endColumn":16},{"ruleId":"869","severity":1,"message":"883","line":30,"column":22,"nodeType":"871","messageId":"872","endLine":30,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":30,"column":29,"nodeType":"871","messageId":"872","endLine":30,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":30,"column":50,"nodeType":"871","messageId":"872","endLine":30,"endColumn":60},{"ruleId":"869","severity":1,"message":"969","line":39,"column":13,"nodeType":"871","messageId":"872","endLine":39,"endColumn":25},{"ruleId":"869","severity":1,"message":"945","line":15,"column":10,"nodeType":"871","messageId":"872","endLine":15,"endColumn":20},{"ruleId":"869","severity":1,"message":"1008","line":16,"column":8,"nodeType":"871","messageId":"872","endLine":16,"endColumn":19},{"ruleId":"869","severity":1,"message":"1009","line":66,"column":10,"nodeType":"871","messageId":"872","endLine":66,"endColumn":14},{"ruleId":"869","severity":1,"message":"1010","line":69,"column":9,"nodeType":"871","messageId":"872","endLine":69,"endColumn":14},{"ruleId":"869","severity":1,"message":"1011","line":92,"column":9,"nodeType":"871","messageId":"872","endLine":92,"endColumn":25},{"ruleId":"869","severity":1,"message":"1012","line":95,"column":9,"nodeType":"871","messageId":"872","endLine":95,"endColumn":26},{"ruleId":"875","severity":1,"message":"876","line":104,"column":23,"nodeType":"877","messageId":"878","endLine":104,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":177,"column":25,"nodeType":"877","messageId":"878","endLine":177,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":182,"column":28,"nodeType":"877","messageId":"878","endLine":182,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":183,"column":27,"nodeType":"877","messageId":"878","endLine":183,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":185,"column":19,"nodeType":"877","messageId":"878","endLine":185,"endColumn":21},{"ruleId":"998","severity":1,"message":"999","line":296,"column":19,"nodeType":"1000","endLine":296,"endColumn":71},{"ruleId":"869","severity":1,"message":"1013","line":5,"column":10,"nodeType":"871","messageId":"872","endLine":5,"endColumn":26},{"ruleId":"869","severity":1,"message":"931","line":14,"column":8,"nodeType":"871","messageId":"872","endLine":14,"endColumn":17},{"ruleId":"869","severity":1,"message":"932","line":15,"column":10,"nodeType":"871","messageId":"872","endLine":15,"endColumn":15},{"ruleId":"869","severity":1,"message":"1014","line":20,"column":8,"nodeType":"871","messageId":"872","endLine":20,"endColumn":17},{"ruleId":"869","severity":1,"message":"882","line":87,"column":11,"nodeType":"871","messageId":"872","endLine":87,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":87,"column":22,"nodeType":"871","messageId":"872","endLine":87,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":87,"column":29,"nodeType":"871","messageId":"872","endLine":87,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":87,"column":50,"nodeType":"871","messageId":"872","endLine":87,"endColumn":60},{"ruleId":"886","severity":1,"message":"1015","line":113,"column":10,"nodeType":"888","endLine":113,"endColumn":23,"suggestions":"1016"},{"ruleId":"869","severity":1,"message":"1017","line":4,"column":10,"nodeType":"871","messageId":"872","endLine":4,"endColumn":23},{"ruleId":"869","severity":1,"message":"1018","line":4,"column":25,"nodeType":"871","messageId":"872","endLine":4,"endColumn":30},{"ruleId":"869","severity":1,"message":"1019","line":4,"column":32,"nodeType":"871","messageId":"872","endLine":4,"endColumn":38},{"ruleId":"869","severity":1,"message":"1020","line":6,"column":8,"nodeType":"871","messageId":"872","endLine":6,"endColumn":14},{"ruleId":"869","severity":1,"message":"1010","line":46,"column":9,"nodeType":"871","messageId":"872","endLine":46,"endColumn":14},{"ruleId":"875","severity":1,"message":"876","line":57,"column":22,"nodeType":"877","messageId":"878","endLine":57,"endColumn":24},{"ruleId":"869","severity":1,"message":"969","line":81,"column":13,"nodeType":"871","messageId":"872","endLine":81,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":107,"column":25,"nodeType":"877","messageId":"878","endLine":107,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":112,"column":28,"nodeType":"877","messageId":"878","endLine":112,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":113,"column":27,"nodeType":"877","messageId":"878","endLine":113,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":115,"column":19,"nodeType":"877","messageId":"878","endLine":115,"endColumn":21},{"ruleId":"869","severity":1,"message":"978","line":1,"column":27,"nodeType":"871","messageId":"872","endLine":1,"endColumn":36},{"ruleId":"869","severity":1,"message":"870","line":11,"column":8,"nodeType":"871","messageId":"872","endLine":11,"endColumn":22},{"ruleId":"869","severity":1,"message":"882","line":64,"column":11,"nodeType":"871","messageId":"872","endLine":64,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":64,"column":22,"nodeType":"871","messageId":"872","endLine":64,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":64,"column":29,"nodeType":"871","messageId":"872","endLine":64,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":64,"column":50,"nodeType":"871","messageId":"872","endLine":64,"endColumn":60},{"ruleId":"875","severity":1,"message":"876","line":78,"column":17,"nodeType":"877","messageId":"878","endLine":78,"endColumn":19},{"ruleId":"875","severity":1,"message":"876","line":78,"column":53,"nodeType":"877","messageId":"878","endLine":78,"endColumn":55},{"ruleId":"875","severity":1,"message":"876","line":200,"column":31,"nodeType":"877","messageId":"878","endLine":200,"endColumn":33},{"ruleId":"869","severity":1,"message":"1021","line":4,"column":10,"nodeType":"871","messageId":"872","endLine":4,"endColumn":15},{"ruleId":"869","severity":1,"message":"1022","line":4,"column":17,"nodeType":"871","messageId":"872","endLine":4,"endColumn":21},{"ruleId":"869","severity":1,"message":"1023","line":19,"column":10,"nodeType":"871","messageId":"872","endLine":19,"endColumn":21},{"ruleId":"869","severity":1,"message":"1024","line":26,"column":10,"nodeType":"871","messageId":"872","endLine":26,"endColumn":22},{"ruleId":"869","severity":1,"message":"1025","line":96,"column":10,"nodeType":"871","messageId":"872","endLine":96,"endColumn":19},{"ruleId":"875","severity":1,"message":"876","line":99,"column":37,"nodeType":"877","messageId":"878","endLine":99,"endColumn":39},{"ruleId":"875","severity":1,"message":"876","line":106,"column":23,"nodeType":"877","messageId":"878","endLine":106,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":106,"column":40,"nodeType":"877","messageId":"878","endLine":106,"endColumn":42},{"ruleId":"869","severity":1,"message":"969","line":122,"column":13,"nodeType":"871","messageId":"872","endLine":122,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":138,"column":14,"nodeType":"877","messageId":"878","endLine":138,"endColumn":16},{"ruleId":"875","severity":1,"message":"876","line":141,"column":14,"nodeType":"877","messageId":"878","endLine":141,"endColumn":16},{"ruleId":"875","severity":1,"message":"876","line":173,"column":25,"nodeType":"877","messageId":"878","endLine":173,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":173,"column":44,"nodeType":"877","messageId":"878","endLine":173,"endColumn":46},{"ruleId":"875","severity":1,"message":"876","line":178,"column":28,"nodeType":"877","messageId":"878","endLine":178,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":178,"column":47,"nodeType":"877","messageId":"878","endLine":178,"endColumn":49},{"ruleId":"875","severity":1,"message":"876","line":180,"column":20,"nodeType":"877","messageId":"878","endLine":180,"endColumn":22},{"ruleId":"875","severity":1,"message":"876","line":180,"column":39,"nodeType":"877","messageId":"878","endLine":180,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":183,"column":19,"nodeType":"877","messageId":"878","endLine":183,"endColumn":21},{"ruleId":"875","severity":1,"message":"876","line":185,"column":22,"nodeType":"877","messageId":"878","endLine":185,"endColumn":24},{"ruleId":"875","severity":1,"message":"876","line":315,"column":34,"nodeType":"877","messageId":"878","endLine":315,"endColumn":36},{"ruleId":"875","severity":1,"message":"876","line":329,"column":32,"nodeType":"877","messageId":"878","endLine":329,"endColumn":34},{"ruleId":"875","severity":1,"message":"876","line":348,"column":45,"nodeType":"877","messageId":"878","endLine":348,"endColumn":47},{"ruleId":"875","severity":1,"message":"876","line":349,"column":41,"nodeType":"877","messageId":"878","endLine":349,"endColumn":43},{"ruleId":"869","severity":1,"message":"883","line":9,"column":22,"nodeType":"871","messageId":"872","endLine":9,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":9,"column":29,"nodeType":"871","messageId":"872","endLine":9,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":9,"column":50,"nodeType":"871","messageId":"872","endLine":9,"endColumn":60},{"ruleId":"886","severity":1,"message":"1026","line":25,"column":6,"nodeType":"888","endLine":25,"endColumn":12,"suggestions":"1027"},{"ruleId":"869","severity":1,"message":"883","line":9,"column":22,"nodeType":"871","messageId":"872","endLine":9,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":9,"column":29,"nodeType":"871","messageId":"872","endLine":9,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":9,"column":50,"nodeType":"871","messageId":"872","endLine":9,"endColumn":60},{"ruleId":"886","severity":1,"message":"1028","line":31,"column":3,"nodeType":"888","endLine":31,"endColumn":5,"suggestions":"1029"},{"ruleId":"869","severity":1,"message":"995","line":1,"column":17,"nodeType":"871","messageId":"872","endLine":1,"endColumn":27},{"ruleId":"869","severity":1,"message":"978","line":1,"column":29,"nodeType":"871","messageId":"872","endLine":1,"endColumn":38},{"ruleId":"869","severity":1,"message":"979","line":1,"column":40,"nodeType":"871","messageId":"872","endLine":1,"endColumn":48},{"ruleId":"869","severity":1,"message":"978","line":1,"column":40,"nodeType":"871","messageId":"872","endLine":1,"endColumn":49},{"ruleId":"869","severity":1,"message":"882","line":14,"column":11,"nodeType":"871","messageId":"872","endLine":14,"endColumn":20},{"ruleId":"869","severity":1,"message":"883","line":14,"column":22,"nodeType":"871","messageId":"872","endLine":14,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":14,"column":29,"nodeType":"871","messageId":"872","endLine":14,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":14,"column":50,"nodeType":"871","messageId":"872","endLine":14,"endColumn":60},{"ruleId":"869","severity":1,"message":"1030","line":2,"column":22,"nodeType":"871","messageId":"872","endLine":2,"endColumn":35},{"ruleId":"869","severity":1,"message":"1031","line":18,"column":10,"nodeType":"871","messageId":"872","endLine":18,"endColumn":21},{"ruleId":"869","severity":1,"message":"1032","line":19,"column":10,"nodeType":"871","messageId":"872","endLine":19,"endColumn":16},{"ruleId":"892","severity":1,"message":"1033","line":66,"column":3,"nodeType":"894","messageId":"878","endLine":66,"endColumn":14},{"ruleId":"892","severity":1,"message":"1034","line":79,"column":3,"nodeType":"894","messageId":"878","endLine":79,"endColumn":18},{"ruleId":"869","severity":1,"message":"1035","line":88,"column":7,"nodeType":"871","messageId":"872","endLine":88,"endColumn":15},{"ruleId":"875","severity":1,"message":"876","line":99,"column":23,"nodeType":"877","messageId":"878","endLine":99,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":99,"column":40,"nodeType":"877","messageId":"878","endLine":99,"endColumn":42},{"ruleId":"869","severity":1,"message":"1036","line":102,"column":9,"nodeType":"871","messageId":"872","endLine":102,"endColumn":16},{"ruleId":"869","severity":1,"message":"958","line":107,"column":9,"nodeType":"871","messageId":"872","endLine":107,"endColumn":20},{"ruleId":"869","severity":1,"message":"969","line":112,"column":15,"nodeType":"871","messageId":"872","endLine":112,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":186,"column":25,"nodeType":"877","messageId":"878","endLine":186,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":186,"column":44,"nodeType":"877","messageId":"878","endLine":186,"endColumn":46},{"ruleId":"875","severity":1,"message":"876","line":191,"column":28,"nodeType":"877","messageId":"878","endLine":191,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":191,"column":47,"nodeType":"877","messageId":"878","endLine":191,"endColumn":49},{"ruleId":"875","severity":1,"message":"876","line":193,"column":20,"nodeType":"877","messageId":"878","endLine":193,"endColumn":22},{"ruleId":"875","severity":1,"message":"876","line":193,"column":39,"nodeType":"877","messageId":"878","endLine":193,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":197,"column":18,"nodeType":"877","messageId":"878","endLine":197,"endColumn":20},{"ruleId":"875","severity":1,"message":"876","line":199,"column":22,"nodeType":"877","messageId":"878","endLine":199,"endColumn":24},{"ruleId":"875","severity":1,"message":"876","line":199,"column":49,"nodeType":"877","messageId":"878","endLine":199,"endColumn":51},{"ruleId":"875","severity":1,"message":"876","line":223,"column":23,"nodeType":"877","messageId":"878","endLine":223,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":239,"column":23,"nodeType":"877","messageId":"878","endLine":239,"endColumn":25},{"ruleId":"875","severity":1,"message":"898","line":239,"column":40,"nodeType":"877","messageId":"878","endLine":239,"endColumn":42},{"ruleId":"875","severity":1,"message":"876","line":251,"column":23,"nodeType":"877","messageId":"878","endLine":251,"endColumn":25},{"ruleId":"869","severity":1,"message":"1037","line":9,"column":8,"nodeType":"871","messageId":"872","endLine":9,"endColumn":22},{"ruleId":"869","severity":1,"message":"1038","line":11,"column":10,"nodeType":"871","messageId":"872","endLine":11,"endColumn":13},{"ruleId":"869","severity":1,"message":"1039","line":32,"column":10,"nodeType":"871","messageId":"872","endLine":32,"endColumn":31},{"ruleId":"875","severity":1,"message":"898","line":79,"column":23,"nodeType":"877","messageId":"878","endLine":79,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":83,"column":23,"nodeType":"877","messageId":"878","endLine":83,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":117,"column":41,"nodeType":"877","messageId":"878","endLine":117,"endColumn":43},{"ruleId":"875","severity":1,"message":"876","line":129,"column":35,"nodeType":"877","messageId":"878","endLine":129,"endColumn":37},{"ruleId":"875","severity":1,"message":"876","line":146,"column":39,"nodeType":"877","messageId":"878","endLine":146,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":208,"column":26,"nodeType":"877","messageId":"878","endLine":208,"endColumn":28},{"ruleId":"875","severity":1,"message":"876","line":213,"column":29,"nodeType":"877","messageId":"878","endLine":213,"endColumn":31},{"ruleId":"875","severity":1,"message":"876","line":214,"column":28,"nodeType":"877","messageId":"878","endLine":214,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":216,"column":21,"nodeType":"877","messageId":"878","endLine":216,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":216,"column":38,"nodeType":"877","messageId":"878","endLine":216,"endColumn":40},{"ruleId":"875","severity":1,"message":"876","line":216,"column":96,"nodeType":"877","messageId":"878","endLine":216,"endColumn":98},{"ruleId":"875","severity":1,"message":"876","line":216,"column":113,"nodeType":"877","messageId":"878","endLine":216,"endColumn":115},{"ruleId":"1040","severity":1,"message":"1041","line":230,"column":13,"nodeType":"1042","endLine":230,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":37,"column":23,"nodeType":"877","messageId":"878","endLine":37,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":69,"column":25,"nodeType":"877","messageId":"878","endLine":69,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":74,"column":28,"nodeType":"877","messageId":"878","endLine":74,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":75,"column":27,"nodeType":"877","messageId":"878","endLine":75,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":77,"column":19,"nodeType":"877","messageId":"878","endLine":77,"endColumn":21},{"ruleId":"869","severity":1,"message":"955","line":4,"column":8,"nodeType":"871","messageId":"872","endLine":4,"endColumn":14},{"ruleId":"869","severity":1,"message":"932","line":8,"column":10,"nodeType":"871","messageId":"872","endLine":8,"endColumn":15},{"ruleId":"869","severity":1,"message":"1043","line":9,"column":8,"nodeType":"871","messageId":"872","endLine":9,"endColumn":17},{"ruleId":"869","severity":1,"message":"932","line":7,"column":10,"nodeType":"871","messageId":"872","endLine":7,"endColumn":15},{"ruleId":"869","severity":1,"message":"979","line":1,"column":16,"nodeType":"871","messageId":"872","endLine":1,"endColumn":24},{"ruleId":"869","severity":1,"message":"882","line":42,"column":13,"nodeType":"871","messageId":"872","endLine":42,"endColumn":22},{"ruleId":"869","severity":1,"message":"883","line":42,"column":24,"nodeType":"871","messageId":"872","endLine":42,"endColumn":29},{"ruleId":"869","severity":1,"message":"885","line":42,"column":44,"nodeType":"871","messageId":"872","endLine":42,"endColumn":54},{"ruleId":"998","severity":1,"message":"999","line":118,"column":25,"nodeType":"1000","endLine":118,"endColumn":77},{"ruleId":"869","severity":1,"message":"883","line":47,"column":22,"nodeType":"871","messageId":"872","endLine":47,"endColumn":27},{"ruleId":"869","severity":1,"message":"884","line":47,"column":29,"nodeType":"871","messageId":"872","endLine":47,"endColumn":35},{"ruleId":"869","severity":1,"message":"885","line":47,"column":50,"nodeType":"871","messageId":"872","endLine":47,"endColumn":60},{"ruleId":"869","severity":1,"message":"1012","line":58,"column":9,"nodeType":"871","messageId":"872","endLine":58,"endColumn":26},{"ruleId":"869","severity":1,"message":"979","line":1,"column":17,"nodeType":"871","messageId":"872","endLine":1,"endColumn":25},{"ruleId":"869","severity":1,"message":"978","line":1,"column":27,"nodeType":"871","messageId":"872","endLine":1,"endColumn":36},{"ruleId":"875","severity":1,"message":"898","line":30,"column":14,"nodeType":"877","messageId":"878","endLine":30,"endColumn":16},{"ruleId":"869","severity":1,"message":"1044","line":11,"column":10,"nodeType":"871","messageId":"872","endLine":11,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":280,"column":23,"nodeType":"877","messageId":"878","endLine":280,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":321,"column":25,"nodeType":"877","messageId":"878","endLine":321,"endColumn":27},{"ruleId":"875","severity":1,"message":"876","line":326,"column":28,"nodeType":"877","messageId":"878","endLine":326,"endColumn":30},{"ruleId":"875","severity":1,"message":"876","line":327,"column":27,"nodeType":"877","messageId":"878","endLine":327,"endColumn":29},{"ruleId":"875","severity":1,"message":"876","line":329,"column":19,"nodeType":"877","messageId":"878","endLine":329,"endColumn":21},{"ruleId":"869","severity":1,"message":"1045","line":1,"column":50,"nodeType":"871","messageId":"872","endLine":1,"endColumn":56},{"ruleId":"869","severity":1,"message":"1046","line":26,"column":25,"nodeType":"871","messageId":"872","endLine":26,"endColumn":39},{"ruleId":"886","severity":1,"message":"1047","line":60,"column":8,"nodeType":"888","endLine":60,"endColumn":16,"suggestions":"1048"},{"ruleId":"886","severity":1,"message":"1049","line":45,"column":8,"nodeType":"888","endLine":45,"endColumn":10,"suggestions":"1050"},"no-native-reassign",["1051"],"no-negated-in-lhs",["1052"],"no-unused-vars","'LoadingSpinner' is defined but never used.","Identifier","unusedVar","'InterviewItems' is defined but never used.","'auth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EmailIcon' is defined but never used.","'ListAltIcon' is defined but never used.","'AssignmentIndIcon' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'status' is assigned a value but never used.","'clearError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'unreadChats'. Either include it or remove the dependency array. You can also do a functional update 'setUnreadChats(u => ...)' if you only need 'unreadChats' in the 'setUnreadChats' call.","ArrayExpression",["1053"],"React Hook useEffect has a missing dependency: 'getBadges'. Either include it or remove the dependency array.",["1054"],"no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.",["1055"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'auth.token', 'auth.userId', and 'sendRequest'. Either include them or remove the dependency array.",["1056"],["1057"],"React Hook useEffect has missing dependencies: 'auth.token' and 'sendRequest'. Either include them or remove the dependency array.",["1058"],["1059"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'approvedCertCount'. Either include it or remove the dependency array. You can also do a functional update 'setApprovedCertCount(a => ...)' if you only need 'approvedCertCount' in the 'setApprovedCertCount' call.",["1060"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["1061","1062"],"Unnecessary escape character: \\^.",["1063","1064"],"Unnecessary escape character: \\*.",["1065","1066"],"React Hook useEffect has a missing dependency: 'goBack'. Either include it or remove the dependency array.",["1067"],"React Hook useEffect has missing dependencies: 'callPeer' and 'props.location.state'. Either include them or remove the dependency array.",["1068"],"React Hook useEffect has a missing dependency: 'acceptCall'. Either include it or remove the dependency array.",["1069"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["1070"],"'Grid' is defined but never used.","'Box' is defined but never used.","'ExitToAppIcon' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'Copyright' is defined but never used.","'paperStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.setting.role', 'auth.token', 'auth.userId', and 'sendRequest'. Either include them or remove the dependency array.",["1071"],["1072"],["1073"],"React Hook useEffect has missing dependencies: 'auth.token', 'certId', and 'sendRequest'. Either include them or remove the dependency array.",["1074"],["1075"],"'receivedCandResume' is assigned a value but never used.","'setReceivedCandResume' is assigned a value but never used.",["1076"],"'Typography' is defined but never used.","'Link' is defined but never used.",["1077"],["1078"],["1079"],"React Hook useEffect has missing dependencies: 'auth.token', 'interId', and 'sendRequest'. Either include them or remove the dependency array.",["1080"],["1081"],"'myClasses' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'ViewInterview' is defined but never used.","'CurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.setting.role', 'auth.token', 'props.id', and 'sendRequest'. Either include them or remove the dependency array.",["1082"],"'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchChats', 'openChat', and 'socket'. Either include them or remove the dependency array.",["1083"],"React Hook useEffect has missing dependencies: 'fetchChats' and 'socket'. Either include them or remove the dependency array.",["1084"],"React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.",["1085"],"'responseData' is assigned a value but never used.","'Redirect' is defined but never used.","'AiOutlineUserSwitch' is defined but never used.","React Hook useCallback has a missing dependency: 'httpAbortCtrl'. Either include it or remove the dependency array.",["1086"],"React Hook useEffect has a missing dependency: 'httpAbortCtrl'. Either include it or remove the dependency array.",["1087"],"'SearchBar' is defined but never used.","'date' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'SettingsIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchMessageData' and 'markRead'. Either include them or remove the dependency array.",["1088"],"'Avatar' is defined but never used.","'sendRequest' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.userId' and 'setData'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1089"],"'Snackbar' is defined but never used.","'MuiAlert' is defined but never used.","'success' is assigned a value but never used.","'clearSuccess' is assigned a value but never used.","'ImUserPlus' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'props.interId', and 'sendRequest'. Either include them or remove the dependency array.",["1090"],["1091"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1092"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PersonAddDisabledIcon' is defined but never used.","'PersonAddIcon' is defined but never used.","'BsFillPersonCheckFill' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'interviewId', 'loadedInterview', and 'sendRequest'. Either include them or remove the dependency array.",["1093"],["1094"],"'IconButton' is defined but never used.","'UploadPhoto' is defined but never used.","'open' is assigned a value but never used.","'theme' is assigned a value but never used.","'handleOpenDialog' is assigned a value but never used.","'handleCloseDialog' is assigned a value but never used.","'FaRegCheckCircle' is defined but never used.","'BlockIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'props.field', and 'sendRequest'. Either include them or remove the dependency array.",["1095"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'thumbn' is defined but never used.","'green' is defined but never used.","'pink' is defined but never used.","'SiCheckmarx' is defined but never used.","'GrUserExpert' is defined but never used.","'interview' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.",["1096"],"React Hook useEffect has missing dependencies: 'auth.setting._id', 'auth.token', and 'sendRequest'. Either include them or remove the dependency array.",["1097"],"'ThemeProvider' is defined but never used.","'VscVmActive' is defined but never used.","'Hidden' is defined but never used.","Duplicate key 'statusStyle'.","Duplicate key 'statusIconStyle'.","'location' is assigned a value but never used.","'matches' is assigned a value but never used.","'ExpandMoreIcon' is defined but never used.","'Fab' is defined but never used.","'setNestedObjectValues' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Education' is defined but never used.","'useHttpClient' is defined but never used.","'useRef' is defined but never used.","'setCallMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'receivingCall'. Either include it or remove the dependency array.",["1098"],"React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["1099"],"no-global-assign","no-unsafe-negation",{"desc":"1100","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1106","fix":"1108"},{"desc":"1109","fix":"1110"},{"desc":"1109","fix":"1111"},{"desc":"1112","fix":"1113"},{"messageId":"1114","fix":"1115","desc":"1116"},{"messageId":"1117","fix":"1118","desc":"1119"},{"messageId":"1114","fix":"1120","desc":"1116"},{"messageId":"1117","fix":"1121","desc":"1119"},{"messageId":"1114","fix":"1122","desc":"1116"},{"messageId":"1117","fix":"1123","desc":"1119"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1130","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1106","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1161","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1174","fix":"1175"},{"desc":"1151","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},"Update the dependencies array to be: [socket, unreadChats]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [auth.userId, getBadges]",{"range":"1189","text":"1190"},"Update the dependencies array to be: [initialValues]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest, uid]",{"range":"1193","text":"1194"},{"range":"1195","text":"1194"},"Update the dependencies array to be: [auth.token, sendRequest, uid]",{"range":"1196","text":"1197"},{"range":"1198","text":"1197"},"Update the dependencies array to be: [uid, certificates, approvedCertCount]",{"range":"1199","text":"1200"},"removeEscape",{"range":"1201","text":"1202"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1203","text":"1204"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1205","text":"1202"},{"range":"1206","text":"1204"},{"range":"1207","text":"1202"},{"range":"1208","text":"1204"},"Update the dependencies array to be: [myPeer, stream, socket, goBack]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [callPeer, props.location.state]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [acceptCall, caller, callerSignal]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [socket]",{"range":"1215","text":"1216"},"Update the dependencies array to be: [auth.setting.role, auth.token, auth.userId, sendRequest, uid]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [uid, role, auth.userId, auth.token, sendRequest]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [auth.setting.role, auth.token, auth.userId, sendRequest]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [auth.token, certId, loadedCertificate, sendRequest]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [loadedField, loadedCertificate, sendRequest, auth.token]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [auth.token, props.interCandidates, sendRequest]",{"range":"1227","text":"1228"},{"range":"1229","text":"1194"},"Update the dependencies array to be: [uid, loadedCertificates, approvedCertCount]",{"range":"1230","text":"1231"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest]",{"range":"1232","text":"1233"},"Update the dependencies array to be: [auth.token, interId, loadedInterview, sendRequest]",{"range":"1234","text":"1235"},"Update the dependencies array to be: [auth.token, loadedField, loadedInterview, sendRequest]",{"range":"1236","text":"1237"},"Update the dependencies array to be: [auth.setting.role, auth.token, props.id, sendRequest]",{"range":"1238","text":"1239"},"Update the dependencies array to be: [data, selectedChat, messages, socket, openChat, fetchChats]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [fetchChats, messages, selectedChat, socket]",{"range":"1242","text":"1243"},"Update the dependencies array to be: [fetchChats]",{"range":"1244","text":"1245"},"Update the dependencies array to be: [httpAbortCtrl]",{"range":"1246","text":"1247"},{"range":"1248","text":"1247"},"Update the dependencies array to be: [fetchMessageData, markRead, props.selectedChat]",{"range":"1249","text":"1250"},"Update the dependencies array to be: [selectedChat, data, auth.userId, setData]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [auth.token, props.interId, sendRequest]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [auth.token, props.interReceivedRequests, sendRequest]",{"range":"1255","text":"1256"},"Update the dependencies array to be: [props, props.file]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [auth.token, interviewId, loadedInterview, sendRequest]",{"range":"1259","text":"1260"},{"range":"1261","text":"1237"},"Update the dependencies array to be: [auth.token, loadedField, props.field, sendRequest]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [faqs, sendRequest]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [auth.setting._id, auth.token, sendRequest]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [receivingCall, socket]",{"range":"1268","text":"1269"},"Update the dependencies array to be: [progress]",{"range":"1270","text":"1271"},[3241,3249],"[socket, unreadChats]",[3330,3343],"[auth.userId, getBadges]",[2153,2155],"[initialValues]",[1521,1526],"[auth.token, auth.userId, sendRequest, uid]",[2120,2125],[2651,2656],"[auth.token, sendRequest, uid]",[3209,3214],[3552,3571],"[uid, certificates, approvedCertCount]",[1620,1621],"",[1620,1620],"\\",[1623,1624],[1623,1623],[1626,1627],[1626,1626],[3531,3555],"[myPeer, stream, socket, goBack]",[4280,4282],"[callPeer, props.location.state]",[4380,4402],"[acceptCall, caller, callerSignal]",[4790,4792],"[socket]",[2897,2902],"[auth.setting.role, auth.token, auth.userId, sendRequest, uid]",[3449,3460],"[uid, role, auth.userId, auth.token, sendRequest]",[4182,4184],"[auth.setting.role, auth.token, auth.userId, sendRequest]",[2351,2370],"[auth.token, certId, loadedCertificate, sendRequest]",[2920,2952],"[loadedField, loadedCertificate, sendRequest, auth.token]",[1289,1312],"[auth.token, props.interCandidates, sendRequest]",[3056,3061],[3458,3483],"[uid, loadedCertificates, approvedCertCount]",[2963,2965],"[auth.token, auth.userId, sendRequest]",[3513,3530],"[auth.token, interId, loadedInterview, sendRequest]",[4078,4108],"[auth.token, loadedField, loadedInterview, sendRequest]",[3910,3912],"[auth.setting.role, auth.token, props.id, sendRequest]",[2506,2536],"[data, selectedChat, messages, socket, openChat, fetchChats]",[3143,3167],"[fetchChats, messages, selectedChat, socket]",[3218,3220],"[fetchChats]",[1283,1285],"[httpAbortCtrl]",[1590,1592],[821,841],"[fetchMessageData, markRead, props.selectedChat]",[956,975],"[selectedChat, data, auth.userId, setData]",[2881,2883],"[auth.token, props.interId, sendRequest]",[1239,1268],"[auth.token, props.interReceivedRequests, sendRequest]",[1472,1484],"[props, props.file]",[2123,2125],"[auth.token, interviewId, loadedInterview, sendRequest]",[2727,2757],[3361,3374],"[auth.token, loadedField, props.field, sendRequest]",[707,713],"[faqs, sendRequest]",[1057,1059],"[auth.setting._id, auth.token, sendRequest]",[2099,2107],"[receivingCall, socket]",[1188,1190],"[progress]"]